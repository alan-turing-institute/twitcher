{"version":3,"sources":["/Users/egabasova/Projects/twitcher/webpack/bootstrap","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Encoding.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Util.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Types.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Reflection.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Option.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Int32.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Long.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Seq.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Date.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/RegExp.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/String.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Map.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Set.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Array.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/List.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/AsyncBuilder.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Async.js","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.3.0.5/cmd.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Common.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Label.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Input.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Help.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Field.fs","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Double.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Unicode.9.0.0.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Char.js","/Users/egabasova/Projects/twitcher/src/forms/Form.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Select.fs","/Users/egabasova/Projects/twitcher/src/Conversions.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Components/Modal.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Heading.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Button.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Box.fs","/Users/egabasova/Projects/twitcher/src/forms/CreateAircraft.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Layouts/Level.fs","/Users/egabasova/Projects/twitcher/src/forms/ChangeAltitude.fs","/Users/egabasova/Projects/twitcher/src/forms/ChangeSpeed.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/File.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.FontAwesome.2.0.0/FontAwesome.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Icon.fs","/Users/egabasova/Projects/twitcher/src/Coordinates.fs","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/TimeSpan.js","/Users/egabasova/Projects/twitcher/.fable/Fable.Promise.2.0.0/Promise.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Promise.2.0.0/PromiseImpl.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Fetch.2.0.0/Fetch.fs","/Users/egabasova/Projects/twitcher/.fable/Thoth.Json.3.3.0/Types.fs","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/BigInt/n.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/lib/big.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/Decimal.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/BigInt/z.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/BigInt.js","/Users/egabasova/Projects/twitcher/.fable/fable-library.2.2.0/DateOffset.js","/Users/egabasova/Projects/twitcher/.fable/Thoth.Json.3.3.0/Decode.fs","/Users/egabasova/Projects/twitcher/.fable/Thoth.Json.3.3.0/Encode.fs","/Users/egabasova/Projects/twitcher/src/Commands.fs","/Users/egabasova/Projects/twitcher/src/Update.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Components/Navbar.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Layouts/Columns.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Layouts/Column.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Layouts/Container.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Components/Message.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Table.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Components/Menu.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Form/Control.fs","/Users/egabasova/Projects/twitcher/src/View.fs","/Users/egabasova/Projects/twitcher/src/forms/ChangeHeading.fs","/Users/egabasova/Projects/twitcher/src/forms/LoadScenario.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Elements/Delete.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.3.0.5/prelude.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.3.0.5/ring.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.3.0.5/program.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.React.3.0.1/react.fs","/Users/egabasova/Projects/twitcher/.fable/Fable.Elmish.React.3.0.1/common.fs","/Users/egabasova/Projects/twitcher/src/App.fs","/Users/egabasova/Projects/twitcher/.fable/Fulma.2.1.1/Layouts/Hero.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","littleEndian","UTF16LE","str","index","count","substring","Buffer","from","bytes","Uint8Array","view","DataView","buffer","code","charCodeAt","setUint16","utf16le_encode","subarray","byteOffset","byteLength","toString","chars","Array","getUint16","String","fromCharCode","join","utf16le_decode","UTF8","TextEncoder","encode","pos","buf","nextCode","utf8_encode","TextDecoder","decode","decodeUtf8","i1","RangeError","fromCodePoint","utf8_decode","_UTF8","get_UTF8","isDisposable","x","Dispose","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","stringHash","h","len","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isArray","ar","ArrayBuffer","isView","equalArraysWith","y","eq","equalArrays","equals","Equals","Date","compareDates","xtime","ytime","getTime","comparePrimitives","compareArraysWith","comp","compareArrays","compare","CompareTo","min","comparer","max","WeakMap","CaseRules","None","LowerFirst","changeCase","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","Error","definedCaseRule","toJSON","round","digits","Math","pow","toFixed","floor","f","col","size","uncurry","arity","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","concat","getItemFromDict","map","sameType","getPrototypeOf","constructor","declare","cons","superClass","subClass","writable","configurable","inherits","SystemObject","compareList","self","other","tail","res","head","List","this","Union","tag","recordToJson","record","getFieldNames","keys","recordEquals","thisNames","recordCompare","Record","k","id","identityHash","iterator","cur","next","tmp","done","FSharpRef","contents","Exception","msg","stack","message","getFSharpExceptionFieldNames","filter","FSharpException","fieldNames","arg1","arg2","arg3","CaseInfo","declaringType","TypeInfo","fullname","generics","cases","fullName","getGenerics","t1","t2","list","generic","obj","float64","info","lastIndexOf","substr","gen","endsWith","getElementType","isGenericType","getGenericTypeDefinition","getUnionCases","getRecordElements","getTupleElements","isTuple","isUnion","isRecord","startsWith","getUnionCaseFields","uci","makeUnion","values","expectedLength","assertUnion","Some","some","acceptNull","defaultArg","arg","defaultValue","field","Result","mapOk","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","replace","prefix","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","parse","v","Number","parseInt","isNaN","umin","umax","tryParse","_a","op_UnaryNegation_Int32","wasm","WebAssembly","Instance","Module","e","Long","low","high","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","op_UnaryNegation","TWO_PWR_32_DBL","fromInteger","xh","lowBits","highBits","pow_dbl","fromString","indexOf","radixToPower","op_Addition","op_Multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","op_Division","rem1","op_Subtraction","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","op_LogicalNot","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","op_RightShiftUnsigned","op_LeftShift","op_RightShift","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Modulus","rem_u","rem_s","op_BitwiseAnd","fromBytes","le","fromBytesLE","fromBytesBE","Enumerator","iter","current","getEnumerator","toIterator","en","MoveNext","Current","append","xs","ys","delay","firstDone","iters","unfold","output","innerIter","hasFinished","collect","empty","exists","forAll","fold","acc","iterate","_","rangeNumber","first","step","last","singleton","skip","take","truncate","fst","offsetRegex","DateTime","minValue","parseRaw","baseDate","timeInSeconds","timeParts","split","parseFloat","toUpperCase","getUTCFullYear","getUTCMonth","getUTCDate","offsetParts","offsetInMinutes","getFullYear","getMonth","getDate","detectUTC","escape","fsFormatRegExp","guidRegex","toHex","longToString","longFromBytes","hi","lo","toBytesLE","toBytesBE","printf","input","cont","createPrinter","strCopy","formatOnce","toText","str2","rep","flags","pad","precision","format","toPrecision","toExponential","plusPrefix","ch","padLeft","abs","delimiter","validateGuid","doNotThrow","trimmedAndLowered","trim","pattern","RegExp","isRight","MapTree$00602","MapTreeModule$$$size","MapTreeModule$$$sizeAux","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","matchValue","hl","hr","MapTreeModule$$$rebalance","k$$1","v$$1","t1h","t2h","t2v","t2r","t2l","t2k","t2lv","t2lr","t2ll","t2lk","t1v","t1r","t1l","t1k","t1rv","t1rr","t1rl","t1rk","MapTreeModule$$$add","k$$2","v$$2","m$$3","k2","Compare","v2","r$$2","l$$2","k2$$1","h$$1","c$$1","MapTreeModule$$$tryFind","comparer$$2","k$$4","m$$5","v2$$3","k2$$4","v2$$4","r$$4","l$$4","k2$$5","c$$5","MapTreeModule$$$iter","$arg$$45","$arg$$46","f$$6","m$$9","v2$$8","v2$$9","r$$10","l$$10","k2$$13","MapTreeModule$$$ofSeq","comparer$$16","c$$9","ie","comparer$$14","acc$$10","patternInput$$2","$acc$$10$$77","$comparer$$14$$76","$e$$78","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","started","MapTreeModule$$$collapseLHS","$stack$$81","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","matchValue$$4","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","i$$3","matchValue$$5","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$Map$$Z6F6B671C","__$$18","f$$25","MapTreeModule$$$mapi","f$$11","m$$14","v$$11","k$$15","v$$12","r$$15","l$$15","k$$16","h$$3","l2$$1","v2$$17","r2$$1","FSharpMap$$get_Count","__$$20","add","k$$34","v$$26","m$$24","k$$28","v$$24","__$$6","tryFind","k$$36","m$$26","k$$33","__$$23","f$$35","m$$37","ofList","l$$22","comparer$$18","comparer$$13","l$$20","fold$$1","acc$$9","tupledArg","toArray","m$$46","s$$4","arr$$1","res$$6","x$$15","y$$2","comparer$$21","map$$1","kv","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3090","that","m2","res$$4","finished","e1","e2","matchValue$$7","kvp1","kvp2","c$$10","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$$$height","SetTreeModule$$$tolerance","SetTreeModule$$$mk","SetTreeModule$$$rebalance","SetTreeModule$$$add","t$$1","r$$3","l$$3","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$49","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","matchValue$$6","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","s1","s2","matchValue$$9","l1","l2","SetTreeModule$$$compareStacks","$target$$52","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","matchValue$$8","c$$7","c$$8","$l2$$59","$l2$$61","SetTreeModule$$$ofSeq","comparer$$20","c$$11","comparer$$19","acc$$11","$acc$$11$$68","$comparer$$19$$67","$e$$69","SetTreeModule$$$mkFromEnumerator","i$$1","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$$$002Ector$$2528C5CB","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","ofSeq","elements","comparer$$30","array1","array2","len1","len2","newArray","fill","target","targetIndex","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","x$$1","contains","value$$3","array$$21","eq$$3","i$$13","loop","initialize","count$$8","initializer","cons$$15","result$$6","i$$15","folder$$4","state$$6","array$$74","exactlyOne","array$$92","foldBack2","f$$9","array1$$11","array2$$11","state$$17","folder$$12","array1$$10","array2$$10","state$$16","acc$$8","size$$1","i$$46","foldBackIndexed2","_arg1$$1","x$$20","y$$8","source$$8","cons$$31","source$$9","cons$$32","tryLast","_arg1$$4","$arg$$14","$arg$$15","$arg$$16","f$$2","state$$1","xs$$8","reverse","xs$$9","acc$$1","x$$6","xs$$12","acc$$3","x$$9","xs$$28","ys$$10","f$$15","xs$$29","collect$$1","f$$16","xs$$31","f$$24","xs$$46","unitVar0","x$$24","ofArray","xs$$50","res$$1","i$$9","tryPickIndexed","f$$29","xs$$52","$arg$$100","$arg$$101","$arg$$102","tryPickIndexedAux","f$$28","i$$10","_arg1$$9","xs$$51","tryFindIndexed","f$$32","xs$$55","i$$11","x$$31","findIndexed","f$$34","xs$$57","value$$1","find","xs$$58","_arg1$$12","x$$34","f$$42","xs$$71","acc$$17","x$$37","xs$$76","rest","loop$$1","x$$22","y$$4","that$$1","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","delete","state","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","dispatch","cmd","sub","g","cmds","lists","state$$3","xs$$14","acc$$4","x$$10","task","ofSuccess","ofError","case","screen","getCaseName","level","getCaseTag","options","option","ofText","ToString","display","toDisplayOnlyClass","ofInvisibleOnly","ofHiddenOnly","ofBackground","parser","baseClass","baseProps","AddClass","AddProps","prop","props","cl","modifiers","parseModifiers","el","children","AddModifiers","ToReactElement","Parse","parseOptions","htmlFor","type'","typ","ofType","disabled","valueOrDefault","Prop","placeholder","cb","ref","element","fieldView","ok","isDigitMask","isLetterMask","isLetterOrDigitMask","getUnicodeCategory","unicodeDeltas","ret","carried","register","byte","decodeVByteToIntegerArray","Encoding","getBytes","packedUnicode","codepoints","Uint32Array","categories","categoryEnum","currentCodepoint","cp","mid","getCategory","isLetterOrDigit","label","checkValid","warning","ev","optionMessage","speed","msknotConst","machknotConst","kmhknotConst","alt","mftConst","ftflConst","customClass","DOMAttr","classes","cls","title","opts","isDisabled","btnView","SpeedUnit","model","formItemOptions","arg0","_arg2","_arg3","_arg4","speedUnit","checkFloat","msfmConst","std","booleans","complete","opt","faOptions","faIcon","ofSize","baseElement","displayIcon","toIconOptions","rMajor","sqrt","ratio","eccent","rad","deg2rad","longitude","latitude","phi","sinphi","sin","con","con'","com","ts","tan","radToDeg","dphi","dphi'","compute","rMin","rMax","tMin","tMax","sectorDisplay","altitude","sectorView","patternInput","lonLatToXY","scale","coordinates_0","coordinates_1","coordinates_2","coordinates","rescaleSectorToView","ms","arguments","fromSeconds","hours","minutes","seconds","firstDot","search","firstColon","f1","f2","er","success","url","init","response","( .ctor )","BigNat","bound","BigNatModule$002EFFT$$$pow32","BigNatModule$002EFFT$$$maxTwoPower","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","x$$23","n$$15","$n$$15$$11","BigNatModule$$$pow32","n$$16","BigNatModule$$$baseBits","BigNatModule$$$baseN","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","na","findLeastBound","BigNatModule$$$boundInt","BigNatModule$$$boundInt64","BigNatModule$$$embed","x$$28","x$$29","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","pa","qa","i$$22","check","BigNatModule$$$compare","p$$9","q$$6","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","r$$12","rak$$1","$k$$4$$43","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","r$$11","rak","pSmall","qSmall","p$$17","q$$14","r$$14","ra","pa$$3","qa$$3","i$$29","pai$$1","k$$5","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","arg4","arg5","arg6","arg7","bigL","twoToBigL","bigK","bigN","splits","BigNatModule$$$mkEncoding","k$$6","bigK$$2","i$$30","BigNatModule$$$table","i$$32","i$$33","i$$34","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","a$$5","n$$30","xres","patternInput$$3","j$$4","z$$7","zLo","zHi","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","xres$$1","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","zHi$$1","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","patternInput$$6","p$$8","pn","q$$5","qn","patternInput$$7","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","b$$7","a$$12","x$$68","x$$27","array$$29","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","degn","prior$$2","prior","k$$11","ten2k","$k$$11$$64","$ten2k$$65","route","digits$$4","isLeading","n$$46","_arg1$$3","ten2k$$1","prior$$1","patternInput$$13","digits$$2","n$$47","n$$19","i$$12","BigNatModule$$$eval32","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","P","cmp","DP","RM","MAX_DP","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","UNDEFINED","NUMERIC","nl","Big","dp","rm","more","xc","unshift","pop","stringify","z","isneg","yc","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","xlty","plus","xe","ye","mod","ygtx","times","one","half","sd","valueOf","_Big_","version","Decimal","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$get_SignInt","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","x$$5","matchValue$$1","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","BigInteger$$$get_One","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigNatModule$0024$0024$0024toString","n$$17","res$$2","i$$8","BigNatModule$0024$0024$0024hash","obj$$1","n$$5","nn","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","DateTimeOffset","newLine","path","error","reason","genericMsg","fieldName","messages","decoder","errorToString","_err","currentPath","fieldValue","isUndefined","requestedIndex","vArray","tokens","arr","ctor","d1","v1","errors","unwrapWith","firstPath","firstValue","badPathError","curValue","decodeMaybeNull","optional","decoders","extra","isCamelCase","predicate$$13","mixedArray","fi","autoDecoder","isOptional","decoderRef","decoderInfos","folder$$8","array$$101","state$$12","reduceRight","acc$$5","x$$18","array","keyDecoder","valueDecoder","toMap","decoder1","decoder2","andThen","( arg10@ )","( arg20@ )","succeed","runner","autoDecodeRecordsAndUnions","int","uint32","datetime","offsetMatch","datetimeOffset","timespan","guid","__","resolver","makeExtra","forLoopVar","space","text","line","startIndex","( builder@ )","configFile","txt","getYamlAttribute","config","urlBase","urlAircraftPosition","parseAircraftInfo","resultTime","positionDecoder","elapsed","parseAllPositions","getAllPositions","aircraftID","pauseSimulation","rate","aircraftData","cas","requestedAltitude","verticalSpeed","changeAltitude","heading","sectorDecoder","_arg5","counter","positionHistory","positionInfo","historyInterval","aircraft","updateSingleHistory","point1","point2","dot","det","currentPosition","lastPosition","history","viewSize","onScreen","i2","position1","position2","radius","mAltitude","dLat","dLon","cos","mnmConst","sv","sectorViewRatio","width","console","sv'","className","suffix","href","generateAnchor","controlView","item","brand","end","sectorInfo","visualCoordinates","plotRectangularSector","sectorOutlineView","xTicks","roundToHalf","yTicks","areaLatitudesLongitudesView","position","past","pastPosition","selected","conflict","count$$11","array$$37","cons$$21","count$$12","gs","hdg","formItem","Msg","Screen","ac","wix","rix","items","rix'","ix","wix'","setState","program","rb","reentered","syncDispatch","nextMsg","placeholderId","equal","lazyView2With","document","getElementById","sectorDisplayArea","SimulationViewSize","nextProps","_nextState","currentAltitude","calibratedAirSpeed","exn","getConfig","getSectorOutlineCmd","pingBluebird","viewWidth","rescaleVisualisationToSector","getAllPositionsCmd","getAircraftPositionCmd","aircraftInView","sector","newModel","PositionHistory","updateHistory","estimateHeading","checkLossOfSeparation","loadScenario","pauseSimulationCmd","resetSimulator","resumeSimulation","rt","changeSimulationRateMultiplierCmd","aircraftInfo","createAircraft","changeAltitudeCmd","requestedHeading","changeHeading","changeSpeed","groundSpeed","su","altUnit","ExternalMsg","checkAircraftID","checkAircraftType","vs","acid","basicNavbar","SVGAttr","simulationView","SectorDisplay","_arg6","_arg7","_arg8","_arg9","_arg10","_arg11","viewAircraftDetails","commandForm","withReactSynchronousUsing","runWith"],"mappings":"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","file":"app.7327dd223fa7bf7ecd4f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([187,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Polyfills\nconst littleEndian = true;\nfunction utf16le_encode(str) {\n    const bytes = new Uint8Array(str.length * 2);\n    const view = new DataView(bytes.buffer);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        view.setUint16(i * 2, code, littleEndian);\n    }\n    return bytes;\n}\nfunction utf16le_decode(bytes) {\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    const chars = new Array(view.byteLength / 2);\n    for (let i = 0; i < chars.length; i++) {\n        const code = view.getUint16(i * 2, littleEndian);\n        chars[i] = String.fromCharCode(code);\n    }\n    return chars.join(\"\");\n}\nfunction utf8_encode(str) {\n    let pos = 0;\n    let buf = new Uint8Array(str.length * 3);\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code >= 0xD800 && code <= 0xDBFF) {\n            const nextCode = (i < str.length) ? str.charCodeAt(i + 1) : 0;\n            if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n                i += 1;\n                code = (code - 0xD800) * 0x400 + nextCode - 0xDC00 + 0x10000;\n                if (code > 0xFFFF) {\n                    buf[pos++] = (0x1E << 3) | (code >>> 18);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 12) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | (code & 0x3F);\n                }\n            }\n            else {\n                buf[pos++] = 0xEF;\n                buf[pos++] = 0xBF;\n                buf[pos++] = 0xBD;\n            }\n        }\n        else if (code <= 0x007F) {\n            buf[pos++] = (0x0 << 7) | code;\n        }\n        else if (code <= 0x07FF) {\n            buf[pos++] = (0x6 << 5) | (code >>> 6);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n        else {\n            buf[pos++] = (0xE << 4) | (code >>> 12);\n            buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n    }\n    buf = new Uint8Array(buf.buffer.slice(0, pos));\n    return buf;\n}\nfunction utf8_decode(bytes) {\n    let pos = 0;\n    const decodeUtf8 = () => {\n        const i1 = bytes[pos++];\n        if ((i1 & 0x80) === 0) {\n            return i1;\n        }\n        else if ((i1 & 0xE0) === 0xC0) {\n            const i2 = bytes[pos++];\n            return ((i1 & 0x1F) << 6) | (i2 & 0x3F);\n        }\n        else if ((i1 & 0xF0) === 0xE0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            return ((i1 & 0x0F) << 12) | ((i2 & 0x3F) << 6) | (i3 & 0x3F);\n        }\n        else if ((i1 & 0xF8) === 0xF0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            const i4 = bytes[pos++];\n            return ((i1 & 0x07) << 18) | ((i2 & 0x3F) << 12) | ((i3 & 0x3F) << 6) | (i4 & 0x3F);\n        }\n        else {\n            throw RangeError(\"Invalid UTF8 byte: \" + i1);\n        }\n    };\n    const chars = new Array();\n    while (pos < bytes.length) {\n        const code = decodeUtf8();\n        chars.push(String.fromCodePoint(code));\n    }\n    return chars.join(\"\");\n}\nclass UTF16LE {\n    getBytes(str, index, count) {\n        if (index != null) {\n            str = str.substring(index, index + count);\n        }\n        if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(str, \"utf16le\");\n        }\n        else {\n            return utf16le_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        if (index != null) {\n            bytes = bytes.subarray(index, index + count);\n        }\n        if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString(\"utf16le\");\n        }\n        else {\n            return utf16le_decode(bytes); // polyfill\n        }\n    }\n}\nclass UTF8 {\n    getBytes(str, index, count) {\n        if (index != null) {\n            str = str.substring(index, index + count);\n        }\n        if (typeof TextEncoder !== \"undefined\") {\n            return new TextEncoder().encode(str);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(str, \"utf8\");\n        }\n        else {\n            return utf8_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        if (index != null) {\n            bytes = bytes.subarray(index, index + count);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder().decode(bytes);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString(\"utf8\");\n        }\n        else {\n            return utf8_decode(bytes); // polyfill\n        }\n    }\n}\nconst _UTF16 = new UTF16LE();\nconst _UTF8 = new UTF8();\nexport function get_Unicode() { return _UTF16; }\nexport function get_UTF8() { return _UTF8; }\n","// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n};\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    return isArray(col) ? col.length : col.size;\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // return (...args: any[]) => {\n    //   // In some cases there may be more arguments applied than necessary\n    //   // (e.g. index when mapping an array), discard them\n    //   args = args.slice(0, arity);\n    //   let res = f;\n    //   while (args.length > 0) {\n    //       const curArgs = args.splice(0, res.length);\n    //       res = res.apply(null, curArgs);\n    //   }\n    //   return res;\n    // };\n    switch (arity) {\n        case 2:\n            return (a1, a2) => f(a1)(a2);\n        case 3:\n            return (a1, a2, a3) => f(a1)(a2)(a3);\n        case 4:\n            return (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n        case 5:\n            return (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n        case 6:\n            return (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n        case 7:\n            return (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n        case 8:\n            return (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(\"The given key was not present in the dictionary.\");\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equals, equalArrays, identityHash, structuralHash, numberHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map(x => String(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + String(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map(x => String(x)).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    let hashes = this.fields.map(x => structuralHash(x));\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter(k => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map(k => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n}, FSharpException);\nexport const Attribute = declare(function Attribute() { });\n","import { Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    return t1.fullname === t2.fullname\n        && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, null, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    return isArray(t) ? t.generics[0] : null;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj));\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t)) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t)) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return new uci.declaringType.constructor(uci.tag, uci.name, ...values);\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return new t.constructor(...values);\n}\nexport function makeTuple(values, t) {\n    return values;\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Options are erased in runtime by Fable, but we have\n// the `Some` type below to wrap values that would evaluate\n// to null in runtime. These two rules must be followed:\n// 1- None is always null in runtime, a non-strict null check\n//    (`x == null`) is enough to check the case of an option.\n// 2- To get the value of an option the `getValue` helper\n//    below must **always** be used.\n// export type Option<T> = T | Some<T>;\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        return other == null\n            ? false\n            : equals(this.value, other instanceof Some ? other.value : other);\n    }\n    CompareTo(other) {\n        return other == null\n            ? 1\n            : compare(this.value, other instanceof Some ? other.value : other);\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","export var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [_all, sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(\"_\", \"\"));\n    if (res != null) {\n        const [_all, sign, prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/f572e3a17d313730cf11eb838f6d2a5e31626f8a/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { isValid } from \"./Int32\";\nimport { combineHashCodes } from \"./Util\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport default function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    return combineHashCodes([this.unsigned ? 1 : 0, this.high, this.low]);\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nexport const neg = op_UnaryNegation;\nexport const not = op_LogicalNot;\nexport const add = op_Addition;\nexport const sub = op_Subtraction;\nexport const mul = op_Multiply;\nexport const div = op_Division;\nexport const mod = op_Modulus;\nexport const shl = op_LeftShift;\nexport const shr = op_RightShift;\nexport const and = op_BitwiseAnd;\nexport const or = op_BitwiseOr;\nexport const xor = op_ExclusiveOr;\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return op_UnaryNegation(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * @param {number} value\n * @param {boolean} unsigned\n * @param {number} kind\n * @returns {!Long}\n * @inner\n */\nexport function fromInteger(value, unsigned, kind) {\n    var x;\n    var xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6: x = value >>> 0;\n    }\n    return fromBits(x, xh >> 31, unsigned);\n}\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return op_UnaryNegation(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = op_Addition(op_Multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = op_Multiply(result, radixToPower);\n            result = op_Addition(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= maxValue.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits, maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, ZERO];\n}\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = op_Division($this, radixLong), rem1 = op_Subtraction(op_Multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(op_UnaryNegation($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = op_Division(rem, radixToPower), intval = toInt(op_Subtraction(rem, op_Multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(op_UnaryNegation($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value is negative.\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value differs from the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value is less than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Compares this Long's value with the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(op_Subtraction($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Absolute value of the given number.\n */\nexport function abs($this) {\n    if (!$this.unsigned && isNegative($this))\n        return op_UnaryNegation($this);\n    else\n        return $this;\n}\n/**\n * Negates this Long's value.\n * @returns {!Long} Negated Long\n */\nexport function op_UnaryNegation($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return op_Addition(op_LogicalNot($this), ONE);\n}\n;\n/**\n * Returns the sum of this and the specified Long.\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function op_Addition($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function op_Subtraction($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return op_Addition($this, op_UnaryNegation(subtrahend));\n}\n;\n/**\n * Returns the product of this and the specified Long.\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function op_Multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return op_Multiply(op_UnaryNegation($this), op_UnaryNegation(multiplier));\n        else\n            return op_UnaryNegation(op_Multiply(op_UnaryNegation($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return op_UnaryNegation(op_Multiply($this, op_UnaryNegation(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function op_Division($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = op_RightShift($this, 1);\n                approx = op_LeftShift(op_Division(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = op_Subtraction($this, op_Multiply(divisor, approx));\n                    res = op_Addition(approx, op_Division(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return op_Division(op_UnaryNegation($this), op_UnaryNegation(divisor));\n            return op_UnaryNegation(op_Division(op_UnaryNegation($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return op_UnaryNegation(op_Division($this, op_UnaryNegation(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, op_RightShiftUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = op_Multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = op_Multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = op_Addition(res, approxRes);\n        rem = op_Subtraction(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long modulo the specified.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function op_Modulus($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return op_Subtraction($this, op_Multiply(op_Division($this, divisor), divisor));\n}\n;\n/**\n * Returns the bitwise NOT of this Long.\n * @returns {!Long}\n */\nexport function op_LogicalNot($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseAnd($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_ExclusiveOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_LeftShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShiftUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Converts this Long to signed.\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const zero = unsigned ? UZERO : ZERO;\n    return (x) => greaterThan(step, zero) && lessThanOrEqual(x, last)\n        || lessThan(step, zero) && greaterThanOrEqual(x, last)\n        ? [x, op_Addition(x, step)] : null;\n}\n","import { makeRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return {\n        [Symbol.iterator]: () => {\n            let window = [];\n            const iter = source[Symbol.iterator]();\n            return {\n                next: () => {\n                    let cur;\n                    while (window.length < windowSize) {\n                        if ((cur = iter.next()).done) {\n                            return { done: true };\n                        }\n                        window.push(cur.value);\n                    }\n                    const value = window;\n                    window = window.slice(1);\n                    return { done: false, value };\n                },\n            };\n        },\n    };\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = match;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (rep !== match && rep < 10 && match.length > 1) {\n            rep = \"0\" + rep;\n        }\n        return rep;\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds = parseInt(timeParts[0], 10) * 3600 +\n                    parseInt(timeParts[1] || \"0\", 10) * 60 +\n                    parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v === null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTime(d.getTime() + ts, d.kind);\n}\nexport function addDays(d, v) {\n    return DateTime(d.getTime() + v * 86400000, d.kind);\n}\nexport function addHours(d, v) {\n    return DateTime(d.getTime() + v * 3600000, d.kind);\n}\nexport function addMinutes(d, v) {\n    return DateTime(d.getTime() + v * 60000, d.kind);\n}\nexport function addSeconds(d, v) {\n    return DateTime(d.getTime() + v * 1000, d.kind);\n}\nexport function addMilliseconds(d, v) {\n    return DateTime(d.getTime() + v, d.kind);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTime(d.getTime() - that, d.kind)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n","export function create(pattern, options) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit !== 0) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date\";\nimport Long, { fromBytes as longFromBytes, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, pad, precision, format) => {\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                rep = Number(rep).toFixed(precision || 6);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = Number(rep).toPrecision(precision);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = Number(rep).toExponential(precision);\n                break;\n            case \"O\":\n            case \"A\":\n                rep = String(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n        }\n        const plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n        pad = parseInt(pad, 10);\n        if (!isNaN(pad)) {\n            const ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n            rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n        }\n        const once = prefix + (plusPrefix ? \"+\" + rep : rep);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (match, idx, pad, format, precision, pattern) => {\n        let rep = args[idx];\n        let padSymbol = \" \";\n        const isNumericType = (typeof rep === \"number\") || (rep instanceof Long);\n        // TODO: || (rep instanceof Decimal) || (rep instanceof BigInt);\n        if (isNumericType) {\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    rep = precision ? rep.toFixed(precision) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision ? rep.toPrecision(precision) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision ? rep.toExponential(precision) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (precision ? (rep * 100).toFixed(precision) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision ? padLeft(rep.toString(), precision, \"0\") : rep.toString();\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    const m = /^(0+)(\\.0+)?$/.exec(pattern);\n                    if (m != null) {\n                        let decs = 0;\n                        if (m[2] != null) {\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        }\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = \"0\";\n                    }\n                    else if (pattern) {\n                        rep = pattern;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        pad = parseInt((pad || \"\").substring(1), 10);\n        if (!isNaN(pad)) {\n            rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, ...xs) {\n    return xs.map((x) => String(x)).join(delimiter);\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return join(delimiter, ...xs.slice(startIndex, endIndexPlusOne));\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    return _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\n","import { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$1, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]]);\n}\nexport function MapTreeModule$$$sizeAux(acc, m) {\n  MapTreeModule$$$sizeAux: while (true) {\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          const r = m.fields[3];\n          const l = m.fields[2];\n          const $acc$$5 = acc;\n          acc = MapTreeModule$$$sizeAux($acc$$5 + 1, l);\n          m = r;\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        const h = _arg1.fields[4] | 0;\n        return h | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  const matchValue = [l$$1, r$$1];\n  var $target$$6;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$6 = 0;\n    } else {\n      $target$$6 = 1;\n    }\n  } else {\n    $target$$6 = 1;\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      const t2v = t2.fields[1];\n      const t2r = t2.fields[3];\n      const t2l = t2.fields[2];\n      const t2k = t2.fields[0];\n\n      if (MapTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 2) {\n          const t2lv = t2l.fields[1];\n          const t2lr = t2l.fields[3];\n          const t2ll = t2l.fields[2];\n          const t2lk = t2l.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2ll), t2lk, t2lv, MapTreeModule$$$mk(t2lr, t2k, t2v, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2l), t2k, t2v, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      const t1v = t1.fields[1];\n      const t1r = t1.fields[3];\n      const t1l = t1.fields[2];\n      const t1k = t1.fields[0];\n\n      if (MapTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 2) {\n          const t1rv = t1r.fields[1];\n          const t1rr = t1r.fields[3];\n          const t1rl = t1r.fields[2];\n          const t1rk = t1r.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1l, t1k, t1v, t1rl), t1rk, t1rv, MapTreeModule$$$mk(t1rr, k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1l, t1k, t1v, MapTreeModule$$$mk(t1r, k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const k2 = m$$3.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const v2 = m$$3.fields[1];\n        const r$$2 = m$$3.fields[3];\n        const l$$2 = m$$3.fields[2];\n        const k2$$1 = m$$3.fields[0];\n        const h$$1 = m$$3.fields[4] | 0;\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, l$$2), k2$$1, v2, r$$2);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, l$$2, r$$2, h$$1);\n        } else {\n          return MapTreeModule$$$rebalance(l$$2, k2$$1, v2, MapTreeModule$$$add(comparer, k$$2, v$$2, r$$2));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find(comparer$$1, k$$3, m$$4) {\n  MapTreeModule$$$find: while (true) {\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const v2$$1 = m$$4.fields[1];\n          const k2$$2 = m$$4.fields[0];\n          const c$$2 = comparer$$1.Compare(k$$3, k2$$2) | 0;\n\n          if (c$$2 === 0) {\n            return v2$$1;\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const v2$$2 = m$$4.fields[1];\n          const r$$3 = m$$4.fields[3];\n          const l$$3 = m$$4.fields[2];\n          const k2$$3 = m$$4.fields[0];\n          const c$$3 = comparer$$1.Compare(k$$3, k2$$3) | 0;\n\n          if (c$$3 < 0) {\n            const $comparer$$1$$7 = comparer$$1;\n            const $k$$3$$8 = k$$3;\n            comparer$$1 = $comparer$$1$$7;\n            k$$3 = $k$$3$$8;\n            m$$4 = l$$3;\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return v2$$2;\n          } else {\n            const $comparer$$1$$9 = comparer$$1;\n            const $k$$3$$10 = k$$3;\n            comparer$$1 = $comparer$$1$$9;\n            k$$3 = $k$$3$$10;\n            m$$4 = r$$3;\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind(comparer$$2, k$$4, m$$5) {\n  MapTreeModule$$$tryFind: while (true) {\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const v2$$3 = m$$5.fields[1];\n          const k2$$4 = m$$5.fields[0];\n          const c$$4 = comparer$$2.Compare(k$$4, k2$$4) | 0;\n\n          if (c$$4 === 0) {\n            return some(v2$$3);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const v2$$4 = m$$5.fields[1];\n          const r$$4 = m$$5.fields[3];\n          const l$$4 = m$$5.fields[2];\n          const k2$$5 = m$$5.fields[0];\n          const c$$5 = comparer$$2.Compare(k$$4, k2$$5) | 0;\n\n          if (c$$5 < 0) {\n            const $comparer$$2$$11 = comparer$$2;\n            const $k$$4$$12 = k$$4;\n            comparer$$2 = $comparer$$2$$11;\n            k$$4 = $k$$4$$12;\n            m$$5 = l$$4;\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(v2$$4);\n          } else {\n            const $comparer$$2$$13 = comparer$$2;\n            const $k$$4$$14 = k$$4;\n            comparer$$2 = $comparer$$2$$13;\n            k$$4 = $k$$4$$14;\n            m$$5 = r$$4;\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($arg$$21, $arg$$22, $arg$$23, $arg$$24, $arg$$25) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $arg$$21,\n          f$$1 = $arg$$22,\n          s = $arg$$23,\n          acc_0 = $arg$$24,\n          acc_1 = $arg$$25;\n    const acc$$1 = [acc_0, acc_1];\n\n    switch (s.tag) {\n      case 1:\n        {\n          const v$$4 = s.fields[1];\n          const k$$6 = s.fields[0];\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, k$$6, v$$4, acc$$1[0], acc$$1[1]);\n        }\n\n      case 2:\n        {\n          const v$$5 = s.fields[1];\n          const r$$5 = s.fields[3];\n          const l$$5 = s.fields[2];\n          const k$$7 = s.fields[0];\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, r$$5, acc$$1[0], acc$$1[1]);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, k$$7, v$$5, acc$$2[0], acc$$2[1]);\n          $arg$$21 = comparer$$4;\n          $arg$$22 = f$$1;\n          $arg$$23 = l$$5;\n          $arg$$24 = acc$$3[0];\n          $arg$$25 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return acc$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($arg$$34, $arg$$35, $arg$$36, $arg$$37) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$34,\n          f$$4 = $arg$$35,\n          s$$2 = $arg$$36,\n          acc$$5 = $arg$$37;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          const v$$7 = s$$2.fields[1];\n          const k$$9 = s$$2.fields[0];\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, k$$9, v$$7, acc$$5);\n        }\n\n      case 2:\n        {\n          const v$$8 = s$$2.fields[1];\n          const r$$6 = s$$2.fields[3];\n          const l$$6 = s$$2.fields[2];\n          const k$$10 = s$$2.fields[0];\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, l$$6, acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, k$$10, v$$8, acc$$6);\n          $arg$$34 = comparer$$7;\n          $arg$$35 = f$$4;\n          $arg$$36 = r$$6;\n          $arg$$37 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        const v2$$5 = m$$6.fields[1];\n        const k2$$6 = m$$6.fields[0];\n        return [k2$$6, v2$$5, new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        const v2$$6 = m$$6.fields[1];\n        const r$$7 = m$$6.fields[3];\n        const l$$7 = m$$6.fields[2];\n        const k2$$7 = m$$6.fields[0];\n\n        if (l$$7.tag === 0) {\n          return [k2$$7, v2$$6, r$$7];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(l$$7);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], k2$$7, v2$$6, r$$7)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const k2$$8 = m$$7.fields[0];\n        const c$$6 = comparer$$9.Compare(k$$11, k2$$8) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const v2$$7 = m$$7.fields[1];\n        const r$$8 = m$$7.fields[3];\n        const l$$8 = m$$7.fields[2];\n        const k2$$9 = m$$7.fields[0];\n        const c$$7 = comparer$$9.Compare(k$$11, k2$$9) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, l$$8), k2$$9, v2$$7, r$$8);\n        } else if (c$$7 === 0) {\n          const matchValue$$1 = [l$$8, r$$8];\n\n          if (matchValue$$1[0].tag === 0) {\n            return r$$8;\n          } else if (matchValue$$1[1].tag === 0) {\n            return l$$8;\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(r$$8);\n            return MapTreeModule$$$mk(l$$8, patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(l$$8, k2$$9, v2$$7, MapTreeModule$$$remove(comparer$$9, k$$11, r$$8));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem(comparer$$10, k$$12, m$$8) {\n  MapTreeModule$$$mem: while (true) {\n    switch (m$$8.tag) {\n      case 1:\n        {\n          const k2$$10 = m$$8.fields[0];\n          return comparer$$10.Compare(k$$12, k2$$10) === 0;\n        }\n\n      case 2:\n        {\n          const r$$9 = m$$8.fields[3];\n          const l$$9 = m$$8.fields[2];\n          const k2$$11 = m$$8.fields[0];\n          const c$$8 = comparer$$10.Compare(k$$12, k2$$11) | 0;\n\n          if (c$$8 < 0) {\n            const $comparer$$10$$41 = comparer$$10;\n            const $k$$12$$42 = k$$12;\n            comparer$$10 = $comparer$$10$$41;\n            k$$12 = $k$$12$$42;\n            m$$8 = l$$9;\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            const $comparer$$10$$43 = comparer$$10;\n            const $k$$12$$44 = k$$12;\n            comparer$$10 = $comparer$$10$$43;\n            k$$12 = $k$$12$$44;\n            m$$8 = r$$9;\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($arg$$45, $arg$$46) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $arg$$45,\n          m$$9 = $arg$$46;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          const v2$$8 = m$$9.fields[1];\n          const k2$$12 = m$$9.fields[0];\n          f$$6(k2$$12, v2$$8);\n          break;\n        }\n\n      case 2:\n        {\n          const v2$$9 = m$$9.fields[1];\n          const r$$10 = m$$9.fields[3];\n          const l$$10 = m$$9.fields[2];\n          const k2$$13 = m$$9.fields[0];\n          MapTreeModule$$$iter(f$$6, l$$10);\n          f$$6(k2$$13, v2$$9);\n          $arg$$45 = f$$6;\n          $arg$$46 = r$$10;\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($arg$$47, $arg$$48) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $arg$$47,\n          m$$10 = $arg$$48;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          const v2$$10 = m$$10.fields[1];\n          const k2$$14 = m$$10.fields[0];\n          return f$$7(k2$$14, v2$$10);\n        }\n\n      case 2:\n        {\n          const v2$$11 = m$$10.fields[1];\n          const r$$11 = m$$10.fields[3];\n          const l$$11 = m$$10.fields[2];\n          const k2$$15 = m$$10.fields[0];\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, l$$11);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(k2$$15, v2$$11);\n\n            if (matchValue$$3 == null) {\n              $arg$$47 = f$$7;\n              $arg$$48 = r$$11;\n              continue MapTreeModule$$$tryPick;\n            } else {\n              const res$$1 = matchValue$$3;\n              return res$$1;\n            }\n          } else {\n            const res = matchValue$$2;\n            return res;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($arg$$49, $arg$$50) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $arg$$49,\n          m$$11 = $arg$$50;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          const v2$$12 = m$$11.fields[1];\n          const k2$$16 = m$$11.fields[0];\n          return f$$8(k2$$16, v2$$12);\n        }\n\n      case 2:\n        {\n          const v2$$13 = m$$11.fields[1];\n          const r$$12 = m$$11.fields[3];\n          const l$$12 = m$$11.fields[2];\n          const k2$$17 = m$$11.fields[0];\n\n          if (MapTreeModule$$$exists(f$$8, l$$12) ? true : f$$8(k2$$17, v2$$13)) {\n            return true;\n          } else {\n            $arg$$49 = f$$8;\n            $arg$$50 = r$$12;\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($arg$$51, $arg$$52) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $arg$$51,\n          m$$12 = $arg$$52;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          const v2$$14 = m$$12.fields[1];\n          const k2$$18 = m$$12.fields[0];\n          return f$$9(k2$$18, v2$$14);\n        }\n\n      case 2:\n        {\n          const v2$$15 = m$$12.fields[1];\n          const r$$13 = m$$12.fields[3];\n          const l$$13 = m$$12.fields[2];\n          const k2$$19 = m$$12.fields[0];\n\n          if (MapTreeModule$$$forall(f$$9, l$$13) ? f$$9(k2$$19, v2$$15) : false) {\n            $arg$$51 = f$$9;\n            $arg$$52 = r$$13;\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        const v$$9 = m$$13.fields[1];\n        const k$$13 = m$$13.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$13, f$$10(v$$9));\n      }\n\n    case 2:\n      {\n        const v$$10 = m$$13.fields[1];\n        const r$$14 = m$$13.fields[3];\n        const l$$14 = m$$13.fields[2];\n        const k$$14 = m$$13.fields[0];\n        const h$$2 = m$$13.fields[4] | 0;\n        const l2 = MapTreeModule$$$map(f$$10, l$$14);\n        const v2$$16 = f$$10(v$$10);\n        const r2 = MapTreeModule$$$map(f$$10, r$$14);\n        return new MapTree$00602(2, \"MapNode\", k$$14, v2$$16, l2, r2, h$$2);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        const v$$11 = m$$14.fields[1];\n        const k$$15 = m$$14.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$15, f$$11(k$$15, v$$11));\n      }\n\n    case 2:\n      {\n        const v$$12 = m$$14.fields[1];\n        const r$$15 = m$$14.fields[3];\n        const l$$15 = m$$14.fields[2];\n        const k$$16 = m$$14.fields[0];\n        const h$$3 = m$$14.fields[4] | 0;\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, l$$15);\n        const v2$$17 = f$$11(k$$16, v$$12);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, r$$15);\n        return new MapTree$00602(2, \"MapNode\", k$$16, v2$$17, l2$$1, r2$$1, h$$3);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($arg$$57, $arg$$58, $arg$$59) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $arg$$57,\n          m$$15 = $arg$$58,\n          x$$1 = $arg$$59;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          const v$$13 = m$$15.fields[1];\n          const k$$17 = m$$15.fields[0];\n          return f$$12(k$$17, v$$13, x$$1);\n        }\n\n      case 2:\n        {\n          const v$$14 = m$$15.fields[1];\n          const r$$16 = m$$15.fields[3];\n          const l$$16 = m$$15.fields[2];\n          const k$$18 = m$$15.fields[0];\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, r$$16, x$$1);\n          const x$$3 = f$$12(k$$18, v$$14, x$$2);\n          $arg$$57 = f$$12;\n          $arg$$58 = l$$16;\n          $arg$$59 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($arg$$60, $arg$$61, $arg$$62) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $arg$$60,\n          x$$4 = $arg$$61,\n          m$$16 = $arg$$62;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          const v$$15 = m$$16.fields[1];\n          const k$$19 = m$$16.fields[0];\n          return f$$13(x$$4, k$$19, v$$15);\n        }\n\n      case 2:\n        {\n          const v$$16 = m$$16.fields[1];\n          const r$$17 = m$$16.fields[3];\n          const l$$17 = m$$16.fields[2];\n          const k$$20 = m$$16.fields[0];\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, l$$17);\n          const x$$6 = f$$13(x$$5, k$$20, v$$16);\n          $arg$$60 = f$$13;\n          $arg$$61 = x$$6;\n          $arg$$62 = r$$17;\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const v$$17 = m$$17.fields[1];\n        const k$$21 = m$$17.fields[0];\n        const cLoKey = comparer$$11.Compare(lo, k$$21) | 0;\n        const cKeyHi = comparer$$11.Compare(k$$21, hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(k$$21, v$$17, x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const v$$18 = m$$17.fields[1];\n        const r$$18 = m$$17.fields[3];\n        const l$$18 = m$$17.fields[2];\n        const k$$22 = m$$17.fields[0];\n        const cLoKey$$1 = comparer$$11.Compare(lo, k$$22) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(k$$22, hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, l$$18, x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(k$$22, v$$18, x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, r$$18, x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop(m$$19, acc$$8) {\n  MapTreeModule$$$loop: while (true) {\n    switch (m$$19.tag) {\n      case 1:\n        {\n          const v$$19 = m$$19.fields[1];\n          const k$$23 = m$$19.fields[0];\n          return new List([k$$23, v$$19], acc$$8);\n        }\n\n      case 2:\n        {\n          const v$$20 = m$$19.fields[1];\n          const r$$19 = m$$19.fields[3];\n          const l$$19 = m$$19.fields[2];\n          const k$$24 = m$$19.fields[0];\n          const $acc$$8$$75 = acc$$8;\n          m$$19 = l$$19;\n          acc$$8 = new List([k$$24, v$$20], MapTreeModule$$$loop(r$$19, $acc$$8$$75));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator(comparer$$14, acc$$10, e) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      const $acc$$10$$77 = acc$$10;\n      const $comparer$$14$$76 = comparer$$14;\n      const $e$$78 = e;\n      comparer$$14 = $comparer$$14$$76;\n      acc$$10 = MapTreeModule$$$add($comparer$$14$$76, patternInput$$2[0], patternInput$$2[1], $acc$$10$$77);\n      e = $e$$78;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$79, $gen$$80) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$79, $gen$$80], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list(MapTree$00602$reflection($gen$$79, $gen$$80))], [\"started\", bool]]);\n}\nexport function MapTreeModule$$$collapseLHS(stack) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        const $stack$$81 = stack;\n        stack = new List($stack$$81.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", $stack$$81.head.fields[0], $stack$$81.head.fields[1]), new List($stack$$81.head.fields[3], $stack$$81.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$82 = stack;\n        stack = $stack$$82.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$83, $gen$$84) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$83, $gen$$84]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$85, $gen$$86) {\n  return type(\"Map.FSharpMap\", [$gen$$85, $gen$$86]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  return \"map [\" + join(\"; \", ...map$$1(function mapping(kv) {\n    return toText(printf(\"(%A, %A)\"))(kv[0])(kv[1]);\n  }, this$)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const activePatternResult3090 = e$$1.Current;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3090[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3090[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  const m2 = obj;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m2));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$34, v$$26, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$34, v$$26);\n}\nexport function find(k$$35, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$35);\n}\nexport function tryFind(k$$36, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$36);\n}\nexport function remove(k$$37, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$37);\n}\nexport function containsKey(k$$38, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$38);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  const _arg1$$1 = MapTreeModule$$$tryPick(function f$$39(k$$39, v$$27) {\n    if (f$$38(k$$39, v$$27)) {\n      return some(k$$39);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$41));\n\n  if (_arg1$$1 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$40 = value$$3(_arg1$$1);\n    return k$$40;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  return MapTreeModule$$$tryPick(function f$$41(k$$41, v$$28) {\n    if (f$$40(k$$41, v$$28)) {\n      return some(k$$41);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$43));\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  const res$$6 = new Array(FSharpMap$$get_Count(m$$46));\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$42) {\n      return MapTreeModule$$$find(comparer$$22, k$$42, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      return map$$1(function mapping$$1(kv$$1) {\n        return kv$$1[0];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    set(k$$43, v$$29) {\n      const this$$$3 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$43, v$$29, tree$$1);\n      return this$$$3;\n    },\n\n    values() {\n      return map$$1(function mapping$$2(kv$$2) {\n        return kv$$2[1];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$3, comparer$$23) {\n  return createMutablePrivate(comparer$$23, MapTreeModule$$$ofSeq(comparer$$23, source$$3));\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$30);\n    } else {\n      dict.set(key, Array.from([v$$30]));\n    }\n  }, xs);\n  return map$$1(function mapping$$3(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n  }, xs$$1);\n  return map$$1(function mapping$$4(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]]);\n}\nexport function SetTreeModule$$$countAux(s, acc) {\n  SetTreeModule$$$countAux: while (true) {\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          const r = s.fields[2];\n          const l = s.fields[1];\n          const $acc$$4 = acc;\n          s = l;\n          acc = SetTreeModule$$$countAux(r, $acc$$4 + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        const h$$1 = t.fields[3] | 0;\n        return h$$1 | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  const matchValue = [l$$2, r$$2];\n  var $target$$5;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$5 = 0;\n    } else {\n      $target$$5 = 1;\n    }\n  } else {\n    $target$$5 = 1;\n  }\n\n  switch ($target$$5) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      const t2r = t2.fields[2];\n      const t2l = t2.fields[1];\n      const t2k = t2.fields[0];\n\n      if (SetTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 1) {\n          const t2lr = t2l.fields[2];\n          const t2ll = t2l.fields[1];\n          const t2lk = t2l.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2ll), t2lk, SetTreeModule$$$mk(t2lr, t2k, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2l), t2k, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      const t1r = t1.fields[2];\n      const t1l = t1.fields[1];\n      const t1k = t1.fields[0];\n\n      if (SetTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 1) {\n          const t1rr = t1r.fields[2];\n          const t1rl = t1r.fields[1];\n          const t1rk = t1r.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1l, t1k, t1rl), t1rk, SetTreeModule$$$mk(t1rr, k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1l, t1k, SetTreeModule$$$mk(t1r, k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const k2$$1 = t$$1.fields[0];\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const r$$3 = t$$1.fields[2];\n        const l$$3 = t$$1.fields[1];\n        const k2 = t$$1.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, l$$3), k2, r$$3);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(l$$3, k2, SetTreeModule$$$add(comparer, k$$2, r$$3));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  const matchValue$$1 = [t1$$1, t2$$1];\n  var $target$$6, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (matchValue$$1[0].tag === 2) {\n    if (matchValue$$1[1].tag === 0) {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    } else {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    }\n  } else if (matchValue$$1[0].tag === 1) {\n    if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 3;\n      k2$$2 = matchValue$$1[1].fields[0];\n      t1$$3 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 1) {\n      $target$$6 = 4;\n      h1 = matchValue$$1[0].fields[3];\n      h2 = matchValue$$1[1].fields[3];\n      k1$$1 = matchValue$$1[0].fields[0];\n      k2$$3 = matchValue$$1[1].fields[0];\n      t11 = matchValue$$1[0].fields[1];\n      t12 = matchValue$$1[0].fields[2];\n      t21 = matchValue$$1[1].fields[1];\n      t22 = matchValue$$1[1].fields[2];\n    } else {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    }\n  } else {\n    $target$$6 = 0;\n    t2$$2 = matchValue$$1[1];\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const k1$$3 = t$$2.fields[0];\n        const c$$3 = comparer$$2.Compare(k1$$3, pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const t12$$1 = t$$2.fields[2];\n        const t11$$1 = t$$2.fields[1];\n        const k1$$2 = t$$2.fields[0];\n        const c$$2 = comparer$$2.Compare(pivot, k1$$2) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t11$$1);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], k1$$2, t12$$1)];\n        } else if (c$$2 === 0) {\n          return [t11$$1, true, t12$$1];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t12$$1);\n          return [SetTreeModule$$$balance(comparer$$2, t11$$1, k1$$2, patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        const k2$$4 = t$$3.fields[0];\n        return [k2$$4, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        const r$$4 = t$$3.fields[2];\n        const l$$4 = t$$3.fields[1];\n        const k2$$5 = t$$3.fields[0];\n\n        if (l$$4.tag === 0) {\n          return [k2$$5, r$$4];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(l$$4);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], k2$$5, r$$4)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const k2$$6 = t$$4.fields[0];\n        const c$$4 = comparer$$3.Compare(k$$4, k2$$6) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const r$$5 = t$$4.fields[2];\n        const l$$5 = t$$4.fields[1];\n        const k2$$7 = t$$4.fields[0];\n        const c$$5 = comparer$$3.Compare(k$$4, k2$$7) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, l$$5), k2$$7, r$$5);\n        } else if (c$$5 === 0) {\n          const matchValue$$2 = [l$$5, r$$5];\n\n          if (matchValue$$2[0].tag === 0) {\n            return r$$5;\n          } else if (matchValue$$2[1].tag === 0) {\n            return l$$5;\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(r$$5);\n            return SetTreeModule$$$mk(l$$5, patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(l$$5, k2$$7, SetTreeModule$$$remove(comparer$$3, k$$4, r$$5));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem(comparer$$4, k$$5, t$$5) {\n  SetTreeModule$$$mem: while (true) {\n    switch (t$$5.tag) {\n      case 2:\n        {\n          const k2$$9 = t$$5.fields[0];\n          return comparer$$4.Compare(k$$5, k2$$9) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$6 = t$$5.fields[2];\n          const l$$6 = t$$5.fields[1];\n          const k2$$8 = t$$5.fields[0];\n          const c$$6 = comparer$$4.Compare(k$$5, k2$$8) | 0;\n\n          if (c$$6 < 0) {\n            const $comparer$$4$$7 = comparer$$4;\n            const $k$$5$$8 = k$$5;\n            comparer$$4 = $comparer$$4$$7;\n            k$$5 = $k$$5$$8;\n            t$$5 = l$$6;\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            const $comparer$$4$$9 = comparer$$4;\n            const $k$$5$$10 = k$$5;\n            comparer$$4 = $comparer$$4$$9;\n            k$$5 = $k$$5$$10;\n            t$$5 = r$$6;\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($arg$$11, $arg$$12) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $arg$$11,\n          t$$6 = $arg$$12;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          const k2$$11 = t$$6.fields[0];\n          f(k2$$11);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          const r$$7 = t$$6.fields[2];\n          const l$$7 = t$$6.fields[1];\n          const k2$$10 = t$$6.fields[0];\n          SetTreeModule$$$iter(f, l$$7);\n          f(k2$$10);\n          $arg$$11 = f;\n          $arg$$12 = r$$7;\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($arg$$13, $arg$$14, $arg$$15) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $arg$$13,\n          m$$1 = $arg$$14,\n          x$$1 = $arg$$15;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          const k$$7 = m$$1.fields[0];\n          return f$$1(k$$7, x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          const r$$8 = m$$1.fields[2];\n          const l$$8 = m$$1.fields[1];\n          const k$$6 = m$$1.fields[0];\n          $arg$$13 = f$$1;\n          $arg$$14 = l$$8;\n          $arg$$15 = f$$1(k$$6, SetTreeModule$$$foldBack(f$$1, r$$8, x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($arg$$16, $arg$$17, $arg$$18) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $arg$$16,\n          x$$2 = $arg$$17,\n          m$$2 = $arg$$18;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          const k$$9 = m$$2.fields[0];\n          return f$$2(x$$2, k$$9);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const r$$9 = m$$2.fields[2];\n          const l$$9 = m$$2.fields[1];\n          const k$$8 = m$$2.fields[0];\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, l$$9);\n          const x$$4 = f$$2(x$$3, k$$8);\n          $arg$$16 = f$$2;\n          $arg$$17 = x$$4;\n          $arg$$18 = r$$9;\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($arg$$19, $arg$$20) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $arg$$19,\n          m$$3 = $arg$$20;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          const k2$$13 = m$$3.fields[0];\n          return f$$3(k2$$13);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          const r$$10 = m$$3.fields[2];\n          const l$$10 = m$$3.fields[1];\n          const k2$$12 = m$$3.fields[0];\n\n          if (f$$3(k2$$12) ? SetTreeModule$$$forall(f$$3, l$$10) : false) {\n            $arg$$19 = f$$3;\n            $arg$$20 = r$$10;\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($arg$$21, $arg$$22) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $arg$$21,\n          m$$4 = $arg$$22;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          const k2$$15 = m$$4.fields[0];\n          return f$$4(k2$$15);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$11 = m$$4.fields[2];\n          const l$$11 = m$$4.fields[1];\n          const k2$$14 = m$$4.fields[0];\n\n          if (f$$4(k2$$14) ? true : SetTreeModule$$$exists(f$$4, l$$11)) {\n            return true;\n          } else {\n            $arg$$21 = f$$4;\n            $arg$$22 = r$$11;\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($arg$$23, $arg$$24, $arg$$25, $arg$$26) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$23,\n          f$$5 = $arg$$24,\n          s$$2 = $arg$$25,\n          acc$$1 = $arg$$26;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          const k$$11 = s$$2.fields[0];\n\n          if (f$$5(k$$11)) {\n            return SetTreeModule$$$add(comparer$$7, k$$11, acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const r$$12 = s$$2.fields[2];\n          const l$$12 = s$$2.fields[1];\n          const k$$10 = s$$2.fields[0];\n          const acc$$2 = f$$5(k$$10) ? SetTreeModule$$$add(comparer$$7, k$$10, acc$$1) : acc$$1;\n          $arg$$23 = comparer$$7;\n          $arg$$24 = f$$5;\n          $arg$$25 = l$$12;\n          $arg$$26 = SetTreeModule$$$filterAux(comparer$$7, f$$5, r$$12, acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux(comparer$$9, m$$6, acc$$3) {\n  SetTreeModule$$$diffAux: while (true) {\n    switch (m$$6.tag) {\n      case 2:\n        {\n          const k$$13 = m$$6.fields[0];\n          return SetTreeModule$$$remove(comparer$$9, k$$13, acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          const r$$13 = m$$6.fields[2];\n          const l$$13 = m$$6.fields[1];\n          const k$$12 = m$$6.fields[0];\n          const $acc$$3$$31 = acc$$3;\n          const $comparer$$9$$30 = comparer$$9;\n          comparer$$9 = $comparer$$9$$30;\n          m$$6 = l$$13;\n          acc$$3 = SetTreeModule$$$diffAux($comparer$$9$$30, r$$13, SetTreeModule$$$remove($comparer$$9$$30, k$$12, $acc$$3$$31));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  const matchValue$$3 = [t1$$4, t2$$4];\n  var $target$$32, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (matchValue$$3[0].tag === 0) {\n    $target$$32 = 1;\n    t$$7 = matchValue$$3[1];\n  } else if (matchValue$$3[0].tag === 2) {\n    if (matchValue$$3[1].tag === 0) {\n      $target$$32 = 2;\n      t$$8 = matchValue$$3[0];\n    } else if (matchValue$$3[1].tag === 2) {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    } else {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    }\n  } else if (matchValue$$3[1].tag === 0) {\n    $target$$32 = 2;\n    t$$8 = matchValue$$3[0];\n  } else if (matchValue$$3[1].tag === 2) {\n    $target$$32 = 4;\n    k2$$17 = matchValue$$3[1].fields[0];\n    t1$$5 = matchValue$$3[0];\n  } else {\n    $target$$32 = 0;\n    h1$$1 = matchValue$$3[0].fields[3];\n    h2$$1 = matchValue$$3[1].fields[3];\n    k1$$4 = matchValue$$3[0].fields[0];\n    k2$$16 = matchValue$$3[1].fields[0];\n    t11$$2 = matchValue$$3[0].fields[1];\n    t12$$2 = matchValue$$3[0].fields[2];\n    t21$$1 = matchValue$$3[1].fields[1];\n    t22$$1 = matchValue$$3[1].fields[2];\n  }\n\n  switch ($target$$32) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7, acc$$4) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    switch (m$$7.tag) {\n      case 2:\n        {\n          const k$$15 = m$$7.fields[0];\n\n          if (SetTreeModule$$$mem(comparer$$12, k$$15, b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, k$$15, acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const r$$14 = m$$7.fields[2];\n          const l$$14 = m$$7.fields[1];\n          const k$$14 = m$$7.fields[0];\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, r$$14, acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, k$$14, b$$3) ? SetTreeModule$$$add(comparer$$12, k$$14, acc$$5) : acc$$5;\n          const $b$$3$$34 = b$$3;\n          const $comparer$$12$$33 = comparer$$12;\n          comparer$$12 = $comparer$$12$$33;\n          b$$3 = $b$$3$$34;\n          m$$7 = l$$14;\n          acc$$4 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($arg$$40, $arg$$41, $arg$$42, $arg$$43, $arg$$44) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $arg$$40,\n          f$$8 = $arg$$41,\n          s$$4 = $arg$$42,\n          acc_0 = $arg$$43,\n          acc_1 = $arg$$44;\n    const acc$$7 = [acc_0, acc_1];\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          const k$$18 = s$$4.fields[0];\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, k$$18, acc$$7[0], acc$$7[1]);\n        }\n\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      default:\n        {\n          const r$$15 = s$$4.fields[2];\n          const l$$15 = s$$4.fields[1];\n          const k$$17 = s$$4.fields[0];\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, r$$15, acc$$7[0], acc$$7[1]);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, k$$17, acc$$8[0], acc$$8[1]);\n          $arg$$40 = comparer$$15;\n          $arg$$41 = f$$8;\n          $arg$$42 = l$$15;\n          $arg$$43 = acc$$9[0];\n          $arg$$44 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        const k2$$19 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$19, new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        const r$$16 = s$$6.fields[2];\n        const l$$16 = s$$6.fields[1];\n        const k2$$18 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$18, l$$16, r$$16]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux(s$$7, n$$1) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    switch (s$$7.tag) {\n      case 2:\n        {\n          const k$$20 = s$$7.fields[0];\n          return k$$20;\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          const l$$17 = s$$7.fields[1];\n          const k$$19 = s$$7.fields[0];\n          s$$7 = l$$17;\n          n$$1 = k$$19;\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        const k$$22 = s$$8.fields[0];\n        return some(k$$22);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const l$$18 = s$$8.fields[1];\n        const k$$21 = s$$8.fields[0];\n        return some(SetTreeModule$$$minimumElementAux(l$$18, k$$21));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux(s$$9, n$$2) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    switch (s$$9.tag) {\n      case 2:\n        {\n          const k$$24 = s$$9.fields[0];\n          return k$$24;\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          const r$$17 = s$$9.fields[2];\n          const k$$23 = s$$9.fields[0];\n          s$$9 = r$$17;\n          n$$2 = k$$23;\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        const k$$26 = s$$10.fields[0];\n        return some(k$$26);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const r$$18 = s$$10.fields[2];\n        const k$$25 = s$$10.fields[0];\n        return some(SetTreeModule$$$maximumElementAux(r$$18, k$$25));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$48) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$48], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list(SetTree$00601$reflection($gen$$48))], [\"started\", bool]]);\n}\nexport function SetTreeModule$$$collapseLHS(stack) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        const $stack$$49 = stack;\n        stack = new List($stack$$49.head.fields[1], new List(SetTreeModule$$$SetOne($stack$$49.head.fields[0]), new List($stack$$49.head.fields[2], $stack$$49.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$50 = stack;\n        stack = $stack$$50.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$51) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$51]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks(comparer$$17, l1, l2) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const matchValue$$8 = [l1, l2];\n    var $target$$52, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (matchValue$$8[0].tail != null) {\n      if (matchValue$$8[1].tail != null) {\n        if (matchValue$$8[1].head.tag === 2) {\n          if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 4;\n            n1k = matchValue$$8[0].head.fields[0];\n            n2k = matchValue$$8[1].head.fields[0];\n            t1$$7 = matchValue$$8[0].tail;\n            t2$$7 = matchValue$$8[1].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            if (matchValue$$8[0].head.fields[1].tag === 0) {\n              $target$$52 = 6;\n              emp = matchValue$$8[0].head.fields[1];\n              n1k$$2 = matchValue$$8[0].head.fields[0];\n              n1r = matchValue$$8[0].head.fields[2];\n              n2k$$2 = matchValue$$8[1].head.fields[0];\n              t1$$9 = matchValue$$8[0].tail;\n              t2$$9 = matchValue$$8[1].tail;\n            } else {\n              $target$$52 = 9;\n              n1k$$5 = matchValue$$8[0].head.fields[0];\n              n1l = matchValue$$8[0].head.fields[1];\n              n1r$$2 = matchValue$$8[0].head.fields[2];\n              t1$$12 = matchValue$$8[0].tail;\n            }\n          } else {\n            $target$$52 = 10;\n            n2k$$4 = matchValue$$8[1].head.fields[0];\n            t2$$11 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[1].head.tag === 1) {\n          if (matchValue$$8[1].head.fields[1].tag === 0) {\n            if (matchValue$$8[0].head.tag === 2) {\n              $target$$52 = 5;\n              n1k$$1 = matchValue$$8[0].head.fields[0];\n              n2k$$1 = matchValue$$8[1].head.fields[0];\n              n2r = matchValue$$8[1].head.fields[2];\n              t1$$8 = matchValue$$8[0].tail;\n              t2$$8 = matchValue$$8[1].tail;\n            } else if (matchValue$$8[0].head.tag === 1) {\n              if (matchValue$$8[0].head.fields[1].tag === 0) {\n                $target$$52 = 7;\n                n1k$$3 = matchValue$$8[0].head.fields[0];\n                n1r$$1 = matchValue$$8[0].head.fields[2];\n                n2k$$3 = matchValue$$8[1].head.fields[0];\n                n2r$$1 = matchValue$$8[1].head.fields[2];\n                t1$$10 = matchValue$$8[0].tail;\n                t2$$10 = matchValue$$8[1].tail;\n              } else {\n                $target$$52 = 9;\n                n1k$$5 = matchValue$$8[0].head.fields[0];\n                n1l = matchValue$$8[0].head.fields[1];\n                n1r$$2 = matchValue$$8[0].head.fields[2];\n                t1$$12 = matchValue$$8[0].tail;\n              }\n            } else {\n              $target$$52 = 11;\n              n2k$$5 = matchValue$$8[1].head.fields[0];\n              n2l = matchValue$$8[1].head.fields[1];\n              n2r$$2 = matchValue$$8[1].head.fields[2];\n              t2$$12 = matchValue$$8[1].tail;\n            }\n          } else if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 8;\n            n1k$$4 = matchValue$$8[0].head.fields[0];\n            t1$$11 = matchValue$$8[0].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            $target$$52 = 9;\n            n1k$$5 = matchValue$$8[0].head.fields[0];\n            n1l = matchValue$$8[0].head.fields[1];\n            n1r$$2 = matchValue$$8[0].head.fields[2];\n            t1$$12 = matchValue$$8[0].tail;\n          } else {\n            $target$$52 = 11;\n            n2k$$5 = matchValue$$8[1].head.fields[0];\n            n2l = matchValue$$8[1].head.fields[1];\n            n2r$$2 = matchValue$$8[1].head.fields[2];\n            t2$$12 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[0].head.tag === 2) {\n          $target$$52 = 8;\n          n1k$$4 = matchValue$$8[0].head.fields[0];\n          t1$$11 = matchValue$$8[0].tail;\n        } else if (matchValue$$8[0].head.tag === 1) {\n          $target$$52 = 9;\n          n1k$$5 = matchValue$$8[0].head.fields[0];\n          n1l = matchValue$$8[0].head.fields[1];\n          n1r$$2 = matchValue$$8[0].head.fields[2];\n          t1$$12 = matchValue$$8[0].tail;\n        } else {\n          $target$$52 = 3;\n          t1$$6 = matchValue$$8[0].tail;\n          t2$$6 = matchValue$$8[1].tail;\n        }\n      } else {\n        $target$$52 = 2;\n      }\n    } else if (matchValue$$8[1].tail != null) {\n      $target$$52 = 1;\n    } else {\n      $target$$52 = 0;\n    }\n\n    switch ($target$$52) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          const $comparer$$17$$53 = comparer$$17;\n          comparer$$17 = $comparer$$17$$53;\n          l1 = t1$$6;\n          l2 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            const $comparer$$17$$54 = comparer$$17;\n            comparer$$17 = $comparer$$17$$54;\n            l1 = t1$$7;\n            l2 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            const $comparer$$17$$55 = comparer$$17;\n            comparer$$17 = $comparer$$17$$55;\n            l1 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            l2 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            const $comparer$$17$$56 = comparer$$17;\n            comparer$$17 = $comparer$$17$$56;\n            l1 = new List(n1r, t1$$9);\n            l2 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            const $comparer$$17$$57 = comparer$$17;\n            comparer$$17 = $comparer$$17$$57;\n            l1 = new List(n1r$$1, t1$$10);\n            l2 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          const $comparer$$17$$58 = comparer$$17;\n          const $l2$$59 = l2;\n          comparer$$17 = $comparer$$17$$58;\n          l1 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          l2 = $l2$$59;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          const $comparer$$17$$60 = comparer$$17;\n          const $l2$$61 = l2;\n          comparer$$17 = $comparer$$17$$60;\n          l1 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          l2 = $l2$$61;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          const $comparer$$17$$62 = comparer$$17;\n          const $l1$$63 = l1;\n          comparer$$17 = $comparer$$17$$62;\n          l1 = $l1$$63;\n          l2 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          const $comparer$$17$$64 = comparer$$17;\n          const $l1$$65 = l1;\n          comparer$$17 = $comparer$$17$$64;\n          l1 = $l1$$65;\n          l2 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  const matchValue$$9 = [s1, s2];\n\n  if (matchValue$$9[0].tag === 0) {\n    if (matchValue$$9[1].tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (matchValue$$9[1].tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop(m$$8, acc$$10) {\n  SetTreeModule$$$loop: while (true) {\n    switch (m$$8.tag) {\n      case 2:\n        {\n          const k$$32 = m$$8.fields[0];\n          return new List(k$$32, acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          const r$$20 = m$$8.fields[2];\n          const l$$20 = m$$8.fields[1];\n          const k$$31 = m$$8.fields[0];\n          const $acc$$10$$66 = acc$$10;\n          m$$8 = l$$20;\n          acc$$10 = new List(k$$31, SetTreeModule$$$loop(r$$20, $acc$$10$$66));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator(comparer$$19, acc$$11, e) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const $acc$$11$$68 = acc$$11;\n      const $comparer$$19$$67 = comparer$$19;\n      const $e$$69 = e;\n      comparer$$19 = $comparer$$19$$67;\n      acc$$11 = SetTreeModule$$$add($comparer$$19$$67, $e$$69.Current, $acc$$11$$68);\n      e = $e$$69;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$70) {\n  return type(\"Set.FSharpSet\", [$gen$$70]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  if (FSharpSet$$get_Tree(s$$27).tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  if (FSharpSet$$get_Tree(s$$28).tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$38806891(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  if (FSharpSet$$get_Tree(a$$4).tag === 0) {\n    return a$$4;\n  } else if (FSharpSet$$get_Tree(b$$5).tag === 0) {\n    return a$$4;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  if (FSharpSet$$get_Tree(b$$6).tag === 0) {\n    return a$$5;\n  } else if (FSharpSet$$get_Tree(a$$5).tag === 0) {\n    return b$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  if (FSharpSet$$get_Tree(b$$7).tag === 0) {\n    return b$$7;\n  } else if (FSharpSet$$get_Tree(a$$6).tag === 0) {\n    return a$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  const this$ = this;\n  return \"set [\" + join(\"; \", ...map$$1(String, this$)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$22, y$$4) {\n    return (x$$22 << 1) + y$$4 + 631;\n  };\n\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    res = combineHash(res, structuralHash(e$$1.Current));\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$38806891(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source, comparer$$32) {\n  return createMutablePrivate(comparer$$32, SetTreeModule$$$ofSeq(comparer$$32, source));\n}\nexport function distinct(xs, comparer$$33) {\n  return createMutable(xs, comparer$$33);\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  const li$$1 = [];\n  const hashSet = createMutable(empty$$1(), comparer$$34);\n  iterate$$1(function (x$$37) {\n    if (hashSet.add_(projection(x$$37))) {\n      li$$1.push(x$$37);\n    }\n  }, xs$$1);\n  return li$$1;\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$38) {\n    return acc$$14.add(x$$38);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$39) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$39)) {\n      s1$$5.delete(x$$39);\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$40) {\n    s1$$6.delete(x$$40);\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { defaultArg, value as value$$10, some } from \"./Option.js\";\nimport { compare, getItemFromDict, count as count$$26, addToDict, addToSet, tryGetValue, comparerFromEqualityComparer, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { iterateIndexed as iterateIndexed$$1, iterate as iterate$$1 } from \"./Seq.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function mapping(x, i$$3) {\n      return f(i$$3, x);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    const len$$2 = matchValue | 0;\n    let acc = state;\n    const res = new cons$$7(len$$2);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    const len$$3 = matchValue$$1 | 0;\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(len$$3);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  const arrays$$1 = Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (ArrayBuffer.isView(arrays$$1[0])) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$4 = arrays$$1[idx];\n            totalLength = totalLength + arr$$4.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$5 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$5.length - 1; j++) {\n              result$$4[totalIdx] = arr$$5[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], comparerFromEqualityComparer(eq));\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n    }\n  }\n\n  const res$$2 = new Array(dict.size);\n  let i$$12 = 0;\n  iterate$$1(function (group) {\n    res$$2[i$$12] = [group[0], group[1]];\n    i$$12 = i$$12 + 1;\n  }, dict);\n  return res$$2;\n}\nexport function distinctBy(projection$$1, array$$16, eq$$1) {\n  const hashSet = createMutable$$1([], comparerFromEqualityComparer(eq$$1));\n  return filter(function predicate$$2($arg$$3) {\n    return addToSet(projection$$1($arg$$3), hashSet);\n  }, array$$16);\n}\nexport function distinct(array$$18, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$18, eq$$2);\n}\nexport function where(predicate$$3, array$$19) {\n  return array$$19.filter(predicate$$3);\n}\nexport function contains(value$$3, array$$21, eq$$3) {\n  const loop = function loop(i$$13) {\n    loop: while (true) {\n      if (i$$13 >= array$$21.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$3, array$$21[i$$13])) {\n        return true;\n      } else {\n        const $i$$13$$51 = i$$13;\n        i$$13 = $i$$13$$51 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$22, eq$$4) {\n  if (array$$22.length === 0) {\n    return array$$22;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, comparerFromEqualityComparer(eq$$4));\n    return array$$22.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$25, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], comparerFromEqualityComparer(eq$$5));\n  const keys = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$25.length - 1; idx$$3++) {\n    const v = array$$25[idx$$3];\n    const key$$1 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$1, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$1, new List(v, new List()));\n      keys.push(key$$1);\n    }\n  }\n\n  const result$$5 = new Array(count$$26(keys));\n  iterateIndexed$$1(function action(i$$14, key$$2) {\n    result$$5[i$$14] = [key$$2, cons$$11.from(getItemFromDict(dict$$1, key$$2)).reverse()];\n  }, keys);\n  return result$$5;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$4, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$4;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$6 = new cons$$15(count$$8);\n\n  for (let i$$15 = 0; i$$15 <= count$$8 - 1; i$$15++) {\n    result$$6[i$$15] = initializer(i$$15);\n  }\n\n  return result$$6;\n}\nexport function pairwise(array$$28) {\n  if (array$$28.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$28.length - 1 | 0;\n    const result$$7 = new Array(count$$9);\n\n    for (let i$$16 = 0; i$$16 <= count$$9 - 1; i$$16++) {\n      result$$7[i$$16] = [array$$28[i$$16], array$$28[i$$16 + 1]];\n    }\n\n    return result$$7;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$8 = new cons$$16(count$$10);\n\n  for (let i$$17 = 0; i$$17 <= result$$8.length - 1; i$$17++) {\n    result$$8[i$$17] = initial;\n  }\n\n  return result$$8;\n}\nexport function copy(array$$29, cons$$17) {\n  return array$$29.slice();\n}\nexport function reverse(array$$31, cons$$18) {\n  return array$$31.slice().reverse();\n}\nexport function scan(folder, state$$2, array$$35, cons$$19) {\n  const res$$3 = new cons$$19(array$$35.length + 1);\n  res$$3[0] = state$$2;\n\n  for (let i$$18 = 0; i$$18 <= array$$35.length - 1; i$$18++) {\n    res$$3[i$$18 + 1] = folder(res$$3[i$$18], array$$35[i$$18]);\n  }\n\n  return res$$3;\n}\nexport function scanBack(folder$$1, array$$36, state$$3, cons$$20) {\n  const res$$4 = new cons$$20(array$$36.length + 1);\n  res$$4[array$$36.length] = state$$3;\n\n  for (let i$$19 = array$$36.length - 1; i$$19 >= 0; i$$19--) {\n    res$$4[i$$19] = folder$$1(array$$36[i$$19], res$$4[i$$19 + 1]);\n  }\n\n  return res$$4;\n}\nexport function skip(count$$11, array$$37, cons$$21) {\n  if (count$$11 > array$$37.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$37.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$37.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$39, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$39.length ? predicate$$7(array$$39[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$39.length) {\n    return new cons$$23(0);\n  } else {\n    return array$$39.slice(count$$14);\n  }\n}\nexport function take(count$$16, array$$41, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$41.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$41.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$43, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$43.length ? predicate$$8(array$$43[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$18);\n  }\n}\nexport function addRangeInPlace(range, array$$45) {\n  const iter = range[Symbol.iterator]();\n  let cur = iter.next();\n\n  while (!cur.done) {\n    array$$45.push(cur.value);\n    cur = iter.next();\n  }\n}\nexport function removeInPlace(item$$2, array$$47) {\n  const i$$20 = array$$47.indexOf(item$$2);\n\n  if (i$$20 > -1) {\n    array$$47.splice(i$$20, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$50) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$21 = array$$50.findIndex(predicate$$9);\n\n    if (i$$21 > -1) {\n      array$$50.splice(i$$21, 1);\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$4, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$22 = sourceIndex; i$$22 <= sourceIndex + count$$21 - 1; i$$22++) {\n    target$$4[i$$22 + diff] = source$$4[i$$22];\n  }\n}\nexport function partition(f$$6, source$$5, cons$$29) {\n  const len$$9 = source$$5.length | 0;\n  const res1 = new cons$$29(len$$9);\n  const res2 = new cons$$29(len$$9);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$23 = 0; i$$23 <= len$$9 - 1; i$$23++) {\n    if (f$$6(source$$5[i$$23])) {\n      res1[iTrue] = source$$5[i$$23];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$5[i$$23];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\nexport function find(predicate$$11, array$$55) {\n  const matchValue$$5 = array$$55.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    return indexNotFound();\n  } else {\n    const res$$5 = value$$10(matchValue$$5);\n    return res$$5;\n  }\n}\nexport function tryFind(predicate$$13, array$$57) {\n  return array$$57.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$59) {\n  var index;\n  const matchValue$$6 = array$$59.findIndex(predicate$$15);\n\n  if (index = matchValue$$6 | 0, index > -1) {\n    const index$$1 = matchValue$$6 | 0;\n    return index$$1 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$61) {\n  var index$$2;\n  const matchValue$$7 = array$$61.findIndex(predicate$$17);\n\n  if (index$$2 = matchValue$$7 | 0, index$$2 > -1) {\n    const index$$3 = matchValue$$7 | 0;\n    return index$$3;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$63) {\n  const loop$$1 = function loop$$1(i$$24) {\n    loop$$1: while (true) {\n      if (i$$24 >= array$$63.length) {\n        return indexNotFound();\n      } else {\n        const matchValue$$8 = chooser(array$$63[i$$24]);\n\n        if (matchValue$$8 != null) {\n          const res$$6 = value$$10(matchValue$$8);\n          return res$$6;\n        } else {\n          const $i$$24$$88 = i$$24;\n          i$$24 = $i$$24$$88 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$64) {\n  const loop$$2 = function loop$$2(i$$25) {\n    loop$$2: while (true) {\n      if (i$$25 >= array$$64.length) {\n        return null;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$64[i$$25]);\n\n        if (matchValue$$9 == null) {\n          const $i$$25$$91 = i$$25;\n          i$$25 = $i$$25$$91 + 1;\n          continue loop$$2;\n        } else {\n          const res$$7 = matchValue$$9;\n          return res$$7;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$65) {\n  const loop$$3 = function loop$$3(i$$26) {\n    loop$$3: while (true) {\n      if (i$$26 < 0) {\n        return indexNotFound();\n      } else if (predicate$$19(array$$65[i$$26])) {\n        return array$$65[i$$26];\n      } else {\n        const $i$$26$$94 = i$$26;\n        i$$26 = $i$$26$$94 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$65.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$66) {\n  const loop$$4 = function loop$$4(i$$27) {\n    loop$$4: while (true) {\n      if (i$$27 < 0) {\n        return null;\n      } else if (predicate$$20(array$$66[i$$27])) {\n        return some(array$$66[i$$27]);\n      } else {\n        const $i$$27$$97 = i$$27;\n        i$$27 = $i$$27$$97 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$66.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$67) {\n  const loop$$5 = function loop$$5(i$$28) {\n    loop$$5: while (true) {\n      if (i$$28 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$67[i$$28])) {\n        return i$$28 | 0;\n      } else {\n        const $i$$28$$100 = i$$28;\n        i$$28 = $i$$28$$100 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$67.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$68) {\n  const loop$$6 = function loop$$6(i$$29) {\n    loop$$6: while (true) {\n      if (i$$29 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$22(array$$68[i$$29])) {\n        return i$$29 | 0;\n      } else {\n        const $i$$29$$103 = i$$29;\n        i$$29 = $i$$29$$103 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$68.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$69) {\n  const loop$$7 = function loop$$7(i$$30) {\n    loop$$7: while (true) {\n      if (i$$30 < 0) {\n        return null;\n      } else if (predicate$$23(array$$69[i$$30])) {\n        return i$$30;\n      } else {\n        const $i$$30$$106 = i$$30;\n        i$$30 = $i$$30$$106 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$69.length - 1);\n}\nexport function choose(chooser$$2, array$$70, cons$$30) {\n  const f$$7 = function f$$7(x$$3) {\n    return chooser$$2(x$$3) != null;\n  };\n\n  const g = function g(x$$4) {\n    return value$$10(chooser$$2(x$$4));\n  };\n\n  const arr$$6 = array$$70.filter(f$$7);\n  return map(g, arr$$6, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$72) {\n  return array$$72.reduce(function folder$$3(acc$$2, x$$5, i$$31) {\n    return folder$$2(i$$31, acc$$2, x$$5);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$74) {\n  return array$$74.reduce(folder$$4, state$$6);\n}\nexport function iterate(action$$1, array$$76) {\n  for (let i$$32 = 0; i$$32 <= array$$76.length - 1; i$$32++) {\n    action$$1(array$$76[i$$32]);\n  }\n}\nexport function iterateIndexed(action$$2, array$$77) {\n  for (let i$$33 = 0; i$$33 <= array$$77.length - 1; i$$33++) {\n    action$$2(i$$33, array$$77[i$$33]);\n  }\n}\nexport function iterate2(action$$3, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$34 = 0; i$$34 <= array1$$2.length - 1; i$$34++) {\n    action$$3(array1$$2[i$$34], array2$$2[i$$34]);\n  }\n}\nexport function iterateIndexed2(action$$4, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$35 = 0; i$$35 <= array1$$3.length - 1; i$$35++) {\n    action$$4(i$$35, array1$$3[i$$35], array2$$3[i$$35]);\n  }\n}\nexport function isEmpty(array$$78) {\n  return array$$78.length === 0;\n}\nexport function forAll(predicate$$25, array$$79) {\n  return array$$79.every(predicate$$25);\n}\nexport function permute(f$$8, array$$81) {\n  const size = array$$81.length | 0;\n  const res$$8 = new array$$81.constructor(array$$81.length);\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$36, x$$7) {\n    const j$$1 = f$$8(i$$36) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$8[j$$1] = x$$7;\n    checkFlags[j$$1] = 1;\n  }, array$$81);\n  const isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$8;\n}\nexport function setSlice(target$$5, lower, upper, source$$6) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$6.length <= length : false) {\n    return target$$5.set(source$$6, lower$$1);\n  } else {\n    for (let i$$37 = 0; i$$37 <= length; i$$37++) {\n      target$$5[i$$37 + lower$$1] = source$$6[i$$37];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$9, y$$1) {\n    return comparer.Compare(projection$$3(x$$9), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$10, y$$2) {\n    return comparer$$1.Compare(x$$10, y$$2);\n  });\n}\n\nfunction copyArray(array$$82) {\n  const result$$9 = new array$$82.constructor(array$$82.length);\n\n  for (let i$$38 = 0; i$$38 <= array$$82.length - 1; i$$38++) {\n    result$$9[i$$38] = array$$82[i$$38];\n  }\n\n  return result$$9;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function comparer$$3(x$$11, y$$3) {\n    return comparer$$2.Compare(x$$11, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function comparer$$5(x$$12, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$12), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function comparer$$7(x$$13, y$$5) {\n    return comparer$$6.Compare(x$$13, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function comparer$$9(x$$14, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$14), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$9 = [];\n\n  const loop$$8 = function loop$$8(state$$9) {\n    loop$$8: while (true) {\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$15 = matchValue$$10[0];\n        const s$0027$$2 = matchValue$$10[1];\n        res$$9.push(x$$15);\n        state$$9 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$9;\n}\nexport function unzip(array$$84) {\n  const len$$11 = array$$84.length | 0;\n  const res1$$1 = new Array(len$$11);\n  const res2$$1 = new Array(len$$11);\n  iterateIndexed(function (i$$39, tupledArg) {\n    res1$$1[i$$39] = tupledArg[0];\n    res2$$1[i$$39] = tupledArg[1];\n  }, array$$84);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$85) {\n  const len$$14 = array$$85.length | 0;\n  const res1$$2 = new Array(len$$14);\n  const res2$$2 = new Array(len$$14);\n  const res3 = new Array(len$$14);\n  iterateIndexed(function (i$$40, tupledArg$$1) {\n    res1$$2[i$$40] = tupledArg$$1[0];\n    res2$$2[i$$40] = tupledArg$$1[1];\n    res3[i$$40] = tupledArg$$1[2];\n  }, array$$85);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$10 = new Array(array1$$4.length);\n\n  for (let i$$41 = 0; i$$41 <= array1$$4.length - 1; i$$41++) {\n    result$$10[i$$41] = [array1$$4[i$$41], array2$$4[i$$41]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$11 = new Array(array1$$5.length);\n\n  for (let i$$42 = 0; i$$42 <= array1$$5.length - 1; i$$42++) {\n    result$$11[i$$42] = [array1$$5[i$$42], array2$$5[i$$42], array3[i$$42]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$86) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$86.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$16 = 0; x$$16 <= ~~Math.ceil(array$$86.length / chunkSize) - 1; x$$16++) {\n      const start$$8 = x$$16 * chunkSize | 0;\n      const slice = array$$86.slice(start$$8, start$$8 + chunkSize);\n      result$$12.push(slice);\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$89) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$89.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$89.slice(0, 0 + index$$4), array$$89.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$43 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$43 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$43], array2$$6[i$$43]);\n        i$$43 = i$$43 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$92) {\n  if (array$$92.length === 1) {\n    return array$$92[0];\n  } else if (array$$92.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$93) {\n  if (array$$93.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$93[0];\n  }\n}\nexport function tryHead(array$$94) {\n  if (array$$94.length === 0) {\n    return null;\n  } else {\n    return some(array$$94[0]);\n  }\n}\nexport function tail(array$$95) {\n  if (array$$95.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$95.slice(1);\n}\nexport function item(index$$5, array$$97) {\n  return array$$97[index$$5];\n}\nexport function tryItem(index$$6, array$$98) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$98.length) {\n    return null;\n  } else {\n    return some(array$$98[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$99, state$$10) {\n  return array$$99.reduceRight(function folder$$7(acc$$4, x$$17, i$$44) {\n    return folder$$6(i$$44, x$$17, acc$$4);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$101, state$$12) {\n  return array$$101.reduceRight(function folder$$9(acc$$5, x$$18) {\n    return folder$$8(x$$18, acc$$5);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$45 = 0; i$$45 <= array1$$8.length - 1; i$$45++) {\n    acc$$6 = folder$$10(i$$45, acc$$6, array1$$8[i$$45], array2$$8[i$$45]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$19, y$$7) {\n    return folder$$11(acc$$7, x$$19, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$46 = 1; i$$46 <= size$$1; i$$46++) {\n    acc$$8 = folder$$12(i$$46 - 1, array1$$10[size$$1 - i$$46], array2$$10[size$$1 - i$$46], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$20, y$$8, acc$$9) {\n    return f$$9(x$$20, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$103) {\n  if (array$$103.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$103.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$105) {\n  if (array$$105.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$105.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$21, y$$9) {\n    return acc$$10 ? predicate$$27(x$$21, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($arg$$178, $arg$$179, $arg$$180) {\n  existsOffset: while (true) {\n    const predicate$$28 = $arg$$178,\n          array$$107 = $arg$$179,\n          index$$7 = $arg$$180;\n\n    if (index$$7 === array$$107.length) {\n      return false;\n    } else if (predicate$$28(array$$107[index$$7])) {\n      return true;\n    } else {\n      $arg$$178 = predicate$$28;\n      $arg$$179 = array$$107;\n      $arg$$180 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$108) {\n  return existsOffset(predicate$$29, array$$108, 0);\n}\nexport function existsOffset2($arg$$183, $arg$$184, $arg$$185, $arg$$186) {\n  existsOffset2: while (true) {\n    const predicate$$30 = $arg$$183,\n          array1$$13 = $arg$$184,\n          array2$$13 = $arg$$185,\n          index$$8 = $arg$$186;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $arg$$183 = predicate$$30;\n      $arg$$184 = array1$$13;\n      $arg$$185 = array2$$13;\n      $arg$$186 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$109, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$109.length - 1; i$$47++) {\n    acc$$11 = adder.Add(acc$$11, array$$109[i$$47]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$110, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$48 = 0; i$$48 <= array$$110.length - 1; i$$48++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$110[i$$48]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$22, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$22)) > 0 ? y$$10 : x$$22;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$23, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$23) > 0 ? y$$11 : x$$23;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$24, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$24)) > 0 ? x$$24 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$25, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$25) > 0 ? x$$25 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$111, averager) {\n  if (array$$111.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$49 = 0; i$$49 <= array$$111.length - 1; i$$49++) {\n    total = averager.Add(total, array$$111[i$$49]);\n  }\n\n  return averager.DivideByInt(total, array$$111.length);\n}\nexport function averageBy(projection$$9, array$$112, averager$$1) {\n  if (array$$112.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$50 = 0; i$$50 <= array$$112.length - 1; i$$50++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$112[i$$50]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$112.length);\n}\nexport function ofSeq(source$$8, cons$$31) {\n  return cons$$31.from(source$$8);\n}\nexport function ofList(source$$9, cons$$32) {\n  return cons$$32.from(source$$9);\n}\nexport function toList(source$$10) {\n  const len$$20 = source$$10.length | 0;\n  let target$$7 = new List();\n\n  for (let i$$51 = len$$20 - 1; i$$51 >= 0; i$$51--) {\n    target$$7 = new List(source$$10[i$$51], target$$7);\n  }\n\n  return target$$7;\n}\nexport function windowed(windowSize, source$$11) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  const res$$10 = new Array(max$$1(comparePrimitives, 0, source$$11.length - windowSize));\n\n  for (let i$$52 = windowSize; i$$52 <= source$$11.length; i$$52++) {\n    res$$10[i$$52 - windowSize] = source$$11.slice(i$$52 - windowSize, i$$52 - 1 + 1);\n  }\n\n  return res$$10;\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { FSharpRef, List } from \"./Types.js\";\nimport { iterate as iterate$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet, comparerFromEqualityComparer, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    const x = _arg1.head;\n    return x;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    const x$$1 = _arg1$$1.head;\n    return some(x$$1);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    const xs = _arg1$$2.tail;\n    return xs;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last(_arg1$$3) {\n  last: while (true) {\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        const $_arg1$$3$$2 = _arg1$$3;\n        _arg1$$3 = $_arg1$$3$$2.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast(_arg1$$4) {\n  tryLast: while (true) {\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        const $_arg1$$4$$3 = _arg1$$4;\n        _arg1$$4 = $_arg1$$4$$3.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop(xs$$4, ys$$1) {\n      loop: while (true) {\n        const matchValue = [xs$$4, ys$$1];\n\n        if (matchValue[0].tail != null) {\n          if (matchValue[1].tail != null) {\n            const matchValue$$1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n\n            if (matchValue$$1 === 0) {\n              xs$$4 = matchValue[0].tail;\n              ys$$1 = matchValue[1].tail;\n              continue loop;\n            } else {\n              const res = matchValue$$1 | 0;\n              return res | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (matchValue[1].tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($arg$$7, $arg$$8, $arg$$9, $arg$$10) {\n  foldIndexedAux: while (true) {\n    const f = $arg$$7,\n          i = $arg$$8,\n          acc = $arg$$9,\n          _arg1$$5 = $arg$$10;\n\n    if (_arg1$$5.tail != null) {\n      const xs$$6 = _arg1$$5.tail;\n      const x$$5 = _arg1$$5.head;\n      $arg$$7 = f;\n      $arg$$8 = i + 1;\n      $arg$$9 = f(i, acc, x$$5);\n      $arg$$10 = xs$$6;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($arg$$14, $arg$$15, $arg$$16) {\n  fold: while (true) {\n    const f$$2 = $arg$$14,\n          state$$1 = $arg$$15,\n          xs$$8 = $arg$$16;\n\n    if (xs$$8.tail != null) {\n      const t = xs$$8.tail;\n      const h = xs$$8.head;\n      $arg$$14 = f$$2;\n      $arg$$15 = f$$2(state$$1, h);\n      $arg$$16 = t;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  return reverse(fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12));\n}\nexport function concat(lists) {\n  return reverse(fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists));\n}\nexport function foldIndexed2Aux($arg$$20, $arg$$21, $arg$$22, $arg$$23, $arg$$24) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $arg$$20,\n          i$$1 = $arg$$21,\n          acc$$5 = $arg$$22,\n          bs = $arg$$23,\n          cs = $arg$$24;\n    const matchValue$$2 = [bs, cs];\n    var $target$$25, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (matchValue$$2[0].tail != null) {\n      if (matchValue$$2[1].tail != null) {\n        $target$$25 = 1;\n        x$$11 = matchValue$$2[0].head;\n        xs$$16 = matchValue$$2[0].tail;\n        y$$1 = matchValue$$2[1].head;\n        ys$$3 = matchValue$$2[1].tail;\n      } else {\n        $target$$25 = 2;\n      }\n    } else if (matchValue$$2[1].tail == null) {\n      $target$$25 = 0;\n    } else {\n      $target$$25 = 2;\n    }\n\n    switch ($target$$25) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $arg$$20 = f$$5;\n          $arg$$21 = i$$1 + 1;\n          $arg$$22 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $arg$$23 = xs$$16;\n          $arg$$24 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner(acc$$6, state$$8) {\n    unfoldInner: while (true) {\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        const $acc$$6$$40 = acc$$6;\n        acc$$6 = new List(x$$12, $acc$$6$$40);\n        state$$8 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($arg$$41, $arg$$42, $arg$$43, $arg$$44, $arg$$45, $arg$$46) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $arg$$41,\n          i$$2 = $arg$$42,\n          acc$$7 = $arg$$43,\n          bs$$1 = $arg$$44,\n          cs$$1 = $arg$$45,\n          ds = $arg$$46;\n    const matchValue$$4 = [bs$$1, cs$$1, ds];\n    var $target$$47, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (matchValue$$4[0].tail != null) {\n      if (matchValue$$4[1].tail != null) {\n        if (matchValue$$4[2].tail != null) {\n          $target$$47 = 1;\n          x$$13 = matchValue$$4[0].head;\n          xs$$20 = matchValue$$4[0].tail;\n          y$$2 = matchValue$$4[1].head;\n          ys$$7 = matchValue$$4[1].tail;\n          z = matchValue$$4[2].head;\n          zs = matchValue$$4[2].tail;\n        } else {\n          $target$$47 = 2;\n        }\n      } else {\n        $target$$47 = 2;\n      }\n    } else if (matchValue$$4[1].tail == null) {\n      if (matchValue$$4[2].tail == null) {\n        $target$$47 = 0;\n      } else {\n        $target$$47 = 2;\n      }\n    } else {\n      $target$$47 = 2;\n    }\n\n    switch ($target$$47) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $arg$$41 = f$$10;\n          $arg$$42 = i$$2 + 1;\n          $arg$$43 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $arg$$44 = xs$$20;\n          $arg$$45 = ys$$7;\n          $arg$$46 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  return ofSeq(scan$$1(f$$13, state$$11, xs$$23));\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  return ofSeq(scanBack$$1(f$$14, xs$$25, state$$12));\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  return ofSeq(collect$$1(f$$15, xs$$29));\n}\nexport function map(f$$16, xs$$31) {\n  return reverse(fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31));\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  return reverse(foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33));\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  return reverse(fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11));\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  return reverse(foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12));\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  return reverse(fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3));\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  return reverse(foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4));\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const foldFn = function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  };\n\n  const patternInput$$1 = fold(foldFn, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($arg$$100, $arg$$101, $arg$$102) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $arg$$100,\n          i$$10 = $arg$$101,\n          _arg1$$9 = $arg$$102;\n\n    if (_arg1$$9.tail != null) {\n      const xs$$51 = _arg1$$9.tail;\n      const x$$28 = _arg1$$9.head;\n      const result = f$$28(i$$10, x$$28);\n\n      if (result == null) {\n        $arg$$100 = f$$28;\n        $arg$$101 = i$$10 + 1;\n        $arg$$102 = xs$$51;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  return find(f$$36, reverse(xs$$59));\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  return tryFind(f$$37, reverse(xs$$62));\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  return tryFindIndexBack$$1(f$$39, ofList(xs$$66, Array));\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  return findIndexBack$$1(f$$41, ofList(xs$$68, Array));\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  return reverse(fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71));\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  return reverse(fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74));\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1(xs$$76) {\n    loop$$1: while (true) {\n      if (xs$$76.tail != null) {\n        const v$$1 = xs$$76.head;\n        const rest = xs$$76.tail;\n\n        if (eq.Equals(value, v$$1)) {\n          return true;\n        } else {\n          xs$$76 = rest;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, comparerFromEqualityComparer(eq$$1));\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    const t$$1 = _arg1$$16.tail;\n    const h$$1 = _arg1$$16.head;\n    return fold(f$$47, h$$1, t$$1);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    const t$$2 = _arg1$$17.tail;\n    const h$$2 = _arg1$$17.head;\n    return foldBack(f$$48, t$$2, h$$2);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($arg$$146, $arg$$147) {\n  exists: while (true) {\n    const f$$51 = $arg$$146,\n          _arg1$$18 = $arg$$147;\n\n    if (_arg1$$18.tail != null) {\n      const xs$$81 = _arg1$$18.tail;\n      const x$$43 = _arg1$$18.head;\n\n      if (f$$51(x$$43)) {\n        return true;\n      } else {\n        $arg$$146 = f$$51;\n        $arg$$147 = xs$$81;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($arg$$148, $arg$$149, $arg$$150) {\n  exists2: while (true) {\n    const f$$52 = $arg$$148,\n          bs$$2 = $arg$$149,\n          cs$$2 = $arg$$150;\n    const matchValue$$9 = [bs$$2, cs$$2];\n    var $target$$151, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (matchValue$$9[0].tail != null) {\n      if (matchValue$$9[1].tail != null) {\n        $target$$151 = 1;\n        x$$44 = matchValue$$9[0].head;\n        xs$$82 = matchValue$$9[0].tail;\n        y$$12 = matchValue$$9[1].head;\n        ys$$18 = matchValue$$9[1].tail;\n      } else {\n        $target$$151 = 2;\n      }\n    } else if (matchValue$$9[1].tail == null) {\n      $target$$151 = 0;\n    } else {\n      $target$$151 = 2;\n    }\n\n    switch ($target$$151) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $arg$$148 = f$$52;\n            $arg$$149 = xs$$82;\n            $arg$$150 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  var xs$$88;\n  return ofArray((xs$$88 = ofList(xs$$87, Array), (xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  }), xs$$88)));\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  var xs$$91;\n  return ofArray((xs$$91 = ofList(xs$$90, Array), (xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  }), xs$$91)));\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  var xs$$94;\n  return ofArray((xs$$94 = ofList(xs$$93, Array), (xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  }), xs$$94)));\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  var xs$$97;\n  return ofArray((xs$$97 = ofList(xs$$96, Array), (xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  }), xs$$97)));\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  var xs$$100;\n  return ofArray((xs$$100 = ofList(xs$$99, Array), (xs$$100.sort(comparer$$9), xs$$100)));\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  return ofArray(permute$$1(f$$55, ofList(xs$$109, Array)));\n}\nexport function skip(i$$16, xs$$111) {\n  const skipInner = function skipInner(i$$17, xs$$112) {\n    skipInner: while (true) {\n      const matchValue$$10 = [i$$17, xs$$112];\n\n      if (matchValue$$10[0] === 0) {\n        return xs$$112;\n      } else if (matchValue$$10[1].tail != null) {\n        const xs$$113 = matchValue$$10[1].tail;\n        const $i$$17$$174 = i$$17;\n        i$$17 = $i$$17$$174 - 1;\n        xs$$112 = xs$$113;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  const matchValue$$11 = [i$$16, xs$$111];\n\n  if (matchValue$$11[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$175, i$$20, xs$$115;\n\n    if (matchValue$$11[0] === 0) {\n      $target$$175 = 0;\n    } else if (matchValue$$11[0] === 1) {\n      if (matchValue$$11[1].tail != null) {\n        $target$$175 = 1;\n      } else {\n        $target$$175 = 2;\n        i$$20 = matchValue$$11[0];\n        xs$$115 = matchValue$$11[1];\n      }\n    } else {\n      $target$$175 = 2;\n      i$$20 = matchValue$$11[0];\n      xs$$115 = matchValue$$11[1];\n    }\n\n    switch ($target$$175) {\n      case 0:\n        {\n          return xs$$111;\n        }\n\n      case 1:\n        {\n          const xs$$114 = matchValue$$11[1].tail;\n          return xs$$114;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$115);\n        }\n    }\n  }\n}\nexport function skipWhile($arg$$176, $arg$$177) {\n  var t$$3, h$$3;\n\n  skipWhile: while (true) {\n    const predicate = $arg$$176,\n          xs$$116 = $arg$$177;\n    var $target$$178, h$$4, t$$4;\n\n    if (xs$$116.tail != null) {\n      if (t$$3 = xs$$116.tail, (h$$3 = xs$$116.head, predicate(h$$3))) {\n        $target$$178 = 0;\n        h$$4 = xs$$116.head;\n        t$$4 = xs$$116.tail;\n      } else {\n        $target$$178 = 1;\n      }\n    } else {\n      $target$$178 = 1;\n    }\n\n    switch ($target$$178) {\n      case 0:\n        {\n          $arg$$176 = predicate;\n          $arg$$177 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$116;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux(error, i$$21, acc$$25, xs$$117) {\n  takeSplitAux: while (true) {\n    const matchValue$$12 = [i$$21, xs$$117];\n\n    if (matchValue$$12[0] === 0) {\n      return [reverse(acc$$25), xs$$117];\n    } else if (matchValue$$12[1].tail != null) {\n      const xs$$118 = matchValue$$12[1].tail;\n      const x$$61 = matchValue$$12[1].head;\n      const $acc$$25$$181 = acc$$25;\n      const $error$$179 = error;\n      const $i$$21$$180 = i$$21;\n      error = $error$$179;\n      i$$21 = $i$$21$$180 - 1;\n      acc$$25 = new List(x$$61, $acc$$25$$181);\n      xs$$117 = xs$$118;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$117];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$119) {\n  const matchValue$$13 = [i$$22, xs$$119];\n\n  if (matchValue$$13[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$182, i$$25, xs$$120;\n\n    if (matchValue$$13[0] === 0) {\n      $target$$182 = 0;\n    } else if (matchValue$$13[0] === 1) {\n      if (matchValue$$13[1].tail != null) {\n        $target$$182 = 1;\n      } else {\n        $target$$182 = 2;\n        i$$25 = matchValue$$13[0];\n        xs$$120 = matchValue$$13[1];\n      }\n    } else {\n      $target$$182 = 2;\n      i$$25 = matchValue$$13[0];\n      xs$$120 = matchValue$$13[1];\n    }\n\n    switch ($target$$182) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$62 = matchValue$$13[1].head;\n          return new List(x$$62, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$25, new List(), xs$$120)[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$121) {\n  if (xs$$121.tail != null) {\n    if (xs$$121.tail.tail == null) {\n      if (predicate$$1(xs$$121.head)) {\n        return xs$$121;\n      } else {\n        return xs$$121.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$121.head)) {\n        return new List();\n      } else {\n        return new List(xs$$121.head, takeWhile(predicate$$1, xs$$121.tail));\n      }\n    }\n  } else {\n    return xs$$121;\n  }\n}\nexport function truncate(i$$26, xs$$123) {\n  const matchValue$$14 = [i$$26, xs$$123];\n\n  if (matchValue$$14[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$185, i$$29, xs$$124;\n\n    if (matchValue$$14[0] === 0) {\n      $target$$185 = 0;\n    } else if (matchValue$$14[0] === 1) {\n      if (matchValue$$14[1].tail != null) {\n        $target$$185 = 1;\n      } else {\n        $target$$185 = 2;\n        i$$29 = matchValue$$14[0];\n        xs$$124 = matchValue$$14[1];\n      }\n    } else {\n      $target$$185 = 2;\n      i$$29 = matchValue$$14[0];\n      xs$$124 = matchValue$$14[1];\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$65 = matchValue$$14[1].head;\n          return new List(x$$65, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(false, i$$29, new List(), xs$$124)[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$125) {\n  const matchValue$$15 = [i$$30, xs$$125];\n\n  if (matchValue$$15[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$186, i$$33, xs$$127;\n\n    if (matchValue$$15[0] === 0) {\n      $target$$186 = 0;\n    } else if (matchValue$$15[0] === 1) {\n      if (matchValue$$15[1].tail != null) {\n        $target$$186 = 1;\n      } else {\n        $target$$186 = 2;\n        i$$33 = matchValue$$15[0];\n        xs$$127 = matchValue$$15[1];\n      }\n    } else {\n      $target$$186 = 2;\n      i$$33 = matchValue$$15[0];\n      xs$$127 = matchValue$$15[1];\n    }\n\n    switch ($target$$186) {\n      case 0:\n        {\n          return [new List(), xs$$125];\n        }\n\n      case 1:\n        {\n          const xs$$126 = matchValue$$15[1].tail;\n          const x$$66 = matchValue$$15[1].head;\n          return [new List(x$$66, new List()), xs$$126];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$127);\n        }\n    }\n  }\n}\nexport function slice(lower, upper, xs$$128) {\n  const lower$$1 = defaultArg(lower, -1) | 0;\n  const upper$$1 = defaultArg(upper, -1) | 0;\n  return reverse(foldIndexed(function f$$56(i$$34, acc$$26, x$$67) {\n    if ((lower$$1 === -1 ? true : lower$$1 <= i$$34) ? upper$$1 === -1 ? true : i$$34 <= upper$$1 : false) {\n      return new List(x$$67, acc$$26);\n    } else {\n      return acc$$26;\n    }\n  }, new List(), xs$$128));\n}\nexport function distinctBy(projection$$4, xs$$131, eq$$2) {\n  const hashSet = createMutable([], comparerFromEqualityComparer(eq$$2));\n  return filter(function f$$57($arg$$1) {\n    return addToSet(projection$$4($arg$$1), hashSet);\n  }, xs$$131);\n}\nexport function distinct(xs$$133, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$133, eq$$3);\n}\nexport function exactlyOne(xs$$134) {\n  if (xs$$134.tail != null) {\n    if (xs$$134.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$134.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$136, eq$$4) {\n  const dict = createMutable$$1([], comparerFromEqualityComparer(eq$$4));\n  const keys = [];\n  iterate$$1(function (v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys.push(key);\n    }\n  }, xs$$136);\n  return ofSeq(map$$1(function mapping(key$$1) {\n    return [key$$1, reverse(getItemFromDict(dict, key$$1))];\n  }, keys));\n}\nexport function countBy(projection$$6, xs$$138, eq$$5) {\n  const dict$$1 = createMutable$$1([], comparerFromEqualityComparer(eq$$5));\n  iterate(function (v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$17[0]) {\n      matchValue$$17[1].contents = matchValue$$17[1].contents + 1;\n    } else {\n      dict$$1.set(key$$2, new FSharpRef(1));\n    }\n  }, xs$$138);\n  let result$$1 = new List();\n  iterate$$1(function (group) {\n    result$$1 = new List([group[0], group[1].contents], result$$1);\n  }, dict$$1);\n  return result$$1;\n}\nexport function where(predicate$$2, xs$$139) {\n  return filter(predicate$$2, xs$$139);\n}\nexport function pairwise(xs$$140) {\n  const inner = function inner(xs$$141, acc$$27, x1$$1) {\n    inner: while (true) {\n      if (xs$$141.tail != null) {\n        const xs$$142 = xs$$141.tail;\n        const x2$$1 = xs$$141.head;\n        acc$$27.push([x1$$1, x2$$1]);\n        const $acc$$27$$198 = acc$$27;\n        xs$$141 = xs$$142;\n        acc$$27 = $acc$$27$$198;\n        x1$$1 = x2$$1;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$199, x1$$2, x2$$2, xs$$143;\n\n  if (xs$$140.tail != null) {\n    if (xs$$140.tail.tail != null) {\n      $target$$199 = 1;\n      x1$$2 = xs$$140.head;\n      x2$$2 = xs$$140.tail.head;\n      xs$$143 = xs$$140.tail.tail;\n    } else {\n      $target$$199 = 0;\n    }\n  } else {\n    $target$$199 = 0;\n  }\n\n  switch ($target$$199) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        const acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        return inner(xs$$143, acc$$28, x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source$$1) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$2 = new List();\n\n  for (let i$$35 = length(source$$1); i$$35 >= windowSize; i$$35--) {\n    res$$2 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$1), res$$2);\n  }\n\n  return res$$2;\n}","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    constructor() {\n        this.callCount = 0;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = null;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.Start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.Start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.Start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.Start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","namespace Fulma\n\nopen Fable.React\nopen Fable.React.Props\n\nmodule Reflection =\n\n    open Microsoft.FSharp.Reflection\n    open System\n\n    let getCaseName (case : 'T) =\n#if FABLE_COMPILER\n        Fable.Core.Reflection.getCaseName case\n#else\n        // Get UnionCaseInfo value from the F# reflection tools\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        caseInfo.GetCustomAttributes()\n        |> Seq.tryPick (function\n                        | :? CompiledNameAttribute as att -> Some att.CompiledName\n                        | _ -> None)\n        |> Option.defaultWith (fun () -> caseInfo.Name)\n#endif\n\n    let getCaseTag (case : 'T) =\n#if FABLE_COMPILER\n        Fable.Core.Reflection.getCaseTag case\n#else\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        caseInfo.Tag\n#endif\n\n[<RequireQualifiedAccess>]\ntype Screen =\n    | All\n    | [<CompiledName(\"desktop\")>] Desktop\n    | [<CompiledName(\"tablet\")>] Tablet\n    | [<CompiledName(\"mobile\")>] Mobile\n    | [<CompiledName(\"widescreen\")>] WideScreen\n    | [<CompiledName(\"touch\")>] Touch\n    | [<CompiledName(\"fullhd\")>] FullHD\n\n    static member ToString (screen : Screen) =\n        match screen with\n        | All -> \"\"\n        | Desktop\n        | Tablet\n        | Mobile\n        | WideScreen\n        | Touch\n        | FullHD -> \"-\" + Reflection.getCaseName screen\n\n[<AutoOpen>]\nmodule Color =\n\n    type IColor =\n        | [<CompiledName(\"is-black\")>] IsBlack\n        | [<CompiledName(\"is-dark\")>] IsDark\n        | [<CompiledName(\"is-light\")>] IsLight\n        | [<CompiledName(\"is-white\")>] IsWhite\n        | [<CompiledName(\"is-primary\")>] IsPrimary\n        | [<CompiledName(\"is-info\")>] IsInfo\n        | [<CompiledName(\"is-success\")>] IsSuccess\n        | [<CompiledName(\"is-warning\")>] IsWarning\n        | [<CompiledName(\"is-danger\")>] IsDanger\n        | [<CompiledName(\"is-link\")>] IsLink\n        | [<CompiledName(\"is-black-bis\")>] IsBlackBis\n        | [<CompiledName(\"is-black-ter\")>] IsBlackTer\n        | [<CompiledName(\"is-grey-darker\")>] IsGreyDarker\n        | [<CompiledName(\"is-grey-dark\")>] IsGreyDark\n        | [<CompiledName(\"is-grey\")>] IsGrey\n        | [<CompiledName(\"is-grey-light\")>] IsGreyLight\n        | [<CompiledName(\"is-grey-lighter\")>] IsGreyLighter\n        | [<CompiledName(\"is-white-ter\")>] IsWhiteTer\n        | [<CompiledName(\"is-white-bis\")>] IsWhiteBis\n        /// Allow you to specify a custom color. The color will be prefixed by \"is-\"\n        | IsCustomColor of string\n        /// Allow you to specify a NoColor case.\n        | NoColor\n\n    let ofColor level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"is-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> Reflection.getCaseName level\n\n[<AutoOpen>]\nmodule Size =\n\n    type ISize =\n        | [<CompiledName(\"is-small\")>] IsSmall\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        | [<CompiledName(\"is-large\")>] IsLarge\n\n    let inline ofSize size =\n        Reflection.getCaseName size\n\n[<RequireQualifiedAccess>]\nmodule TextSize =\n    type Option =\n        | Is1\n        | Is2\n        | Is3\n        | Is4\n        | Is5\n        | Is6\n        | Is7\n\n        static member ToString (x: Option) =\n            Reflection.getCaseTag x + 1 |> string\n\n    let inline generic screen size =\n        \"is-size-\" + Option.ToString size + Screen.ToString screen\n\n    let inline only screen size =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-size-\" + Option.ToString size + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextAlignment =\n\n    type Option =\n        /// Add `has-text-centered`\n        | [<CompiledName(\"has-text-centered\")>] Centered\n        /// Add `has-text-justified`\n        | [<CompiledName(\"has-text-justified\")>] Justified\n        /// Add `has-text-left`\n        | [<CompiledName(\"has-text-left\")>] Left\n        /// Add `has-text-right`\n        | [<CompiledName(\"has-text-right\")>] Right\n\n        static member inline ToString opt =\n            Reflection.getCaseName opt\n\n    let inline generic screen alignment =\n        Option.ToString alignment + Screen.ToString screen\n\n    let inline only screen alignment =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            Option.ToString alignment + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextWeight =\n\n    type Option =\n        /// Add `has-text-weight-light`\n        | [<CompiledName(\"has-text-weight-light\")>] Light\n        /// Add `has-text-weight-normal`\n        | [<CompiledName(\"has-text-weight-normal\")>] Normal\n        /// Add `has-text-weight-semi-bold`\n        | [<CompiledName(\"has-text-weight-semi-bold\")>] SemiBold\n        /// Add `has-text-weight-bold`\n        | [<CompiledName(\"has-text-weight-bold\")>] Bold\n\n    let inline internal ofOption opt =\n        Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule TextTransform =\n\n    type Option =\n        /// Add `is-capitalized`\n        | [<CompiledName(\"is-capitalized\")>] Capitalized\n        /// Add `is-lowercase`\n        | [<CompiledName(\"is-lowercase\")>] LowerCase\n        /// Add `is-uppercase`\n        | [<CompiledName(\"is-uppercase\")>] UpperCase\n        /// Add `is-italic`\n        | [<CompiledName(\"is-italic\")>] Italic\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule Display =\n\n    type Option =\n        | [<CompiledName(\"block\")>] Block\n        | [<CompiledName(\"flex\")>] Flex\n        | [<CompiledName(\"inline\")>] Inline\n        | [<CompiledName(\"inline-block\")>] InlineBlock\n        | [<CompiledName(\"inline-flex\")>] InlineFlex\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n    let internal toDisplayClass screen display =\n        let display = Option.toClass display\n        let screen = Screen.ToString screen\n\n        \"is-\" + display + screen\n\n    let internal toDisplayOnlyClass screen display =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            let display = Option.toClass display\n            let screen = Screen.ToString screen\n            \"is-\" + display + screen + \"-only\"\n\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support display only.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule Modifier =\n    let internal ofBackground level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-background-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-background-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofText level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-text-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-text-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofInvisible screen =\n        \"is-invisible\" + Screen.ToString screen\n\n    let internal ofHidden screen =\n        \"is-hidden\" + Screen.ToString screen\n\n    let internal ofInvisibleOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-invisible\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + string x)\n            \"\"\n\n    let internal ofHiddenOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-hidden\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + string x)\n            \"\"\n\n    type IModifier =\n        | BackgroundColor of IColor\n        | TextColor of IColor\n        | TextWeight of TextWeight.Option\n        | TextSize of Screen * TextSize.Option\n        | TextSizeOnly of Screen * TextSize.Option\n        | TextAlignment of Screen * TextAlignment.Option\n        | TextAlignmentOnly of Screen * TextAlignment.Option\n        | TextTransform of TextTransform.Option\n        | Display of Screen * Display.Option\n        | DisplayOnly of Screen * Display.Option\n        | [<CompiledName(\"is-clearfix\")>] IsClearfix\n        | [<CompiledName(\"is-pulled-left\")>] IsPulledLeft\n        | [<CompiledName(\"is-pulled-right\")>] IsPulledRight\n        | [<CompiledName(\"is-marginless\")>] IsMarginless\n        | [<CompiledName(\"is-paddingless\")>] IsPaddingless\n        | [<CompiledName(\"is-overlay\")>] IsOverlay\n        | [<CompiledName(\"is-clipped\")>] IsClipped\n        | [<CompiledName(\"is-radiusless\")>] IsRadiusless\n        | [<CompiledName(\"is-shadowless\")>] IsShadowless\n        | [<CompiledName(\"is-unselectable\")>] IsUnselectable\n        | IsInvisible of Screen * bool\n        | IsHidden of Screen * bool\n        | IsInvisibleOnly of Screen * bool\n        | IsHiddenOnly of Screen * bool\n        | IsSrOnly\n        | IsScreenReaderOnly\n\n    let parseModifiers options =\n        let parseOptions result option =\n            match option with\n            | BackgroundColor color             -> (ofBackground color)::result\n            | TextColor color                   -> (ofText color)::result\n            | TextWeight textWeight             -> (TextWeight.ofOption textWeight)::result\n            | TextSize (screen, size)           -> (TextSize.generic screen size)::result\n            | TextSizeOnly (screen, size)       -> (TextSize.only screen size)::result\n            | TextAlignment (screen, size)      -> (TextAlignment.generic screen size)::result\n            | TextAlignmentOnly (screen, size)  -> (TextAlignment.only screen size)::result\n            | TextTransform transform           -> (TextTransform.Option.toClass transform)::result\n            | Display (screen, display)         -> (Display.toDisplayClass screen display)::result\n            | DisplayOnly (screen, display)     -> (Display.toDisplayOnlyClass screen display)::result\n            | IsInvisible (screen, b)           -> if b then (ofInvisible screen)::result else result\n            | IsInvisibleOnly (screen, b)       -> if b then (ofInvisibleOnly screen)::result else result\n            | IsHidden (screen, b)              -> if b then (ofHidden screen)::result else result\n            | IsHiddenOnly (screen, b)          -> if b then (ofHiddenOnly screen)::result else result\n            | IsSrOnly\n            | IsScreenReaderOnly -> \"is-sr-only\"::result\n            | IsClearfix\n            | IsPulledLeft\n            | IsPulledRight\n            | IsMarginless\n            | IsPaddingless\n            | IsOverlay\n            | IsClipped\n            | IsRadiusless\n            | IsShadowless\n            | IsUnselectable -> (Reflection.getCaseName option)::result\n\n        options |> List.fold parseOptions []\n\n[<AutoOpen>]\nmodule Common =\n    type GenericOption =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    type GenericOptions =\n        { Props : IHTMLProp list\n          Classes : string list }\n\n        static member Empty =\n            { Props = []; Classes = [] }\n\n        static member Parse(options, parser, ?baseClass, ?baseProps) =\n            let result = options |> List.fold parser GenericOptions.Empty\n\n            let result =\n                match baseClass with\n                | Some baseClass -> result.AddClass(baseClass)\n                | None -> result\n\n            match baseProps with\n            | Some baseProps -> result.AddProps(baseProps)\n            | None -> result\n\n        member this.AddProp(prop : IHTMLProp) =\n            { this with Props = prop::this.Props }\n\n        member this.AddProps(props : IHTMLProp list) =\n            { this with Props = props@this.Props }\n\n        member this.AddClass(cl: string) =\n            { this with Classes = cl::this.Classes }\n\n        member this.RemoveClass(cl: string) =\n            let classes =\n                this.Classes\n                |> List.filter (fun cls ->\n                    cls <> cl\n                )\n            { this with Classes = classes }\n\n        member this.AddCaseName(case: 'T) =\n            Reflection.getCaseName case |> this.AddClass\n\n        member this.AddModifiers(modifiers) =\n            { this with Classes = (modifiers |> Modifier.parseModifiers) @ this.Classes }\n\n        /// Conver to standard element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement list -> ReactElement, ?children): ReactElement =\n            let children = defaultArg children []\n            // TODO: Remove empty classes?\n            let classes = String.concat \" \" this.Classes |> ClassName :> IHTMLProp\n            el (classes::this.Props) children\n\n        /// Convert to self closing element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement): ReactElement =\n            // TODO: Remove empty classes?\n            let classes = String.concat \" \" this.Classes |> ClassName :> IHTMLProp\n            el (classes::this.Props)\n\n    let parseOptions (result : GenericOptions) option =\n        match option with\n        | Props props -> result.AddProps props\n        | CustomClass customClass -> result.AddClass customClass\n        | Modifiers modifiers -> result.AddModifiers modifiers\n\n    module Helpers =\n\n        [<System.Obsolete(\"Use GenericOptions.Parse. This build an abstraction layer usable by all the components and helps reduce the bundle size\")>]\n        let classes std (options : string option list) (booleans: (string * bool) list) =\n            let std = (std, options) ||> List.fold (fun complete option ->\n                match option with\n                | Some name -> complete + \" \" + name\n                | None -> complete )\n            (std, booleans) ||> List.fold (fun complete (name, flag) ->\n                if flag then complete + \" \" + name else complete)\n            |> ClassName :> IHTMLProp\n\n[<RequireQualifiedAccess>]\nmodule Text =\n    open Fable.React\n\n    let p (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(p, children)\n\n    let div (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(div, children)\n\n    let span (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(span, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Label =\n\n    type Option =\n        | Size of ISize\n        /// Set `For` HTMLAttr\n        | For of string\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <label class=\"label\"></label>\n    let label options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | For htmlFor -> HtmlFor htmlFor |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"label\").ToReactElement(label, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Input =\n\n    module Classes =\n        let [<Literal>] Container = \"input\"\n        module State =\n            let [<Literal>] IsFocused = \"is-focused\"\n            let [<Literal>] IsActive = \"is-active\"\n            let [<Literal>] IsHovered = \"is-hovered\"\n            let [<Literal>] IsLoading = \"is-loading\"\n            let [<Literal>] IsStatic = \"is-static\"\n        module Styles =\n            let [<Literal>] IsRounded = \"is-rounded\"\n        module Size =\n            let [<Literal>] IsSmall = \"is-small\"\n            let [<Literal>] IsMedium = \"is-medium\"\n            let [<Literal>] IsLarge = \"is-large\"\n            let [<Literal>] IsFullwidth = \"is-fullwidth\"\n            let [<Literal>] IsInline = \"is-inline\"\n\n    type IInputType =\n        | Text\n        | Password\n        | DatetimeLocal\n        | Date\n        | Month\n        | Time\n        | Week\n        | Number\n        | Email\n        | Url\n        | Search\n        | Tel\n        | ColorType\n\n    type Option =\n        | Size of ISize\n        /// Set `Type` HTMLAttr\n        /// Don't use if you used one of the helpers like: `Input.password`\n        | Type of IInputType\n        | Color of IColor\n        /// Set `Id` HTMLAttr\n        | Id of string\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        /// Set `IsReadOnly` HTMLAttr\n        | IsReadOnly of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Set `Value` HTMLAttr\n        | Value of string\n        | Key of string\n        /// Set `DefaultValue` HTMLAttr\n        | DefaultValue of string\n        /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n        | ValueOrDefault of string\n        /// Set `Placeholder` HTMLAttr\n        | Placeholder of string\n        | OnChange of (Event -> unit)\n        | Ref of (Element->unit)\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let private ofType (typ : IInputType) =\n        match typ with\n        | Text -> \"text\"\n        | Password -> \"password\"\n        | DatetimeLocal -> \"datetime-local\"\n        | Date -> \"date\"\n        | Month -> \"month\"\n        | Time -> \"time\"\n        | Week -> \"week\"\n        | Number -> \"number\"\n        | Email -> \"email\"\n        | Url -> \"url\"\n        | Search -> \"search\"\n        | Tel -> \"tel\"\n        | IInputType.ColorType -> \"color\"\n\n    open Fable.Core.JsInterop\n\n    /// Generate <input class=\"input\" />\n    let input (options : Option list) =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | IsRounded -> result.AddCaseName option\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | Type type' -> Props.Type (ofType type') |> result.AddProp\n            | Id id -> Props.Id id |> result.AddProp\n            | Disabled disabled -> Props.Disabled disabled |> result.AddProp\n            | IsReadOnly state -> Props.ReadOnly state |> result.AddProp\n            | Value value -> Props.Value value |> result.AddProp\n            | DefaultValue defaultValue -> Props.DefaultValue defaultValue |> result.AddProp\n            | ValueOrDefault valueOrDefault ->\n                Props.Ref <| (fun e ->\n                    if e |> isNull |> not\n                        && !!e?value <> valueOrDefault then\n                        e?value <- valueOrDefault\n                ) |> result.AddProp\n            | Placeholder placeholder -> Props.Placeholder placeholder |> result.AddProp\n            | OnChange cb -> Props.OnChange cb |> result.AddProp\n            | Ref ref -> Props.Ref ref |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n            | Key k -> Props.Prop.Key k |> result.AddProp\n\n        GenericOptions.Parse(options, parseOptions, \"input\").ToReactElement(input)\n\n    /// Generate <input type=\"text\" class=\"input\" />\n    let inline text options = input (Type Text :: options)\n    /// Generate <input type=\"password\" class=\"input\" />\n    let inline password options = input (Type Password :: options)\n    /// Generate <input type=\"datetime-local\" class=\"input\" />\n    let inline datetimeLocal options = input (Type DatetimeLocal :: options)\n    /// Generate <input type=\"date\" class=\"input\" />\n    let inline date options = input (Type Date :: options)\n    /// Generate <input type=\"month\" class=\"input\" />\n    let inline month options = input (Type Month :: options)\n    /// Generate <input type=\"time\" class=\"input\" />\n    let inline time options = input (Type Time :: options)\n    /// Generate <input type=\"week\" class=\"input\" />\n    let inline week options = input (Type Week :: options)\n    /// Generate <input type=\"number\" class=\"input\" />\n    let inline number options = input (Type Number :: options)\n    /// Generate <input type=\"email\" class=\"input\" />\n    let inline email options = input (Type Email :: options)\n    /// Generate <input type=\"url\" class=\"input\" />\n    let inline url options = input (Type Url :: options)\n    /// Generate <input type=\"search\" class=\"input\" />\n    let inline search options = input (Type Search :: options)\n    /// Generate <input type=\"tel\" class=\"input\" />\n    let inline tel options = input (Type Tel :: options)\n    /// Generate <input type=\"color\" class=\"input\" />\n    let inline color options = input (Type IInputType.ColorType :: options)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Help =\n\n    type Option =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Color of IColor\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <p class=\"help\"></p>\n    let help (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Color color -> ofColor color |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"help\").ToReactElement(p, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Field =\n\n    type Option =\n        /// Add `has-addons` class\n        | [<CompiledName(\"has-addons\")>] HasAddons\n        /// Add `has-addons-centered` class\n        | [<CompiledName(\"has-addons-centered\")>] HasAddonsCentered\n        /// Add `has-addons-right` class\n        | [<CompiledName(\"has-addons-right\")>] HasAddonsRight\n        /// Add `has-addons-fullwidth` class\n        | [<CompiledName(\"has-addons-fullwidth\")>] HasAddonsFullWidth\n        /// Add `is-grouped` class\n        | [<CompiledName(\"is-grouped\")>] IsGrouped\n        /// Add `is-grouped-centered` class\n        | [<CompiledName(\"is-grouped-centered\")>] IsGroupedCentered\n        /// Add `is-grouped-right` class\n        | [<CompiledName(\"is-grouped-right\")>] IsGroupedRight\n        /// Add `is-grouped-multiline` class\n        | [<CompiledName(\"is-grouped-multiline\")>] IsGroupedMultiline\n        /// Add `is-horizontal` class\n        | [<CompiledName(\"is-horizontal\")>] IsHorizontal\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    module Label =\n\n        type Option =\n            | Size of ISize\n            /// Add `is-normal` class\n            | [<CompiledName(\"is-normal\")>] IsNormal\n            | CustomClass of string\n            | Props of IHTMLProp list\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <label class=\"field-body\"></label>\n    let body (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"field-body\").ToReactElement(div, children)\n\n    /// Generate <label class=\"field-label\"></label>\n    let label options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Label.Size size -> ofSize size |> result.AddClass\n            | Label.IsNormal -> result.AddCaseName option\n            | Label.Props props -> result.AddProps props\n            | Label.CustomClass customClass -> result.AddClass customClass\n            | Label.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"field-label\").ToReactElement(div, children)\n\n    let internal fieldView element options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | HasAddonsCentered -> result.AddClass(\"has-addons\").AddCaseName option\n            | HasAddonsRight -> result.AddClass(\"has-addons\").AddCaseName option\n            | HasAddonsFullWidth -> result.AddClass(\"has-addons\").AddCaseName option\n            | IsGroupedCentered -> result.AddClass(\"is-grouped\").AddCaseName option\n            | IsGroupedRight -> result.AddClass(\"is-grouped\").AddCaseName option\n            | IsGroupedMultiline -> result.AddClass(\"is-grouped\").AddCaseName option\n            | HasAddons\n            | IsGrouped\n            | IsHorizontal\n            | IsExpanded -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"field\").ToReactElement(element, children)\n\n    /// Generate <div class=\"field\"></div>\n    let div x y = fieldView div x y\n    /// Generate <p class=\"field\"></p>\n    let p x y = fieldView p x y\n","export function tryParse(str) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            return [true, v];\n        }\n    }\n    return [false, 0];\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","// Unicode 9.0.0 ranges and categories (delta encoded, vbyte encoded, utf8 encoded)\n// tslint:disable:max-line-length\nexport default \"~~^a}i{g}i{h}l}i}e}i}m}i|qti|e{i|udh}i}l}f}n}f}ydh}e}l}e}~]a}i}gzd}i}f}d}w}j}e}}}d}f}d}e}o|f}y}i|f}o}w}k}o{i}uge}uwyfe}yvu}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y|u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y|u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u|y}u}y}u}y{u|y}u}y}u|y}u{y|uzy}u|y}u{y{u|y}u|y}u}y}u}y}u|y}u}y|u}y}u|y}u{y}u}y}u|y|w}u}y{wzu}v}y}u}v}y}u}v}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y|u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y|u}v}y}u}y}u{y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}ywu|y}u|y|u}y}uzy}u}y}u}y}u}y}u}y9w}ycxlfzxrfpxyfwx}f}x}fmr\\u000eu}y}u}y}x}f}u}y}||x}y{i}u}|zf|u}i}u{|}u}|}u|y}um|}uuy[u}y|u{y{u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}yyu}y}e}u}y}u|y|uKyNu}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}d}rys|u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u|y}u}y}u}y}u}y}u}y}u}y}u}y|u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}|}uX||x}ix|}yW|}i}m}||d|g}|}rQm}r}i}r|i}r|i}r}|vwc|yw{i||s}xe{i|g}i|d|rsi}}}|}i|w^x}wtriqtizw|r}w\\u001bi}w}rw}}d}rxx|r|d}rzw|qtw{d|w}ip|}}}w}r}w`rc||w%rsw}|pqtw]rux|d}i{x}|ywhrzx}rux}r{x}ry||io|}wer{||i}|=wi|}wv|hrp}}r^t}wHr}t}r}w}t{rvtzr}t|w}rwwtr|i|qti}x}wor}t||}wv||w|||wh|}ww|}w}|{wz||r}w}t{rz||t|||t|r}w}|vt}|zw||}w{r|||qtw|g|oxd}g}|yr|t}|}wx|zw|||wh|}ww|}w||}w||}w|||r}|}t{r||zr|||r{|{r}|wwz|}w}|wqtr|w{r}|sr|t}|}wu|}w{|}wh|}ww|}w||}wy||r}w}t{ry|}r|t}|}t|r}||w}|ow|r|||qti}g}|ww}|wr}t||}wv||w|||wh|}ww|}w||}wy||r}w}t}r}t}rz||t|||t|r}|vr}t}|zw||}w{r|||qtd}w}ox|tr}w}|}wx|{w{|}wz|{w||}w}|}w||{w||{w{|{wr|zt|r}t||{t{|}t{r}||w}|xt}|pqto{dxg}d}|yr}t{|}wv|}w{|}wg|}wn|{w}r{tz|}r{|}rz|wr||}w{|yw|r|||qt|vowd}w}r}t||}wv|}w{|}wg|}wt|}wy||r}w}t}r}ty|}r}t||}t|r||wt||ww}|}w|r|||qt|}w||pr}t||}wv|}w{|}wU||w}t{rz|}t{|}t{r}w}d}|zw{t}oww{r|||qtoud}wx||t||}wl|{wf|}wu|}w}||ww|{r}|zt{r{|}r}|}tv|xqt||t|i}|rwNr}w|rw|zg}wxx}rvi}qti||Yw||}w}||w||}w}||w}|xwz|}ww|}w{|}w}|}w}||w||}wzr}w|rx|}r|w}||wy|}x}|}rx||qt||wz|^w}d{iod}i}d{r|dxqtotd}r}d}r}d}r}h}l}h}l}t|wv|}wZ|zrpt}ryi}r|wyrs|}rZ|}dvr}dx|}d|iydzi||YwSt|rzt}rxt}r|t|r|w}qtixwxt|r|wzr{w}t{w|tww{rzwqr}t|r|txr}w}t}qtt{r}d|uX|}u}|yu}||wSi}x}w�}|}wz||ww|}w}|}wz||wU|}wz||w]|}wz||ww|}w}|}wz||wo|}wE|}wz||w;||r{iuoj|{wndt|xu(||yx||m}w�{i|wma}wdh}l}|{w3i{p{wv|wwq|}wzr{|swlr{i||uwlr||rwq|}w{|}r||rwJr|t}rwtvr}t|rsi{x}i{g}w}r}||qt|xot|xixm}izr{}}|}qt|xw[x}wJ|vwyr|w\\\\r}w}|yw8|tw_|}r{tzr|t{|zt|r}txr{|zd}|{i|qtw`||wy|swR|zwd|xqto}|{d\\\\wgr|t|r}||i|wIt}r}t}rw|}r}t}r}t|rvtxrt||r}qt|xqt|xiwx}ix||rps}|=rzt}wOr}t}ryt}r}tyr}t|ww|zqtiwdtrudu|{r|t}w`t}rzt|r|t}r{w|qtwRr}t}r|t{r}t}r{t||vizwZtvrvt|r||{iyqt|{w{qtw`xxi|yu|Giv|vr{i}rqt}rwwzr}wzt|r}w||}r||xyRx?yqx}y\\\\xYrH|yryu}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}yuu}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}yuuvyx||ux||yvuvyvuvyx||ux||yv|}u}|}u}|}u}|}u}yvuvyp||yvvvyvvvyvvvyy|}y|uzv}f}y}f{y{|}y|uzv}f{yz||y|uz|}f{yvuyf{||y{|}y|uzv}f||}as}ymxi|j}k}h}j|k}h}j}ivc}b}}ya}iuj}k}izn|i{e}h}l}ise}i}n}ita}}y|}}to}x}||oxe{h}l}x}ote{h}l}|}xq|{g_|mrqszr}s{rr|od|u}dzu}d|y}u{y|u{y}d}u}d|e}uydxu}d}u}d}u}d}uzd}y}uzy}wzy}d|y|u|eyu}yzd}e}d|y}d}onp[u}y}pzo}d||zeydye|dze}d|e}d|e}dwe}d_e|d|e}d}e}d_e�}dvh}l}h}l}dje|dwh}l}d-e}d`eedVexda|}dW|eds|ioBd0ohd�~e}due}dHevd\\u000fe}d�~h}l}h}l}h}l}h}l}h}l}h}l}h}l}o`dReyh}l}e_h}l}h}l}h}l}h}l}h}l}end�}e�~h}l}h}l}h}l}h}l}h}l}h}l}h}l}h}l}h}l}h}l}h}l}e?h}l}h}l}e^h}l}e�}dNeid|exdW||d^||d\\\\|{dr|}dv|ddz|nuO|}yO|}u}y}u{y|u}y}u}y}u}y}uzy}u}y|u}yxx|u{y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y|dxu}y}u}y}r{u}y}|yizo}i|yX|}y}|yy}||wF|wx}i}|pr}wg|uww|}ww|}ww|}ww|}ww|}ww|}ww|}ww|}r^i|j}k}j}k}i{j}k}i}j}k}ium}i|m}i}j}k}i|j}k}h}l}h}l}h}l}h}l}iyx}itm|izm}i}h}i||Cdd|}d%|rd�~|ddr|za}i{d}x}w}p}h}l}h}l}h}l}h}l}h}l}d|h}l}h}l}h}l}h}l}m}h}l|d}purzt|m}xyd|p{x}w}i}d||}w(||r|f|x|w}m}w$i}x{w}|ywU|{w |}d|ozdtwc|ydZ|rwnd_|}otd`ovd}ood^otdWood?|}d�}w�L|td>w��~|Twix}w�w|{dG|uwVxxi|w�}x}i{wnqtw||ju}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}w}r}s{i}rti}x}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}x|r|w8ptr|ix|vfgxuf|u}y}u}y}u}y}u}y}u}y}u}y}u}y{u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}x}yvu}y}u}y}u|y}u}y}u}y}u}y}u}y}x}f|u}y}u}y}w}u}y}u}y{u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}u}y}uy|}uyy}u}y}|?w}x|y}wwr}w{r}wzr}wgt|r|t}dz|zoxd|g}d}|xwJiz|vt|wLtnr||vi|qt|xrlwxi{w}i}w}||qtwbrvi|wgrst||si}wa|{r{t}wOr}t|rzt|r}tziq|}x}qt|zi|wyr}x}wuqtwy|}wUrxt|r|t|r||uw{r}wvr}t}||qt||izwnx}wxd{w}t}r}t}wLr}w}r{w|r|wyr|w}r}w}|fw|x}i|wst}r|t|i|w}x|t}r}|twx||wx||wx|uww|}ww|}ySf}xzyx|ty.w[t|r}t|r}t|i}t}r}||qt|xw�(|rwg|zwM|zz�o{�Mw�}||w\\u0014|Xyw|ryy|yw}r}wte}wq|}wy|}w}|}w||}w||}w\\u0012fn|mw�}l}h}|nw>||wH|Vwrg}d}||rniwh}l}i}|xrni}m|n|h}l}h}l}h}l}h}l}h}l}h}l}h}l}h}l}i|h}l}izn{i{|}izm}h}l}h}l}h}l}i{e}m}e{|}i}g}i||zwy|}w�~||}}|}i{g}i{h}l}i}e}i}m}i|qti|e{i|udh}i}l}f}n}f}ydh}e}l}e}h}l}i}h}l}i|wtx}wQx|w_|{wx||wx||wx||w{|{g|e}f}d}g||}d}ezd||t}{d|||wr|}wd|}wk|}w||}wo||wp|\\\\w\\u0003|yi{|zoQ|{dupIozdmo|d{|}dr|zd}|OdQr}|�~wa|{wM|or}oc|zw^oz|rwmp}wvp}|ywXry|yw`|}i}wZ|zwvi}py|TuVyVw0||qt|xuZ|zyZ|zwV|vwJ|si}|�~w�}|uwh|twv|�~wx||w}|}wR|}w||{w}||wg|}i}ovwgd|oww_|vou|Nwk|}w||yoywhox|{i}wd|yi}|>wF|zo|w|on||oPw}r{|}r||yrzwz|}w{|}wc|zr{|zr}ov|viu|wwao|i}wao{|^wvd}wbr||zoyiw|uwH|{iwwh||ovwk|yovwl|wiz|row|.w5|GuK|qyK|wox|�}o_|�|t}r}t}wIroiw|zojqt|or{t}wQt{rzt|r|i|}}iz|pwe|wqt|xr{wZryt}rv|}qtiz|rw[r}i|w}|ur|t}wNt{rut|wziyr{i}||qtw}i}w}i{|}oj|swl|}wet{r{t|r}t}r|ixr}|=ww|}w}|}wz|}wo|}wti}|xwOr}t{rv|yqt|xr|t||}wv||w|||wh|}ww|}w||}wy||r}w}t|r}tz||t|||t{||w}|xt}|ywyt|||rw|{ry|�~wIt{rvt|r{t}r}wziyqt|}i}|}i}|\\\\wNt{rxt}r}tzr|t}r|w|i}w}|vqt|�~wOt{rz||tzr|t}r|igwzr||\\\\wNt{rvt|r}t}r|i{w}|sqt|xiq|kwSr}t}r}t|rxt}r}|vqt|Hwd|{r{t|rzt}ry|zqto|i{d}|�}u^y^qtou|rw}|�|wE|�}wu|}wYt}rw|}rxt}r}w}iy|tqtok|{i|w`||rh|}t}rwt}r|t}r||�yw�x|\\u0018p\\u000f|}iy|sw�~|�jw�w|�`w�{|�<w�{|ww_|}qt|zi||\\u001ew`||ryi}|twNrwiydzxzi}d}|tqt|}ow|}wi|ywk|�yw9|sw}tP|nrzxq|>x}|_w�P|kw�z|�5w||�hw\\u0013|ywq|{wu|wwt||d}r|i}}z|�Yd�~|tdW||dBt|r{d{tx}vrvd|rwd`rzdC|gd<r{d}|�~d'|uol|�~udydudyw|}yludydu}|}u|||u}||u|||uz|}uvyz|}y}|}yw|}ysudydu||}uz||uv|}uw|}ydu||}uz|}uy|}u}|{uw|}ydudydudydudydudydudydudyb||uee}yee}yxuee}yee}yxuee}yee}yxuee}yee}yxuee}yee}yxu}y}||qLd�{rGdzrLdvr}dpr}d|iy|ory|}ro|�urw|}rm||rw|}r||}ry|�pw�~||ourw|Uu\\\\y\\\\rw|yqt|zi||�vwz|}wc|}w||}w}||w}|}wt|}wz|}w}|}w}|xw}|zw}|}w}|}w}|}w{|}w||}w}||w}|}w}|}w}|}w}|}w}|}w||}w}||wz|}ww|}wz|}wz|}w}|}wt|}wm|yw{|}wy|}wm|Je||�}dR|zd\\u001a|rdo||do|}do|}dY|toq|{d_|}dB|zdA|Eda|qdR|zdu|wd||�~d�~fyd�z|qdq|{dw|ud\\n|rd)|Sdr|zdF|vdt|xdV|vd`|\\u001cdo|}dv|vd}||dr|}dr|zdo|]dl|Pd}|�sw��}|Uw�_|sw�~||w�R|�-w�{|��S}}|`}\\u001e|�~r�~|�|{��|||{��||\";\n","// Adapted from: https://github.com/hakatashi/general-category\nimport * as Encoding from \"./Encoding\";\nimport packedUnicode from \"./Unicode.9.0.0\";\nfunction decodeVByteToIntegerArray(buffer) {\n    const ret = [];\n    let carried = 0;\n    let register = 0;\n    for (let i = 0; i < buffer.length; ++i) {\n        const byte = buffer[i] ^ 0xFF;\n        register += (byte & 127) << carried * 7;\n        carried++;\n        if ((byte & 128) !== 0) {\n            ret.push(register - 1);\n            carried = register = 0;\n        }\n    }\n    return ret;\n}\nfunction getCategory() {\n    // unpack Unicode ranges and categories (delta encoded, vbyte encoded, utf8 encoded)\n    const unicodeBuffer = Encoding.get_UTF8().getBytes(packedUnicode);\n    const unicodeDeltas = decodeVByteToIntegerArray(unicodeBuffer);\n    const codepoints = new Uint32Array(unicodeDeltas.length / 2);\n    const categories = new Uint8Array(unicodeDeltas.length / 2);\n    const categoryEnum = new Uint8Array([14, 15, 29, 17, 16, 1, 3, 4, 2, 0, 6, 7, 5, 8, 9, 10, 18, 19, 21, 23, 22, 24, 20, 26, 27, 25, 28, 12, 13, 11]);\n    let currentCodepoint = 0;\n    for (let i = 0; i < unicodeDeltas.length; i += 2) {\n        codepoints[i / 2] = (currentCodepoint += unicodeDeltas[i]);\n        categories[i / 2] = unicodeDeltas[i + 1];\n    }\n    // binary search in unicode ranges\n    return (s, index) => {\n        const cp = s.charCodeAt(index || 0);\n        let hi = codepoints.length;\n        let lo = 0;\n        while (hi - lo > 1) {\n            const mid = Math.floor((hi + lo) / 2);\n            const test = codepoints[mid];\n            if (cp < test) {\n                hi = mid;\n            }\n            else if (cp === test) {\n                hi = lo = mid;\n                break;\n            }\n            else if (test < cp) {\n                lo = mid;\n            }\n        }\n        return categoryEnum[categories[lo]];\n    };\n}\nconst isControlMask = 1 << 14 /* Control */;\nconst isDigitMask = 1 << 8 /* DecimalDigitNumber */;\nconst isLetterMask = 0\n    | 1 << 0 /* UppercaseLetter */\n    | 1 << 1 /* LowercaseLetter */\n    | 1 << 2 /* TitlecaseLetter */\n    | 1 << 3 /* ModifierLetter */\n    | 1 << 4 /* OtherLetter */;\nconst isLetterOrDigitMask = isLetterMask | isDigitMask;\nconst isUpperMask = 1 << 0 /* UppercaseLetter */;\nconst isLowerMask = 1 << 1 /* LowercaseLetter */;\nconst isNumberMask = 0\n    | 1 << 8 /* DecimalDigitNumber */\n    | 1 << 9 /* LetterNumber */\n    | 1 << 10 /* OtherNumber */;\nconst isPunctuationMask = 0\n    | 1 << 18 /* ConnectorPunctuation */\n    | 1 << 19 /* DashPunctuation */\n    | 1 << 20 /* OpenPunctuation */\n    | 1 << 21 /* ClosePunctuation */\n    | 1 << 22 /* InitialQuotePunctuation */\n    | 1 << 23 /* FinalQuotePunctuation */\n    | 1 << 24 /* OtherPunctuation */;\nconst isSeparatorMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nconst isSymbolMask = 0\n    | 1 << 25 /* MathSymbol */\n    | 1 << 26 /* CurrencySymbol */\n    | 1 << 27 /* ModifierSymbol */\n    | 1 << 28 /* OtherSymbol */;\nconst isWhiteSpaceMask = 0\n    | 1 << 11 /* SpaceSeparator */\n    | 1 << 12 /* LineSeparator */\n    | 1 << 13 /* ParagraphSeparator */;\nexport const getUnicodeCategory = getCategory();\nexport function isControl(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isControlMask) !== 0;\n}\nexport function isDigit(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isDigitMask) !== 0;\n}\nexport function isLetter(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isLetterMask) !== 0;\n}\nexport function isLetterOrDigit(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isLetterOrDigitMask) !== 0;\n}\nexport function isUpper(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isUpperMask) !== 0;\n}\nexport function isLower(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isLowerMask) !== 0;\n}\nexport function isNumber(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isNumberMask) !== 0;\n}\nexport function isPunctuation(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isPunctuationMask) !== 0;\n}\nexport function isSeparator(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isSeparatorMask) !== 0;\n}\nexport function isSymbol(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    return (test & isSymbolMask) !== 0;\n}\nexport function isWhiteSpace(s, index) {\n    const test = 1 << getUnicodeCategory(s, index);\n    if ((test & isWhiteSpaceMask) !== 0) {\n        return true;\n    }\n    const cp = s.charCodeAt(index || 0);\n    return (0x09 <= cp && cp <= 0x0D) || cp === 0x85 || cp === 0xA0;\n}\nexport function isHighSurrogate(s, index) {\n    const cp = s.charCodeAt(index || 0);\n    return (0xD800 <= cp && cp <= 0xDBFF);\n}\nexport function isLowSurrogate(s, index) {\n    const cp = s.charCodeAt(index || 0);\n    return (0xDC00 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogate(s, index) {\n    const cp = s.charCodeAt(index || 0);\n    return (0xD800 <= cp && cp <= 0xDFFF);\n}\nexport function isSurrogatePair(s, index) {\n    return typeof index === \"number\"\n        ? isHighSurrogate(s, index) && isLowSurrogate(s, index + 1)\n        : isHighSurrogate(s) && isLowSurrogate(index);\n}\nexport function parse(input) {\n    if (input.length === 1) {\n        return input[0];\n    }\n    else {\n        throw Error(\"String must be exactly one character long.\");\n    }\n}\n","module Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\nopen Elmish.React\nopen Fable.Import\nopen Fable.Core.JsInterop\n\nlet formItem label value message checkValid isValid warning other dispatch =\n  Field.div [  ]\n    [ yield!\n        [ Label.label [ ] [ str label ] ]\n      yield!\n        [Input.text [\n          Input.Placeholder value\n          Input.Value value\n          Input.Props\n            [ OnChange (fun ev -> !!ev.target?value |> message |> dispatch ) ] ] ]\n\n      yield!\n        (if checkValid && not (isValid value) then\n          [Help.help\n            [  Help.Color IsDanger  ]\n            [ str warning ]]\n         else [])\n      yield!\n        (match other with\n         | Some(elem) -> [elem]\n         | None -> [] )]\n\n\nlet formItemOptions label (options: string list) optionMessage value message checkValid isValid warning dispatch =\n  Field.div [] [\n    Label.label [ ] [ str label ]\n\n    Field.div [ Field.HasAddons ]\n      [ yield!\n         [ Select.select [ ]\n            [ select [ DefaultValue (options.Head)\n                       OnChange (fun ev -> !!ev.target?value |> optionMessage |> dispatch ) ]\n                (options\n                 |> List.map (fun value ->\n                    option [ Value value ][ str value] ))\n              ] ]\n        yield!\n         [Input.text [\n            Input.Placeholder value\n            Input.Value value\n            Input.Props\n              [ OnChange (fun ev -> !!ev.target?value |> message |> dispatch )\n                 ] ] ]\n\n        yield!\n          (if checkValid && not (isValid value) then\n            [Help.help\n              [  Help.Color IsDanger  ]\n              [ str warning ]]\n           else [])\n      ]\n  ]\n\nlet checkFloat x =\n  let canParse, result = System.Double.TryParse(x)\n  canParse\n\nlet checkAircraftID (x: string) =\n  (x.Length >= 3)\n  && (x |> Seq.forall (fun c -> System.Char.IsLetterOrDigit(c)))\n\nlet checkAircraftType (x: string) =\n  (x.Length >= 3)\n  && (x |> Seq.forall (fun c -> System.Char.IsLetterOrDigit(c)))\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Select =\n\n    type Option =\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-inline` class\n        | [<CompiledName(\"is-inline\")>] IsInline\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        | Color of IColor\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"select\"></div>\n    let select (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | IsFullWidth\n            | IsInline\n            | IsRounded -> result.AddCaseName option\n            | IsLoading state\n            | IsFocused state\n            | IsActive state\n            | Disabled state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"select\").ToReactElement(div, children)\n","module Twitcher.Conversions\n\nopen Twitcher.Domain\n\nmodule Speed =\n  let private msfmConst = 196.8504<(ft/minute)/(m/s)>\n  let ms2fm (speed: float<m/s>) = speed * msfmConst\n  let fm2ms (speed: float<ft/minute>) = speed/msfmConst\n\n  let private msknotConst = 1.94384<knot/(m/s)>\n  let ms2knot (speed: float<m/s>) = speed * msknotConst\n  let knot2ms (speed: float<knot>) = speed/msknotConst\n\n  let private machknotConst = 666.738661<knot/Mach>\n  let mach2knot (speed: float<Mach>) = speed * machknotConst\n  let knot2mach (speed: float<knot>) = speed/machknotConst\n\n  let private kmhknotConst =  0.539957<knot/(km/h)>\n  let kmh2knot (speed: float<km/h>) = speed * kmhknotConst  \n  let knot2kmh (speed: float<knot>) = speed/kmhknotConst  \n\nmodule Altitude =\n  /// Conversion constant between feet and meters\n  let private mftConst = 3.2808<ft/m>  \n  let m2ft (alt: float<m>) = alt * mftConst\n  let ft2m (alt: float<ft>) = alt/mftConst\n\n  let private ftflConst = 100.<ft/FL>\n  let ft2fl (alt: float<ft>) = (alt/ftflConst) |> float |> round |> int |> (*) 1<FL>\n  let fl2ft (alt: int<FL>) = ((float alt) * 1.<FL>)*ftflConst\n\nmodule Distance =\n  let private mnmConst = 1852.<m/nm>\n  let m2nm (d: float<m>) = d/mnmConst \n  let nm2m (d: float<nm>) = d*mnmConst","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Modal =\n\n    type Option =\n        | Props of IHTMLProp list\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    module Close =\n        type Option =\n            | Size of ISize\n            | OnClick of (MouseEvent -> unit)\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"modal\"></div>\n    let modal (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsActive state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"modal\").ToReactElement(div, children)\n\n    /// Generate <button class=\"modal-close\"></button>\n    let close (options : Close.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Close.Size IsSmall\n            | Close.Size IsMedium ->\n                Fable.Core.JS.console.warn(\"`is-small` and `is-medium` are not valid sizes for 'modal close'\")\n                result\n            | Close.Size size -> ofSize size |> result.AddClass\n            | Close.OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n            | Close.Props props -> result.AddProps props\n            | Close.CustomClass customClass -> result.AddClass customClass\n            | Close.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"modal-close\").ToReactElement(button, children)\n\n    /// Generate <div class=\"modal-background\"></div>\n    let background (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"modal-background\").ToReactElement(div, children)\n\n    /// Generate <div class=\"modal-content\"></div>\n    let content (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"modal-content\").ToReactElement(div, children)\n\n    module Card =\n\n        /// Generate <div class=\"modal-card\"></div>\n        let card (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"modal-card\").ToReactElement(div, children)\n\n        /// Generate <header class=\"modal-card-head\"></header>\n        let head (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"modal-card-head\").ToReactElement(header, children)\n\n        /// Generate <footer class=\"modal-card-foot\"></footer>\n        let foot (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"modal-card-foot\").ToReactElement(footer, children)\n\n        /// Generate <div class=\"modal-card-title\"></div>\n        let title (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"modal-card-title\").ToReactElement(div, children)\n\n        /// Generate <div class=\"modal-card-body\"></div>\n        let body (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"modal-card-body\").ToReactElement(section, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Heading =\n\n    type Option =\n        /// Add `is-1` class\n        | [<CompiledName(\"is-1\")>]Is1\n        /// Add `is-2` class\n        | [<CompiledName(\"is-2\")>]Is2\n        /// Add `is-3` class\n        | [<CompiledName(\"is-3\")>]Is3\n        /// Add `is-4` class\n        | [<CompiledName(\"is-4\")>]Is4\n        /// Add `is-5` class\n        | [<CompiledName(\"is-5\")>]Is5\n        /// Add `is-6` class\n        | [<CompiledName(\"is-6\")>]Is6\n        /// Add `subtitle` class\n        | [<CompiledName(\"subtitle`\")>]IsSubtitle\n        /// Add `is-spaced` class\n        | [<CompiledName(\"is-spaced\")>]IsSpaced\n        // Extra\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    let internal title (element : IHTMLProp list -> ReactElement list -> ReactElement) (options : Option list)\n        (children) =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            // Sizes\n            | Is1\n            | Is2\n            | Is3\n            | Is4\n            | Is5\n            | Is6\n            | IsSpaced -> result.AddCaseName option\n            // Styles\n            | IsSubtitle ->\n                result.RemoveClass(\"title\").AddClass(\"subtitle\")\n            // Extra\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, baseClass=\"title\").ToReactElement(element, children)\n\n    // Alias\n    /// Generate <h1 class=\"title is-1\"></h1>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h1 (options : Option list) = title h1 (Is1 :: options)\n    /// Generate <h2 class=\"title is-2\"></h2>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h2 (options : Option list) = title h2 (Is2 :: options)\n    /// Generate <h3 class=\"title is-3\"></h3>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h3 (options : Option list) = title h3 (Is3 :: options)\n    /// Generate <h4 class=\"title is-4\"></h4>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h4 (options : Option list) = title h4 (Is4 :: options)\n    /// Generate <h5 class=\"title is-5\"></h5>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h5 (options : Option list) = title h5 (Is5 :: options)\n    /// Generate <h6 class=\"title is-6\"></h6>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let h6 (options : Option list) = title h6 (Is6 :: options)\n    /// Generate <p class=\"title\"></p>\n    /// Class can be `subtitle` if you pass `Heading.IsSubtitle`\n    let p opts children = title p opts children\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Button =\n\n    type Option =\n        // Colors\n        | Color of IColor\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-link` class\n        | [<CompiledName(\"is-link\")>] IsLink\n        /// Add `is-outlined` class\n        | [<CompiledName(\"is-outlined\")>] IsOutlined\n        /// Add `is-inverted` class\n        | [<CompiledName(\"is-inverted\")>] IsInverted\n        /// Add `is-text` class\n        | [<CompiledName(\"is-text\")>] IsText\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        /// Add `is-hovered` class if true\n        | [<CompiledName(\"is-hovered\")>] IsHovered of bool\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Set `disabled` HTMLAttr\n        | Disabled of bool\n        | Props of IHTMLProp list\n        | OnClick of (MouseEvent -> unit)\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let internal btnView element (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Color color -> ofColor color |> result.AddClass\n            | Size size -> ofSize size |> result.AddClass\n            // Styles\n            | IsLink\n            | IsFullWidth\n            | IsOutlined\n            | IsInverted\n            | IsText\n            | IsRounded\n            | IsExpanded -> result.AddCaseName option\n            // States\n            | IsHovered state\n            | IsFocused state\n            | IsActive state\n            | IsLoading state\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | Disabled isDisabled -> Fable.React.Props.Disabled isDisabled |> result.AddProp\n            | OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"button\").ToReactElement(element, children)\n\n    /// Generate <button class=\"button\"></button>\n    let button options children = btnView button options children\n    /// Generate <span class=\"button\"></span>\n    let span options children = btnView span options children\n    /// Generate <a class=\"button\"></a>\n    let a options children = btnView a options children\n\n    module Input =\n        let internal btnInput typ options =\n            let hasProps =\n                options\n                |> List.exists (fun opts ->\n                    match opts with\n                    | Props _ -> true\n                    | _ -> false\n                )\n\n            if hasProps then\n                let newOptions =\n                    options\n                    |> List.map (fun opts ->\n                        match opts with\n                        | Props props -> Props ((Type typ :> IHTMLProp) ::props)\n                        | forward -> forward\n                    )\n                btnView (fun options _ -> input options) newOptions [ ]\n\n            else\n                btnView (fun options _ -> input options) ((Props [ Type typ ])::options) [ ]\n\n        /// Generate <input type=\"reset\" class=\"button\" />\n        let reset options = btnInput \"reset\" options\n        /// Generate <input type=\"submit\" class=\"button\" />\n        let submit options = btnInput \"submit\" options\n\n    module List =\n\n        type Option =\n            | [<CompiledName(\"has-addons\")>] HasAddons\n            | [<CompiledName(\"is-centered\")>] IsCentered\n            | [<CompiledName(\"is-right\")>] IsRight\n            // | Size of ISize\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"buttons\"></div>\n    let list (options : List.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | List.HasAddons\n            | List.IsCentered\n            | List.IsRight -> result.AddCaseName option\n            | List.Props props -> result.AddProps props\n            | List.CustomClass customClass -> result.AddClass customClass\n            | List.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"buttons\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fable.React\nopen Fulma\n\n[<RequireQualifiedAccess>]\nmodule Box =\n\n    /// Generate <div class=\"box\"></div>\n    let box' (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"box\").ToReactElement(div, children)\n","module Twitcher.AircraftForm\n\nopen Twitcher.Domain\nopen Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\n\n\ntype FormModel =\n  { AircraftID : string\n    Latitude : string\n    Longitude : string\n    Heading: string\n    Speed : string\n    SpeedUnit : SpeedUnit\n    AltitudeUnit : AltitudeUnit\n    Altitude : string\n    CheckFields : bool\n    Type : string }\n\ntype Msg =\n  | ChangeAircraftID of string\n  | ChangeAircraftType of string\n  | ChangeLatitude of string\n  | ChangeLongitude of string\n  | ChangeHeading of string\n  | ChangeSpeed of string\n  | SetSpeedUnit of string\n  | ChangeAltitude of string\n  | SetAltitudeUnit of string\n  | SubmitForm\n  | Cancel\n  | Error\n  | CheckFields\n\ntype ExternalMsg =\n    | NoOp\n    | Submit of AircraftInfo\n    | Cancel\n\nlet init() =\n  { AircraftID = \"AB1\"\n    Latitude = \"51\"\n    Longitude = \"0\"\n    Heading = \"0\"\n    Speed = \"200\"\n    SpeedUnit = SpeedUnit.Knots\n    Altitude = \"25000\"\n    Type = \"B744\"\n    AltitudeUnit = Feet\n    CheckFields = false },\n  Cmd.none\n\nlet update msg model =\n  match msg with\n  | ChangeAircraftID x ->\n    { model with\n        FormModel.AircraftID = x },\n    Cmd.none,\n    NoOp\n\n  | ChangeAircraftType x ->\n    { model with\n       Type = x },\n    Cmd.none,\n    NoOp\n\n  | ChangeLatitude x ->\n      { model with Latitude = x }, Cmd.none, NoOp\n\n  | ChangeLongitude x ->\n      { model with Longitude = x }, Cmd.none, NoOp\n\n  | ChangeHeading x ->\n      { model with Heading = x }, Cmd.none, NoOp\n\n  | ChangeSpeed x ->\n      { model with Speed = x }, Cmd.none, NoOp\n\n  | SetSpeedUnit su ->\n      let speedUnit =\n        match su with\n        | \"Knots\" -> SpeedUnit.Knots\n        | \"Km/h\" -> SpeedUnit.Kmh\n        | \"Mach\" -> SpeedUnit.Mach\n        | _ -> SpeedUnit.Knots\n      { model with SpeedUnit = speedUnit }, Cmd.none, NoOp\n\n  | ChangeAltitude x ->\n      { model with Altitude = x}, Cmd.none, NoOp\n\n  | SetAltitudeUnit x ->\n      Fable.Core.JS.console.log(x)\n      let altUnit =\n        match x with\n        | \"Flight levels\" -> FlightLevels\n        | \"Meters\" -> Meters\n        | \"Feet\" -> Feet\n        | _ -> Feet\n      { model with AltitudeUnit = altUnit}, Cmd.none, NoOp\n\n  | SubmitForm ->\n      { model with CheckFields = true},\n      Cmd.ofMsg CheckFields,\n      NoOp\n\n  | Msg.Cancel ->\n      model, Cmd.none, ExternalMsg.Cancel\n\n  | Error\n\n  | CheckFields ->\n      if (model.AircraftID |> checkAircraftID) &&\n        (model.Type |> checkAircraftType) &&\n        (model.Latitude |> checkFloat) &&\n        (model.Longitude |> checkFloat) &&\n        (model.Heading |> checkFloat) &&\n        (model.Speed |> checkFloat) &&\n        (model.Altitude |> checkFloat) then\n        let aircraftInfo =\n          { AircraftID = model.AircraftID\n            Type = Some model.Type\n            Time = None\n            Heading = Some (float model.Heading)\n            Position = {\n              Coordinates = {\n                Latitude = float model.Latitude * 1.<latitude>\n                Longitude = float model.Longitude * 1.<longitude>\n              }\n              Altitude =\n                match model.AltitudeUnit with\n                | FlightLevels -> (model.Altitude |> float |> round |> int) * 1<FL> |> Conversions.Altitude.fl2ft\n                | Feet -> float model.Altitude * 1.<ft>\n                | Meters -> float model.Altitude * 1.<m> |> Conversions.Altitude.m2ft\n            }\n            GroundSpeed = None\n            VerticalSpeed = None\n            CalibratedAirSpeed =\n              match model.SpeedUnit with\n              | SpeedUnit.Knots ->\n                  float model.Speed * 1.<knot> |> Some\n              | SpeedUnit.Mach ->\n                  float model.Speed * 1.<Mach> |> Conversions.Speed.mach2knot |> Some\n              | SpeedUnit.Kmh ->\n                  float model.Speed * 1.<km/h> |> Conversions.Speed.kmh2knot |> Some\n              | _ -> None\n            }\n        model, Cmd.none, ExternalMsg.Submit aircraftInfo\n      else\n        model, Cmd.none, NoOp\n\n\nlet view model (dispatch: Msg -> unit) =\n  Modal.modal [ Modal.IsActive true ]\n      [ Modal.background [ Props [ OnClick (fun _ -> dispatch Msg.Cancel) ] ] [ ]\n        Modal.content [ ]\n          [ Box.box' [ ] [\n              Heading.p [ Heading.Is5 ] [ str \"Create new aircraft\" ]\n              form [ ]\n                [ formItem\n                    \"Aircraft identifier\"\n                    model.AircraftID\n                    ChangeAircraftID\n                    model.CheckFields\n                    checkAircraftID\n                    \"Aircraft ID must be alphanumeric and have at least 3 characters.\"\n                    None\n                    dispatch\n\n                  formItem\n                    \"Aircraft type (ICAO identifier)\"\n                    model.Type\n                    ChangeAircraftType\n                    model.CheckFields\n                    checkAircraftType\n                    \"Aircraft type is an alphanumeric identifier, for example B744 is Boeing 747-400.\"\n                    (Some(\n                      Text.span\n                        [ Modifiers [Modifier.TextSize (Screen.All, TextSize.Is7) ]]\n                        [ a [ Href \"https://en.wikipedia.org/wiki/List_of_ICAO_aircraft_type_designators\"\n                              Target \"_blank\"\n                            ] [ str \"Wikipedia - list of ICAO aircraft identifiers\" ]\n                            ]))\n                    dispatch\n\n                  formItem\n                    \"Latitude [decimal degrees]\"\n                    model.Latitude\n                    ChangeLatitude\n                    model.CheckFields\n                    checkFloat\n                    \"Latitude must be a floating point number\"\n                    None\n                    dispatch\n\n                  formItem\n                    \"Longitude [decimal degrees]\"\n                    model.Longitude\n                    ChangeLongitude\n                    model.CheckFields\n                    checkFloat\n                    \"Longitude must be a floating point number\"\n                    None\n                    dispatch\n\n                  formItem\n                    \"Heading [degrees]\"\n                    model.Heading\n                    ChangeHeading\n                    model.CheckFields\n                    checkFloat\n                    \"Heading must be a floating point number\"\n                    None\n                    dispatch\n\n                  formItemOptions\n                    \"Altitude\"\n                    [ \"Feet\"; \"Flight levels\"; \"Meters\" ]\n                    SetAltitudeUnit\n                    model.Altitude\n                    ChangeAltitude\n                    model.CheckFields\n                    checkFloat\n                    \"Altitude must be a number\"\n                    dispatch\n                  formItemOptions\n                    \"Calibrated air speed\"\n                    [\"Knots\"; \"Mach\"; \"Km/h\" ]\n                    SetSpeedUnit\n                    model.Speed\n                    ChangeSpeed\n                    model.CheckFields\n                    checkFloat\n                    \"Speed must be a number\"\n                    dispatch\n                ]\n              hr []\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch SubmitForm)\n                    Button.Color Color.IsPrimary ]\n                  [str \"Submit\"]\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch Msg.Cancel)\n                    Button.Color Color.IsGrey ]\n                  [str \"Cancel\"]\n          ]\n          ]\n        Modal.close [ Modal.Close.Size IsLarge\n                      Modal.Close.OnClick (fun _ -> dispatch Msg.Cancel) ] [ ] ]\n\n\n\n// TODO: more reasonable error checking - flight levels etc\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Level =\n\n    module Level =\n\n        type Option =\n            | Props of IHTMLProp list\n            /// Add `is-mobile` class\n            | [<CompiledName(\"is-mobile\")>] IsMobile\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    module Item =\n\n        type Option =\n            | Props of IHTMLProp list\n            /// Add `has-text-centered` class\n            | [<CompiledName(\"has-text-centered\")>] HasTextCentered\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <nav class=\"level\"></nav>\n    let level (options : Level.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Level.Option.IsMobile -> result.AddCaseName option\n            | Level.Props props -> result.AddProps props\n            | Level.CustomClass customClass -> result.AddClass customClass\n            | Level.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"level\").ToReactElement(nav, children)\n\n    /// Generate <div class=\"level-left\"></div>\n    let left (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"level-left\").ToReactElement(div, children)\n\n    /// Generate <div class=\"level-right\"></div>\n    let right (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"level-right\").ToReactElement(div, children)\n\n    /// Generate <div class=\"level-item\"></div>\n    let item (options : Item.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Item.HasTextCentered -> result.AddCaseName option\n            | Item.Props props -> result.AddProps props\n            | Item.CustomClass customClass -> result.AddClass customClass\n            | Item.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"level-item\").ToReactElement(div, children)\n\n    /// Generate <p class=\"heading\"></p>\n    let heading (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"heading\").ToReactElement(p, children)\n\n    /// Generate <p class=\"title\"></p>\n    let title (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"title\").ToReactElement(p, children)\n","module Twitcher.AltitudeForm\n\nopen Twitcher.Domain\nopen Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\nopen Fable\n\n\ntype FormModel =\n  { AircraftID : string\n    CurrentAltitude : Altitude\n    AltitudeUnit : AltitudeUnit\n    NewAltitude : string\n    VerticalSpeed : string option\n    CheckFields : bool\n   }\n\ntype Msg =\n  | ChangeAltitude of string\n  | SetAltitudeUnit of string\n  | SubmitForm\n  | Cancel\n  | Error\n  | CheckFields\n\ntype ExternalMsg =\n    | NoOp\n    | Submit of AircraftID * Altitude * float option  // Submit altitude in feet\n    | Cancel\n\nlet init(aircraftID, currentAltitude) =\n  { AircraftID = aircraftID\n    NewAltitude = \"\"\n    AltitudeUnit = Feet\n    CurrentAltitude = currentAltitude\n    VerticalSpeed = None\n    CheckFields = false },\n  Cmd.none\n\nlet update msg model =\n  match msg with\n  | ChangeAltitude x ->\n      { model with NewAltitude = x}, Cmd.none, NoOp\n\n  | SetAltitudeUnit x ->\n      Fable.Core.JS.console.log(x)\n      let altUnit =\n        match x with\n        | \"Flight levels\" -> FlightLevels\n        | \"Meters\" -> Meters\n        | \"Feet\" -> Feet\n        | _ -> Feet\n      { model with AltitudeUnit = altUnit}, Cmd.none, NoOp\n\n  | SubmitForm ->\n      { model with CheckFields = true},\n      Cmd.ofMsg CheckFields,\n      NoOp\n\n  | Msg.Cancel ->\n      model, Cmd.none, ExternalMsg.Cancel\n\n  | Error\n\n  | CheckFields ->\n      if (model.NewAltitude |> checkFloat) &&\n         (if model.VerticalSpeed.IsSome then\n            model.VerticalSpeed.Value |> checkFloat\n          else true) then\n        let altitude =\n          match model.AltitudeUnit with\n          | FlightLevels -> (model.NewAltitude |> float |> round |> int) * 1<FL> |> Conversions.Altitude.fl2ft\n          | Feet -> float model.NewAltitude * 1.<ft>\n          | Meters -> float model.NewAltitude * 1.<m> |> Conversions.Altitude.m2ft\n        let verticalSpeed =\n          model.VerticalSpeed\n          |> Option.map (fun value -> float value)\n\n        model, Cmd.none, ExternalMsg.Submit (model.AircraftID, altitude, verticalSpeed)\n      else\n        model, Cmd.none, NoOp\n\n\nlet view model (dispatch: Msg -> unit) =\n  Modal.modal [ Modal.IsActive true ]\n      [ Modal.background [ Props [ OnClick (fun _ -> dispatch Msg.Cancel) ] ] [ ]\n        Modal.content [ ]\n          [ Box.box' [ ] [\n              Heading.p [ Heading.Is5 ] [ str \"Change altitude\" ]\n\n              Level.level []\n                   [ Level.item [Level.Item.HasTextCentered ] [\n                      div []\n                        [ yield Level.heading [] [ str \"Current altitude\"]\n                          let alt = model.CurrentAltitude\n                          yield\n                            (match model.AltitudeUnit with\n                             | Feet -> Level.title [] [ str (sprintf \"%.0f feet\" alt) ]\n                             | Meters -> Level.title [] [ str (sprintf \"%.0f meters\" (Conversions.Altitude.ft2m alt))]\n                             | FlightLevels ->\n                                Level.title [] [ str (sprintf \"FL%d\" (Conversions.Altitude.ft2fl alt)) ]\n                             ) ]\n                    ] ]\n\n              form [ ]\n                [\n                  formItemOptions\n                    \"Altitude\"\n                    [ \"Feet\"; \"Flight levels\"; \"Meters\" ]\n                    SetAltitudeUnit\n                    model.NewAltitude\n                    ChangeAltitude\n                    model.CheckFields\n                    checkFloat\n                    \"Altitude must be a number\"\n                    dispatch\n                ]\n              hr []\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch SubmitForm)\n                    Button.Color Color.IsPrimary ]\n                  [str \"Submit\"]\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch Msg.Cancel)\n                    Button.Color Color.IsGrey ]\n                  [str \"Cancel\"]\n          ]\n          ]\n        Modal.close [ Modal.Close.Size IsLarge\n                      Modal.Close.OnClick (fun _ -> dispatch Msg.Cancel) ] [ ] ]\n\n\n\n// TODO: more reasonable error checking - flight levels etc\n","module Twitcher.SpeedForm\n\nopen Twitcher.Domain\nopen Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\n\ntype FormModel =\n  { AircraftID : string\n    GroundSpeed : Speed option\n    SpeedUnit : SpeedUnit\n    NewSpeed : string\n    VerticalSpeed : string option\n    CheckFields : bool\n   }\n\ntype Msg =\n  | ChangeSpeed of string\n  | SetSpeedUnit of string\n  | SubmitForm\n  | Cancel\n  | Error\n  | CheckFields\n\ntype ExternalMsg =\n    | NoOp\n    | Submit of AircraftID * Speed\n    | Cancel\n\nlet init(aircraftID, groundSpeed) =\n  { AircraftID = aircraftID\n    NewSpeed = \"\"\n    SpeedUnit = Knots\n    GroundSpeed = groundSpeed\n    VerticalSpeed = None\n    CheckFields = false },\n  Cmd.none\n\nlet update msg model =\n  match msg with\n  | ChangeSpeed x ->\n      { model with NewSpeed = x}, Cmd.none, NoOp\n\n  | SetSpeedUnit x ->\n      Fable.Core.JS.console.log(x)\n      let speedUnit =\n        match x with\n        | \"Km/h\" -> Kmh\n        | \"Knots\" -> Knots\n        | \"Mach\" -> Mach\n        | _ -> Knots\n      { model with SpeedUnit = speedUnit}, Cmd.none, NoOp\n\n  | SubmitForm ->\n      { model with CheckFields = true},\n      Cmd.ofMsg CheckFields,\n      NoOp\n\n  | Msg.Cancel ->\n      model, Cmd.none, ExternalMsg.Cancel\n\n  | Error\n\n  | CheckFields ->\n      if (model.NewSpeed |> checkFloat) &&\n         (if model.VerticalSpeed.IsSome then\n            model.VerticalSpeed.Value |> checkFloat\n          else true) then\n        let speed =\n          match model.SpeedUnit with\n          | Kmh -> float model.NewSpeed * 1.<km/h> |> Conversions.Speed.kmh2knot\n          | Knots -> float model.NewSpeed * 1.<knot>\n          | Mach -> float model.NewSpeed * 1.<Mach> |> Conversions.Speed.mach2knot\n          | FeetPerMinute -> float model.NewSpeed * 1.<ft/minute> |> Conversions.Speed.fm2ms |> Conversions.Speed.ms2knot\n          | MetersPerSecond -> float model.NewSpeed * 1.<m/s> |> Conversions.Speed.ms2knot\n\n        model, Cmd.none, ExternalMsg.Submit (model.AircraftID, speed)\n      else\n        model, Cmd.none, NoOp\n\n\nlet view model (dispatch: Msg -> unit) =\n  Modal.modal [ Modal.IsActive true ]\n      [ Modal.background [ Props [ OnClick (fun _ -> dispatch Msg.Cancel) ] ] [ ]\n        Modal.content [ ]\n          [ Box.box' [ ] [\n              Heading.p [ Heading.Is5 ] [ str \"Change calibrated air speed\" ]\n              Level.level []\n                (match model.GroundSpeed with\n                 | Some(gs) ->\n                   [ Level.item [Level.Item.HasTextCentered ] [\n                      div []\n                        [ Level.heading [] [ str \"Current ground speed\"]\n                          (match model.SpeedUnit with\n                           | Knots ->\n                              Level.title [] [ str (sprintf \"%.0f knots\" gs) ]\n                           | Kmh ->\n                              Level.title [] [ str (sprintf \"%.0f km/h\" (gs |> Conversions.Speed.knot2kmh)) ]\n                           | Mach ->\n                              Level.title [] [ str (sprintf \"Mach %.3f\" (gs |> Conversions.Speed.knot2mach)) ]\n                           | FeetPerMinute | MetersPerSecond -> Level.title [] [ str \"Error\" ]\n                           ) ]\n                    ] ]\n                 | None -> [])\n              form [ ]\n                [ // TODO display current speed?\n                  formItemOptions\n                    \"Calibrated air speed (CAS)\"\n                    [ \"Knots\"; \"Mach\"; \"Km/h\" ]\n                    SetSpeedUnit\n                    model.NewSpeed\n                    ChangeSpeed\n                    model.CheckFields\n                    checkFloat\n                    \"Speed must be a number\"\n                    dispatch\n                ]\n              hr []\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch SubmitForm)\n                    Button.Color Color.IsPrimary ]\n                  [str \"Submit\"]\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch Msg.Cancel)\n                    Button.Color Color.IsGrey ]\n                  [str \"Cancel\"]\n          ]\n          ]\n        Modal.close [ Modal.Close.Size IsLarge\n                      Modal.Close.OnClick (fun _ -> dispatch Msg.Cancel) ] [ ] ]\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule File =\n\n    type Option =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Size of ISize\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>]IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>]IsActive of bool\n        /// Add `is-hovered` class if true\n        | [<CompiledName(\"is-hovered\")>]IsHovered of bool\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>]IsFullWidth\n        /// Add `is-centered` class\n        | [<CompiledName(\"is-centered\")>]IsCentered\n        /// Add `is-right` class\n        | [<CompiledName(\"is-right\")>]IsRight\n        /// Add `is-boxed` class\n        | [<CompiledName(\"is-boxed\")>]IsBoxed\n        /// Add `has-name` class\n        | [<CompiledName(\"has-name\")>]HasName\n        /// Add `is-empty` class if true\n        | [<CompiledName(\"is-empty\")>]IsEmpty of bool\n        | Color of IColor\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"file\"></div>\n    let file (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | IsFullWidth\n            | IsCentered\n            | IsRight\n            | IsBoxed\n            | HasName -> result.AddCaseName option\n            | Color color -> ofColor color |> result.AddClass\n            | IsFocused state\n            | IsActive state\n            | IsHovered state\n            | IsEmpty state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"file\").ToReactElement(div, children)\n\n    /// Generate <span class=\"file-cta\"></span>\n    let cta (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-cta\").ToReactElement(span, children)\n\n    /// Generate <span class=\"file-name\"></span>\n    let name (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-name\").ToReactElement(span, children)\n\n    /// Generate <span class=\"file-icon\"></span>\n    let icon (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-icon\").ToReactElement(span, children)\n\n    /// Generate <label class=\"file-label\"></label>\n    let label (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-label\").ToReactElement(label, children)\n\n    /// Generate <input type=\"file\" class=\"file-input\"/>\n    let input (options : GenericOption list) =\n        GenericOptions.Parse(options, parseOptions, \"file-input\", [Type \"file\" :> IHTMLProp]).ToReactElement(input)\n","namespace Fable.FontAwesome\n\nopen Fable.Core\nopen Fable.React\nopen Fable.React.Props\n\nmodule internal Helpers =\n\n    let classes std (options : string option list) (booleans: (string * bool) list) =\n        let std = (std, options) ||> List.fold (fun complete opt ->\n            match opt with Some name -> complete + \" \" + name | None -> complete)\n        (std, booleans) ||> List.fold (fun complete (name, flag) ->\n            if flag then complete + \" \" + name else complete)\n        |> ClassName :> IHTMLProp\n\n[<RequireQualifiedAccess>]\nmodule Fa =\n\n    module Classes =\n        module Size =\n            let [<Literal>] FaExtraSmall = \"fa-xs\"\n            let [<Literal>] FaSmall = \"fa-sm\"\n            let [<Literal>] FaLarge = \"fa-lg\"\n            let [<Literal>] Fa2x = \"fa-2x\"\n            let [<Literal>] Fa3x = \"fa-3x\"\n            let [<Literal>] Fa4x = \"fa-4x\"\n            let [<Literal>] Fa5x = \"fa-5x\"\n            let [<Literal>] Fa6x = \"fa-6x\"\n            let [<Literal>] Fa7x = \"fa-7x\"\n            let [<Literal>] Fa8x = \"fa-8x\"\n            let [<Literal>] Fa9x = \"fa-9x\"\n            let [<Literal>] Fa10 = \"fa-10x\"\n\n        module Style =\n            let [<Literal>] FixedWidth = \"fa-fw\"\n            let [<Literal>] IsLi = \"fa-li\"\n            let [<Literal>] Border = \"fa-border\"\n            let [<Literal>] Inverse = \"fa-inverse\"\n\n        module Rotations =\n            let [<Literal>] Rotate90 = \"fa-rotate-90\"\n            let [<Literal>] Rotate180 = \"fa-rotate-180\"\n            let [<Literal>] Rotate270 = \"fa-rotate-270\"\n\n        module Flips =\n            let [<Literal>] Horizontal = \"fa-flip-horizontal\"\n            let [<Literal>] Vertical = \"fa-flip-vertical\"\n\n        module Animations =\n            let [<Literal>] Spin = \"fa-spin\"\n            let [<Literal>] Pulse = \"fa-pulse\"\n\n        module Pull =\n            let [<Literal>] Right = \"fa-pull-right\"\n            let [<Literal>] Left = \"fa-pull-left\"\n\n        module Stack =\n\n            let [<Literal>] Container = \"fa-stack\"\n\n            module Size =\n                let [<Literal>] Fa1x = \"fa-stack-1x\"\n                let [<Literal>] Fa2x = \"fa-stack-2x\"\n\n    type ISize =\n        | FaExtraSmall\n        | FaSmall\n        | FaLarge\n        | Fa2x\n        | Fa3x\n        | Fa4x\n        | Fa5x\n        | Fa6x\n        | Fa7x\n        | Fa8x\n        | Fa9x\n        | Fa10\n\n    type IconOption =\n        | Size of ISize\n        | Border\n        | PullLeft\n        | PullRight\n        | Inverse\n        | Rotate90\n        | Rotate180\n        | Rotate270\n        | FlipHorizontal\n        | FlipVertical\n        | IsLi\n        | Icon of string\n        | Spin\n        | Pulse\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | FixedWidth\n        | Stack1x\n        | Stack2x\n\n    let internal ofSize (size : ISize) =\n        match size with\n        | FaExtraSmall -> Classes.Size.FaExtraSmall\n        | FaSmall -> Classes.Size.FaSmall\n        | FaLarge -> Classes.Size.FaLarge\n        | Fa2x -> Classes.Size.Fa2x\n        | Fa3x -> Classes.Size.Fa3x\n        | Fa4x -> Classes.Size.Fa4x\n        | Fa5x -> Classes.Size.Fa5x\n        | Fa6x -> Classes.Size.Fa6x\n        | Fa7x -> Classes.Size.Fa7x\n        | Fa8x -> Classes.Size.Fa8x\n        | Fa9x -> Classes.Size.Fa9x\n        | Fa10 -> Classes.Size.Fa10\n\n    type IconOptions =\n        { Icon : string option\n          Size : string option\n          Border : string option\n          Pull : string option\n          HaveSpin : bool\n          HavePulse : bool\n          Rotation : string option\n          Flip : string option\n          IsInverse : bool\n          Props : IHTMLProp list\n          FixedWidth : bool\n          IsLi : bool\n          StackSize : string option\n          CustomClass : string option }\n\n        static member Empty =\n            { Icon = None\n              Size = None\n              Border = None\n              Pull = None\n              HaveSpin = false\n              HavePulse = false\n              Rotation = None\n              Flip = None\n              IsInverse = false\n              Props = [ ]\n              FixedWidth = false\n              IsLi = false\n              StackSize = None\n              CustomClass = None }\n\n    let toIconOptions (faOptions: IconOption list) =\n        let parseOptions (result: IconOptions) (option: IconOption) =\n            match option with\n            | Size s ->\n                { result with Size = ofSize s |> Some }\n            | Border ->\n                { result with Border = Some Classes.Style.Border }\n            | PullLeft ->\n                { result with Pull = Some Classes.Pull.Left }\n            | PullRight ->\n                { result with Pull = Some Classes.Pull.Right }\n            | Inverse ->\n                { result with IsInverse = true }\n            | Icon faIcon ->\n                { result with Icon = faIcon |> Some }\n            | Rotate90 ->\n                { result with Rotation = Classes.Rotations.Rotate90 |> Some }\n            | Rotate180 ->\n                { result with Rotation = Classes.Rotations.Rotate180 |> Some }\n            | Rotate270 ->\n                { result with Rotation = Classes.Rotations.Rotate270 |> Some }\n            | FlipHorizontal ->\n                { result with Rotation = Classes.Flips.Horizontal |> Some }\n            | FlipVertical ->\n                { result with Rotation = Classes.Flips.Vertical |> Some }\n            | Spin ->\n                { result with HaveSpin = true }\n            | Pulse ->\n                { result with HavePulse = true }\n            | Props props ->\n                { result with Props = props }\n            | FixedWidth ->\n                { result with FixedWidth = true }\n            | IsLi ->\n                { result with IsLi = true }\n            | CustomClass customClass ->\n                { result with CustomClass = Some customClass }\n            | Stack1x ->\n                { result with StackSize = Some Classes.Stack.Size.Fa1x }\n            | Stack2x ->\n                { result with StackSize = Some Classes.Stack.Size.Fa2x }\n\n        faOptions |> List.fold parseOptions IconOptions.Empty\n\n    /// Logic used to display one icon alone or as one item in an unordered list:\n    let internal displayIcon baseElement baseClass (opts: IconOptions) children  =\n        let classes =\n            Helpers.classes baseClass\n                [ opts.Icon\n                  opts.Size\n                  opts.Border\n                  opts.Pull\n                  opts.Rotation\n                  opts.Flip\n                  opts.CustomClass\n                  opts.StackSize ]\n                [ Classes.Style.FixedWidth, opts.FixedWidth\n                  Classes.Style.IsLi, opts.IsLi\n                  Classes.Animations.Pulse, opts.HavePulse\n                  Classes.Animations.Spin, opts.HaveSpin\n                  Classes.Style.Inverse, opts.IsInverse ]\n\n        baseElement (classes::opts.Props)\n          children\n\n    let ul props children =\n        ul [ ClassName \"fa-ul\" ]\n            children\n\n    let ol props children =\n        ol [ ClassName \"fa-ul\" ]\n            children\n\n    let i (faOptions: IconOption list) children =\n        let opts = toIconOptions faOptions\n        displayIcon i \"\" opts children\n\n    let span (faOptions: IconOption list) children =\n        let opts = toIconOptions faOptions\n        displayIcon span \"\" opts children\n\n    module Stack =\n        type Option =\n            | Size of ISize\n            | CustomClass of string\n            | Props of IHTMLProp list\n\n        type internal Options =\n            { Size : string option\n              Props : IHTMLProp list\n              CustomClass : string option }\n\n            static member Empty =\n                { Size = None\n                  Props = [ ]\n                  CustomClass = None }\n\n\n    let stack options children =\n        let parseOption (result : Stack.Options) opt =\n            match opt with\n            | Stack.Size size ->\n                { result with Size = ofSize size |> Some }\n            | Stack.CustomClass customClass ->\n                { result with CustomClass = Some customClass }\n            | Stack.Props props ->\n                { result with Props = props }\n\n        let opts = options |> List.fold parseOption Stack.Options.Empty\n        let classes = Helpers.classes\n                        Classes.Stack.Container\n                        ( opts.Size\n                            :: opts.CustomClass\n                            :: [] )\n                        [ ]\n\n        Fable.React.Standard.span (classes::opts.Props)\n            children\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Icon =\n\n    type Option =\n        // Sizes\n        | Size of ISize\n        /// Add `is-left` class\n        | [<CompiledName(\"is-left\")>] IsLeft\n        /// Add `is-right` class\n        | [<CompiledName(\"is-right\")>] IsRight\n        // Extra\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <span class=\"icon\"></span>\n    let icon options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            // Sizes\n            | Size size -> ofSize size |> result.AddClass\n            // Position\n            | IsLeft\n            | IsRight -> result.AddCaseName option\n            // Extra\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"icon\").ToReactElement(span, children)\n","module Twitcher.CoordinateSystem\n\nopen Twitcher.Domain\n\n// https://wiki.openstreetmap.org/wiki/Mercator#C.23_implementation\n\nmodule Mercator =\n  let rMajor = 6378137.0\n  let rMinor = 6356752.3142\n  let ratio = rMinor / rMajor\n  let eccent = sqrt (1.0 - (ratio**2.0))\n  let com = 0.5 * eccent\n\n  let deg2rad = System.Math.PI / 180.0\n\n  let degToRad deg = deg * deg2rad\n  let radToDeg rad = rad / deg2rad\n\n  let lonToX longitude = rMajor * (longitude * deg2rad)\n  \n  let latToY latitude =\n    let lat' = min 89.5 (max latitude -89.5)\n    let phi = lat' * deg2rad\n    let sinphi = sin phi\n    let con = eccent * sinphi\n    let con' = ((1.0 - con) / (1.0 + con))**com\n    let ts = tan(0.5 * ((System.Math.PI * 0.5) - phi)) / con'\n    - rMajor * log ts  \n\n  let lonLatToXY longitude latitude =\n    (lonToX longitude, latToY latitude)\n\n  let xToLon x =\n    (radToDeg x)/rMajor\n\n  let yToLat y =\n    let ts = System.Math.Exp(-y / rMajor)\n    let initialPhi = System.Math.PI/2. - 2. * System.Math.Atan(ts)\n\n    let rec compute phi dphi iter =\n      if iter >= 15 || abs(dphi) <= 0.000000001 then\n        phi\n      else \n        let con = eccent * System.Math.Sin(phi)\n        let dphi' = System.Math.PI/2.0 - 2. * System.Math.Atan(ts * System.Math.Pow((1.0 - con) / (1.0 + con), com)) - phi\n        compute (phi + dphi') dphi' (iter + 1)\n\n    let phi = compute initialPhi 1.0 0\n    radToDeg(phi)    \n\n  let xyToLonLat x y =\n    xToLon x, yToLat y\n\n\n// let (minAltitude: Altitude), (maxAltitude: Altitude) = 0.0<ft>, 45000.0<ft>   \n\n\n// // Entire Earth area\n// let rangeXMin, rangeYMin = Mercator.lonLatToXY -180.0 -89.5\n// let rangeXMax, rangeYMax = Mercator.lonLatToXY 180.0 89.5\n\n// // Hard-coded college airspace area\n// // TODO Load from some config file\n// let sectorXMin, sectorYMin = Mercator.lonLatToXY -2.5 50.3 //-3.974833333 49.0675 \n// let sectorXMax, sectorYMax = Mercator.lonLatToXY 1.4 52.0 //5.090666667 53.80883333\n\n// // Around Equator for testing purposes\n// let testXMin, testYMin = Mercator.lonLatToXY -2.0 -1.0\n// let testXMax, testYMax = Mercator.lonLatToXY 2.0 1.0\n\n/// Linear rescaling\nlet scale rMin rMax tMin tMax value =\n  (value - rMin)/(rMax - rMin) * (tMax - tMin) + tMin\n\n/// Mercator coordinates to visualization coordinates, whole Earth\n// let rescaleEarth (longitude, latitude) (xWidth, yWidth) =\n//   scale rangeXMin rangeXMax 0. xWidth longitude,\n//   scale rangeYMin rangeYMax 0. yWidth latitude\n\n/// Mercator coordinates to visualization coordinates\n/// Rescales \nlet rescaleSectorToView (sectorDisplay: Model.SectorDisplay) \n      (longitude: float<longitude>, latitude: float<latitude>, altitude: Altitude) \n      (sectorView: Model.SectorView) =\n  let xMercator,yMercator = Mercator.lonLatToXY (float longitude) (float latitude)\n  let sectorXMin, sectorYMin = sectorView.SectorDisplayArea.BottomLeft\n  let sectorXMax, sectorYMax = sectorView.SectorDisplayArea.TopRight\n  let xWidth, yWidth = sectorView.VisualisationViewSize\n\n  match sectorDisplay with\n  | Model.SectorDisplay.TopDown ->\n      // map longitude and latitude to x and y\n      scale sectorXMin sectorXMax 0.0 xWidth xMercator,\n      yWidth - (scale sectorYMin sectorYMax 0.0 yWidth yMercator)\n  \n  | Model.SectorDisplay.LateralNorthSouth ->\n      // map longitude to x and altitude to y\n      scale sectorXMin sectorXMax 0.0 xWidth xMercator,\n      yWidth - (scale (float sectorView.SectorDisplayArea.BottomAltitude) (float sectorView.SectorDisplayArea.TopAltitude) 0.0 yWidth (float altitude))\n\n  | Model.SectorDisplay.LateralEastWest ->\n      // map latitude to x and altitude to y\n      scale sectorYMin sectorYMax 0.0 xWidth yMercator,\n      yWidth - (scale (float sectorView.SectorDisplayArea.BottomAltitude) (float sectorView.SectorDisplayArea.TopAltitude) 0.0 yWidth (float altitude))\n\n\n\n// let rescaleViewToSector (x, y) (xWidth, yWidth) : float<longitude> * float<latitude> =\n//   // rescale from display coordinates to Mercator values\n//   let xMercator = scale 0. xWidth sectorXMin sectorXMax x \n//   let yMercator = scale 0. yWidth sectorYMin sectorYMax y\n\n//   // Recompute from Mercator location to actual longitude and latitude\n//   let lon, lat = Mercator.xyToLonLat xMercator yMercator\n//   lon * 1.<longitude>, lat * 1.<latitude>\n\n\n/// Mercator coordinates to visualization coordinates, area around Equator\n// let rescaleTest (longitude, latitude) (xWidth, yWidth) =\n//   scale testXMin testXMax 0. xWidth longitude,\n//   scale testYMin testYMax 0. yWidth latitude\n\nlet isInViewSector coordinates sectorView =\n  let x,y = rescaleSectorToView Model.SectorDisplay.TopDown coordinates sectorView\n  let xWidth, yWidth = sectorView.VisualisationViewSize\n  x >= 0. && x <= xWidth && y >= 0. && y <= yWidth\n\n\nlet clockwiseAngle (point1: Position) (point2: Position) =\n    let center (v1: Coordinates) (v2: Coordinates) = \n      // make point1 cente of the coordinate system\n       {Longitude = v2.Longitude - v1.Longitude\n        Latitude = v2.Latitude - v1.Latitude }\n\n    let norm (v: Coordinates) = \n      { Longitude = v.Longitude / sqrt(float v.Latitude**2.0 + float v.Longitude**2.0) \n        Latitude = v.Latitude / sqrt(float v.Latitude**2.0 + float v.Longitude**2.0)}    \n\n    let x = { Longitude = 0.0<longitude>; Latitude = 1.0<latitude> }\n    let y = center point1.Coordinates point2.Coordinates |> norm\n    \n    let dot = float x.Latitude * float y.Latitude + float x.Longitude* float y.Longitude\n    let det = float x.Longitude * float y.Latitude - float x.Latitude*float y.Longitude\n    let angle = \n      System.Math.Atan2 (det, dot) * 180.0/System.Math.PI // clockwise angle\n      |> fun a -> if a < 0. then -a else 360.-a\n      |> fun a -> if System.Double.IsNaN(a) then 0. else a \n    angle\n\n\n// For visualisation purposes, these two points are in the centre of the training sector and 5 nautical miles from each other\nlet calibrationPoint1 = (-0.5<longitude>, 51.<latitude>, 0.0<ft>)\nlet calibrationPoint2 = (-0.5<longitude>, 51.08323664811<latitude>, 0.0<ft>)\n\n//=======================================================    \n\nlet deg2rad d = d * System.Math.PI/180.\n\n\n// Functions for translating latitude, longitude and altitude to x-y-z coordinates\n// Ported from Matlab https://uk.mathworks.com/matlabcentral/fileexchange/7942-covert-lat-lon-alt-to-ecef-cartesian\n// # y = ECEF Y-coordinate (m)\n// # z = ECEF Z-coordinate (m)\n// # lat = geodetic latitude (radians)\n// # lon = longitude (radians)\n// # alt = height above WGS84 ellipsoid (m)\n// # \n// # Notes: This function assumes the WGS84 model.\n// #        Latitude is customary geodetic (not geocentric).\n// # \n// # Source: \"Department of Defense World Geodetic System 1984\"\n// #         Page 4-4\n// #         National Imagery and Mapping Agency\n// #         Last updated June, 2004\n// #         NIMA TR8350.2\n// # \n// # Michael Kleder, July 2005\n\n/// Convert a lat [degrees], lon [degrees], altitude [m] N-by-3 array of geodetic coordinates (latitude, longitude and altitude) \n/// lla, to an N-by-3 array of ECEF coordinates, p. lla is in [degrees degrees meters]. p is in meters. \n/// The default ellipsoid planet is WGS84. Latitude and longitude values can be any value. \n/// Notes: latitude values of +90 and -90 may return unexpected values because of singularity at the poles.\nlet llaToEcef (latitude: float<latitude>) (longitude: float<longitude>) (altitude: float<m>) =\n\n    // translate latitude and longitude to radians\n    let rlatitude = float latitude |> deg2rad\n    let rlongitude = float longitude |> deg2rad\n\n    // WGS84 ellipsoid constants:\n    let a = 6378137.0\n    let e = 8.1819190842622e-2\n\n    // intermediate calculation\n    // (prime vertical radius of curvature)\n    let N = a / sqrt(1.0 - e**2.0 * sin(rlatitude)**2.0)\n\n    // results:\n    let x = (N+float altitude) * cos(rlatitude) * cos(rlongitude) * 1.<m>\n    let y = (N+float altitude) * cos(rlatitude) * sin(rlongitude) * 1.<m>\n    let z = ((1.0-e**2.) * N + float altitude) * sin(rlatitude) * 1.<m>\n\n    (x,y,z)\n\n\nlet positionToCartesian (position: Position) =\n  llaToEcef \n    position.Coordinates.Latitude \n    position.Coordinates.Longitude\n    (position.Altitude |> Conversions.Altitude.ft2m)\n\n\n//==================================================\n// Great-circle distance between two points\n\nlet greatCircleDistance (position1: Position) (position2: Position) =\n\n  let mAltitude (pos: Position) =\n    pos.Altitude  |> Conversions.Altitude.ft2m\n\n  let altitude = (mAltitude position1 + mAltitude position2)/2. \n\n  let radius = 6371000.<m> + altitude // Radius of the earth in meters + mean altitude\n  let dLat = deg2rad (float (position1.Coordinates.Latitude - position2.Coordinates.Latitude))\n  let dLon = deg2rad (float (position1.Coordinates.Longitude - position2.Coordinates.Longitude))\n  let a = \n    sin(dLat/2.) * sin(dLat/2.) +\n    cos(deg2rad(float position1.Coordinates.Latitude)) * cos(deg2rad(float position2.Coordinates.Latitude)) * \n    sin(dLon/2.) * sin(dLon/2.)\n    \n  let c = 2. * System.Math.Atan2(sqrt(a), sqrt(1.-a))\n  radius * c // Distance in meters\n","import { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util\";\n// TimeSpan in runtime just becomes a number representing milliseconds\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks /* Long */) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return Math.floor(ts / 86400000);\n}\nexport function hours(ts) {\n    return Math.floor(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return Math.floor(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return Math.floor(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return Math.floor(ts % 1000);\n}\nexport function ticks(ts /* Long */) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\") {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = days(ts);\n    const h = hours(ts);\n    const m = minutes(ts);\n    const s = seconds(ts);\n    const ms = milliseconds(ts);\n    // tslint:disable-next-line:max-line-length\n    return `${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(\"String was not recognized as a valid TimeSpan.\");\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // tslint:disable-next-line:max-line-length\n        const r = /^((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[3] != null && r[4] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const h = +r[3];\n            const m = +r[4];\n            if (r[2] != null) {\n                d = +r[2];\n            }\n            if (r[6] != null) {\n                s = +r[6];\n            }\n            if (r[7] != null) {\n                ms = +r[7];\n            }\n            return create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(\"String was not recognized as a valid TimeSpan.\");\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, 0];\n    }\n}\n","\n[<RequireQualifiedAccess>]\nmodule Promise\n\n#nowarn \"1182\" // Unused values\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\n\nlet inline private (!!) (x:obj): 'T = unbox x\n\n[<Emit(\"new Promise($0)\")>]\n/// The promise function receives two other function parameters: success and fail\nlet create (f: ('T->unit)->(Exception->unit)->unit): JS.Promise<'T> = jsNative\n\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\nlet sleep (ms: int): JS.Promise<unit> = jsNative\n\n[<Emit(\"Promise.resolve($0)\")>]\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\n\n/// Creates promise (in rejected state) with supplied reason.\nlet reject<'T> reason : JS.Promise<'T> = JS.Promise.reject<'T> reason\n\n[<Emit(\"$1.then($0)\")>]\nlet bind (a: 'T->JS.Promise<'R>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$1.then($0)\")>]\nlet map (a: 'T->'R) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$1.then($0)\")>]\nlet iter (a: 'T->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// This version of `catch` fakes a function returning just 'T, as opposed to `Promise<'T>`. If you need to return `Promise<'T>`, use `catchBind`.\nlet catch (fail: Exception->'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// This is a version of `catch` that fakes a function returning Promise<'T> as opposed to just 'T. If you need to return just 'T, use `catch`.\nlet catchBind (fail: Exception->JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\n/// Used to catch errors at the end of a promise chain.\nlet catchEnd (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$2.then($0,$1)\")>]\n/// A combination of `map/bind` and `catch/catchBind`, this function applies the `success` continuation when the input promise resolves successfully, or `fail` continuation when the input promise fails. Both continuations may return either naked value `'R` or another promise `Promise<'R>`. Use the erased-cast operator `!^` to cast values when returning, for example:\n/// ```\n/// somePromise |> Promise.either (fun x -> !^(string x)) (fun err -> ^!(Promise.lift err.Message))\n/// ```\nlet either (success: 'T->U2<'R, JS.Promise<'R>>) (fail: 'E->U2<'R, JS.Promise<'R>>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\n\n[<Emit(\"$2.then($0,$1)\")>]\nlet eitherEnd (success: 'T->unit) (fail: 'E->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$0.then()\")>]\nlet start (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"$1.then(void 0, $0)\")>]\nlet tryStart (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\n\n[<Emit(\"Promise.all($0)\")>]\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\n\n[<Emit(\"Promise.all($0)\")>]\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\n\nlet result (a: JS.Promise<'A>): JS.Promise<Result<'A, 'E>> =\n    either (U2.Case1 << Ok) (U2.Case1 << Error) a\n\nlet mapResult (fn: 'A -> 'B) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\n    a |> map (Result.map fn)\n\nlet bindResult (fn: 'A -> JS.Promise<'B>) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\n    a |> bind (fun a ->\n        match a with\n        | Ok a ->\n            result (fn a)\n        | Error e ->\n            lift (Error e))\n\nlet mapResultError (fn: 'B -> 'C) (a: JS.Promise<Result<'A,'B>>): JS.Promise<Result<'A,'C>> =\n    a |> map (Result.mapError fn)\n\nlet tap (fn: 'A -> unit) (a: JS.Promise<'A>): JS.Promise<'A> =\n    a |> map (fun x -> fn x; x)\n\ntype PromiseBuilder() =\n    [<Emit(\"$1.then($2)\")>]\n    member x.Bind(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\n\n    [<Emit(\"$1.then(() => $2)\")>]\n    member x.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    member x.For(seq: seq<'T>, body: 'T->JS.Promise<unit>): JS.Promise<unit> =\n        // (lift (), seq)\n        // ||> Seq.fold (fun p a ->\n        //     bind (fun () -> body a) p)\n        let mutable p = lift ()\n        for a in seq do\n            p <- !!p?``then``(fun () -> body a)\n        p\n\n    [<Emit(\"$1.then($2)\")>]\n    member x.For(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\n\n    member x.While(guard, p): JS.Promise<unit> =\n        if guard()\n        then bind (fun () -> x.While(guard, p)) p\n        else lift()\n\n    [<Emit(\"Promise.resolve($1)\")>]\n    member x.Return(a: 'T): JS.Promise<'T> = jsNative\n\n    [<Emit(\"$1\")>]\n    member x.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    [<Emit(\"Promise.resolve()\")>]\n    member x.Zero(): JS.Promise<unit> = jsNative\n\n    member x.TryFinally(p: JS.Promise<'T>, compensation: unit->unit): JS.Promise<'T> =\n        either (fun (x: 'T) -> compensation(); U2.Case1 x) (fun er -> compensation(); raise !!er) p\n\n    [<Emit(\"$1.catch($2)\")>]\n    member x.TryWith(p: JS.Promise<'T>, catchHandler: Exception->JS.Promise<'T>): JS.Promise<'T> = jsNative\n\n    member x.Delay(generator: unit->JS.Promise<'T>): JS.Promise<'T> =\n        !!createObj[\n            \"then\" ==> fun f1 f2 ->\n                try generator()?``then``(f1,f2)\n                with er ->\n                    if box f2 = null\n                    then !!JS.Promise.reject(er)\n                    else\n                        try !!JS.Promise.resolve(f2(er))\n                        with er -> !!JS.Promise.reject(er)\n            \"catch\" ==> fun f ->\n                try generator()?catch(f)\n                with er ->\n                    try !!JS.Promise.resolve(f(er))\n                    with er -> !!JS.Promise.reject(er)\n        ]\n\n    member x.Run(p:JS.Promise<'T>): JS.Promise<'T> =\n        create (fun success fail ->\n            try\n                let p : JS.Promise<'T> = !!JS.Promise.resolve(p)\n                p?``then``(success, fail)\n            with\n              er -> fail(er)\n        )\n\n    member x.Using<'T, 'R when 'T :> IDisposable>(resource: 'T, binder: 'T->JS.Promise<'R>): JS.Promise<'R> =\n        x.TryFinally(binder(resource), fun () -> resource.Dispose())\n\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\n    member x.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\n","[<AutoOpen>]\nmodule PromiseImpl\n\nlet promise = Promise.PromiseBuilder()","/// The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses.\r\n/// It also provides a global fetch() method that provides an easy, logical way to fetch resources asynchronously across the network.\r\nmodule Fetch\r\n\r\n#nowarn \"1182\" // Unused values\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Browser.Types\r\n\r\n[<AutoOpen>]\r\nmodule Types =\r\n\r\n    type Body =\r\n        abstract bodyUsed: bool with get, set\r\n        abstract arrayBuffer: unit -> JS.Promise<JS.ArrayBuffer>\r\n        abstract blob: unit -> JS.Promise<Blob>\r\n        // abstract formData: unit -> JS.Promise<FormData>\r\n        abstract json : unit -> JS.Promise<obj>\r\n        abstract json<'T> : unit -> JS.Promise<'T>\r\n        abstract text : unit -> JS.Promise<string>\r\n\r\n    and Request = //(input: U2<string, Request>, ?init: RequestInit) =\r\n        inherit Body\r\n        abstract ``method`` : string with get\r\n        abstract url: string with get\r\n        abstract headers: Headers with get\r\n        abstract referrer: string with get\r\n        abstract mode: U2<string,RequestMode> with get\r\n        abstract credentials: U2<string,RequestCredentials> with get\r\n        abstract cache: U2<string,RequestCache> with get\r\n        abstract clone: unit -> unit\r\n\r\n    and RequestInit =\r\n        abstract ``method``: string option with get, set\r\n        abstract headers: HeaderInit option with get, set\r\n        abstract body: BodyInit option with get, set\r\n        abstract mode: RequestMode option with get, set\r\n        abstract credentials: RequestCredentials option with get, set\r\n        abstract cache: RequestCache option with get, set\r\n\r\n    and [<StringEnum; RequireQualifiedAccess>] RequestContext =\r\n        | Audio | Beacon | Cspreport | Download | Embed | Eventsource | Favicon | Fetch | Font\r\n        | Form | Frame | Hyperlink | Iframe | Image | Imageset | Import | Internal | Location\r\n        | Manifest | Object | Ping | Plugin | Prefetch | Script | Serviceworker | Sharedworker\r\n        | Subresource | Style | Track | Video | Worker | Xmlhttprequest | Xslt\r\n\r\n    and [<StringEnum; RequireQualifiedAccess>] RequestMode =\r\n        | [<CompiledName(\"same-origin\")>]Sameorigin | [<CompiledName(\"no-cors\")>]Nocors | Cors\r\n\r\n    and [<StringEnum; RequireQualifiedAccess>] RequestCredentials =\r\n        Omit | [<CompiledName(\"same-origin\")>]Sameorigin | Include\r\n\r\n    and [<StringEnum; RequireQualifiedAccess>] RequestCache =\r\n        | Default\r\n        | [<CompiledName(\"no-store\")>]Nostore\r\n        | Reload\r\n        | [<CompiledName(\"no-cache\")>]Nocache\r\n        | [<CompiledName(\"force-cache\")>]Forcecache\r\n        | [<CompiledName(\"only-if-cached\")>]Onlyifcached\r\n\r\n    and Headers =\r\n        abstract append : string * string -> unit\r\n        abstract delete : string -> unit\r\n        abstract get : string -> string\r\n        abstract getAll : string -> string[]\r\n        abstract has : string -> bool\r\n        abstract set : string * string -> unit\r\n\r\n        /// Specifying which web sites can participate in cross-origin resource sharing\r\n        [<Emit(\"$0.get('Access-Control-Allow-Origin')\")>] abstract AccessControlAllowOrigin: string option\r\n\r\n        /// Specifies which patch document formats this server supports\r\n        [<Emit(\"$0.get('Accept-Patch')\")>] abstract AcceptPatch: string option\r\n\r\n        /// What partial content range types this server supports via byte serving\r\n        [<Emit(\"$0.get('Accept-Ranges')\")>] abstract AcceptRanges: string option\r\n\r\n        /// The age the object has been in a proxy cache in seconds\r\n        [<Emit(\"$0.get('Age')\")>] abstract Age: string option\r\n\r\n        /// Valid actions for a specified resource. To be used for a 405 Method not allowed\r\n        [<Emit(\"$0.get('Allow')\")>] abstract Allow: string option\r\n\r\n        /// A server uses \"Alt-Svc\" header (meaning Alternative Services) to indicate that its resources can also be accessed at a different network location (host or port) or using a different protocol\r\n        [<Emit(\"$0.get('Alt-Svc')\")>] abstract AltSvc: string option\r\n\r\n        /// Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds\r\n        [<Emit(\"$0.get('Cache-Control')\")>] abstract CacheControl: string option\r\n\r\n        /// Control options for the current connection and list of hop-by-hop response fields\r\n        [<Emit(\"$0.get('Connection')\")>] abstract Connection: string option\r\n\r\n        /// An opportunity to raise a \"File Download\" dialogue box for a known MIME type with binary format or suggest a filename for dynamic content. Quotes are necessary with special characters.\r\n        [<Emit(\"$0.get('Content-Disposition')\")>] abstract ContentDisposition: string option\r\n\r\n        /// The type of encoding used on the data\r\n        [<Emit(\"$0.get('Content-Encoding')\")>] abstract ContentEncoding: string option\r\n\r\n        /// The natural language or languages of the intended audience for the enclosed content\r\n        [<Emit(\"$0.get('Content-Language')\")>] abstract ContentLanguage: string option\r\n\r\n        /// The length of the response body in octets (8-bit bytes)\r\n        [<Emit(\"$0.get('Content-Length')\")>] abstract ContentLength: string option\r\n\r\n        /// An alternate location for the returned data\r\n        [<Emit(\"$0.get('Content-Location')\")>] abstract ContentLocation: string option\r\n\r\n        /// A Base64-encoded binary MD5 sum of the content of the response\r\n        [<Emit(\"$0.get('Content-MD5')\")>] abstract ContentMD5: string option\r\n\r\n        /// Where in a full body message this partial message belongs\r\n        [<Emit(\"$0.get('Content-Range'')\")>] abstract ContentRange: string option\r\n\r\n        /// The MIME type of this content\r\n        [<Emit(\"$0.get('Content-Type')\")>] abstract ContentType: string option\r\n\r\n        /// The date and time that the message was sent (in \"HTTP-date\" format as defined by RFC 7231)\r\n        [<Emit(\"$0.get('Date')\")>] abstract Date: string option\r\n\r\n        /// An identifier for a specific version of a resource, often a message digest\r\n        [<Emit(\"$0.get('ETag')\")>] abstract ETag: string option\r\n\r\n        /// Gives the date/time after which the response is considered stale (in \"HTTP-date\" format as defined by RFC 7231)\r\n        [<Emit(\"$0.get('Expires')\")>] abstract Expires: string option\r\n\r\n        /// The last modified date for the requested object (in \"HTTP-date\" format as defined by RFC 7231)\r\n        [<Emit(\"$0.get('Last-Modified')\")>] abstract LastModified: string option\r\n\r\n        /// Used to express a typed relationship with another resource, where the relation type is defined by RFC 5988\r\n        [<Emit(\"$0.get('Link')\")>] abstract Link: string option\r\n\r\n        /// Used in redirection, or when a new resource has been created.\r\n        [<Emit(\"$0.get('Location')\")>] abstract Location: string option\r\n\r\n        /// This field is supposed to set P3P policy, in the form of P3P:CP=\"your_compact_policy\".\r\n        [<Emit(\"$0.get('P3P')\")>] abstract P3P: string option\r\n\r\n        /// Implementation-specific fields that may have various effects anywhere along the request-response chain.\r\n        [<Emit(\"$0.get('Pragma')\")>] abstract Pragma: string option\r\n\r\n        /// Request authentication to access the proxy.\r\n        [<Emit(\"$0.get('Proxy-Authenticate')\")>] abstract ProxyAuthenticate: string option\r\n\r\n        /// HTTP Public Key Pinning, announces hash of website's authentic TLS certificate\r\n        [<Emit(\"$0.get('Public-Key-Pins')\")>] abstract PublicKeyPins: string option\r\n\r\n        /// Used in redirection, or when a new resource has been created. This refresh redirects after 5 seconds.\r\n        [<Emit(\"$0.get('Refresh')\")>] abstract Refresh: string option\r\n\r\n        /// If an entity is temporarily unavailable, this instructs the client to try again later. Value could be a specified period of time (in seconds) or a HTTP-date.\r\n        [<Emit(\"$0.get('Retry-After')\")>] abstract RetryAfter: string option\r\n\r\n        /// A name for the server\r\n        [<Emit(\"$0.get('Server')\")>] abstract Server: string option\r\n\r\n        /// An HTTP cookie\r\n        [<Emit(\"$0.get('Set-Cookie')\")>] abstract SetCookie: string option\r\n\r\n        /// CGI header field specifying the status of the HTTP response. Normal HTTP responses use a separate \"Status-Line\" instead, defined by RFC 7230\r\n        [<Emit(\"$0.get('Status')\")>] abstract Status: string option\r\n\r\n        /// A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains.\r\n        [<Emit(\"$0.get('Strict-Transport-Security')\")>] abstract StrictTransportSecurity: string option\r\n\r\n        /// The Trailer general field value indicates that the given set of header fields is present in the trailer of a message encoded with chunked transfer coding.\r\n        [<Emit(\"$0.get('Trailer')\")>] abstract Trailer: string option\r\n\r\n        /// The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.\r\n        [<Emit(\"$0.get('Transfer-Encoding')\")>] abstract TransferEncoding: string option\r\n\r\n        /// Tracking Status Value, value suggested to be sent in response to a DNT(do-not-track)\r\n        [<Emit(\"$0.get('TSV')\")>] abstract TSV: string option\r\n\r\n        /// Ask the client to upgrade to another protocol.\r\n        [<Emit(\"$0.get('Upgrade')\")>] abstract Upgrade: string option\r\n\r\n        /// Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server.\r\n        [<Emit(\"$0.get('Vary')\")>] abstract Vary: string option\r\n\r\n        /// Informs the client of proxies through which the response was sent.\r\n        [<Emit(\"$0.get('Via')\")>] abstract Via: string option\r\n\r\n        /// A general warning about possible problems with the entity body.\r\n        [<Emit(\"$0.get('Warning')\")>] abstract Warning: string option\r\n\r\n        /// Indicates the authentication scheme that should be used to access the requested entity.\r\n        [<Emit(\"$0.get('WWW-Authenticate')\")>] abstract WWWAuthenticate: string option\r\n\r\n        /// Clickjacking protection: deny - no rendering within a frame, sameorigin - no rendering if origin mismatch, allow-from - allow from specified location, allowall - non-standard, allow from any location\r\n        [<Emit(\"$0.get('X-Frame-Options')\")>] abstract XFrameOptions: string option\r\n\r\n        /// Cross-site scripting (XSS) filter\r\n        [<Emit(\"$0.get('X-XSS-Protection')\")>] abstract XXSSProtection: string option\r\n\r\n        /// Content Security Policy definition.\r\n        [<Emit(\"$0.get('Content-Security-Policy')\")>] abstract ContentSecurityPolicy: string option\r\n\r\n        /// The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type. This also applies to Google Chrome, when downloading extensions\r\n        [<Emit(\"$0.get('X-Content-Type-Options')\")>] abstract XContentTypeOptions: string option\r\n\r\n        /// Specifies the technology (e.g. ASP.NET, PHP, JBoss) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)\r\n        [<Emit(\"$0.get('X-Powered-By')\")>] abstract XPoweredBy: string option\r\n\r\n        /// Recommends the preferred rendering engine (often a backward-compatibility mode) to use to display the content. Also used to activate Chrome Frame in Internet Explorer.\r\n        [<Emit(\"$0.get('X-UA-Compatible')\")>] abstract XUACompatible: string option\r\n\r\n        /// Provide the duration of the audio or video in seconds; only supported by Gecko browsers\r\n        [<Emit(\"$0.get('X-Content-Duration')\")>] abstract XContentDuration: string option\r\n\r\n        /// Tells a server which (presumably in the middle of a HTTP -> HTTPS migration) hosts mixed content that the client would prefer redirection to HTTPS and can handle Content-Security-Policy: upgrade-insecure-requests\r\n        [<Emit(\"$0.get('Upgrade-Insecure-Requests')\")>] abstract UpgradeInsecureRequests: string option\r\n\r\n        /// Correlates HTTP requests between a client and server.\r\n        [<Emit(\"$0.get('X-Request-ID')\")>] abstract XRequestID: string option\r\n\r\n        /// Correlates HTTP requests between a client and server.\r\n        [<Emit(\"$0.get('X-Correlation-ID')\")>] abstract XCorrelationID: string option\r\n\r\n\r\n    and Response = //(?body: BodyInit, ?init: ResponseInit) =\r\n        inherit Body\r\n\r\n        /// Verifies that the fetch was successful\r\n        [<Emit(\"$0.ok\")>] abstract Ok: bool\r\n\r\n        /// Returns the HTTP status code\r\n        [<Emit(\"$0.status\")>] abstract Status: int\r\n\r\n        /// Returns the HTTP status message\r\n        [<Emit(\"$0.statusText\")>] abstract StatusText: string\r\n\r\n        /// Returns the response URL\r\n        [<Emit(\"$0.url\")>] abstract Url: string\r\n\r\n        /// Returns the headers objct\r\n        [<Emit(\"$0.headers\")>] abstract Headers : Headers\r\n\r\n    and [<StringEnum; RequireQualifiedAccess>] ResponseType =\r\n        | Basic | Cors | Default | Error | Opaque\r\n\r\n    and ResponseInit =\r\n        abstract status: float with get, set\r\n        abstract statusText: string option with get, set\r\n        abstract headers: HeaderInit option with get, set\r\n\r\n    and HeaderInit =\r\n        U2<Headers, string[]>\r\n\r\n    and BodyInit =\r\n        U2<Blob, string> // U3<Blob, FormData, string>\r\n\r\n    [<Erase; RequireQualifiedAccess; NoComparison>]\r\n    type RequestInfo =\r\n        /// Uses a simple Url as string to create the request info\r\n        | Url of string\r\n        /// Uses a Request object as request info\r\n        | Req of Request\r\n\r\n    type [<Erase>] GlobalFetch =\r\n        [<Global>]static member fetch (req: RequestInfo, ?init: RequestInit) = jsNative :JS.Promise<Response>\r\n\r\n    [<StringEnum; RequireQualifiedAccess>]\r\n    type HttpMethod =\r\n        | [<CompiledName(\"CONNECT\")>] CONNECT\r\n        | [<CompiledName(\"DELETE\")>] DELETE\r\n        | [<CompiledName(\"GET\")>] GET\r\n        | [<CompiledName(\"HEAD\")>] HEAD\r\n        | [<CompiledName(\"OPTIONS\")>] OPTIONS\r\n        | [<CompiledName(\"PATCH\")>] PATCH\r\n        | [<CompiledName(\"POST\")>] POST\r\n        | [<CompiledName(\"PUT\")>] PUT\r\n        | [<CompiledName(\"TRACE\")>] TRACE\r\n\r\n    type IHttpRequestHeaders =\r\n        interface end\r\n\r\n    type HttpRequestHeaders =\r\n        | Accept of string\r\n        | [<CompiledName(\"Accept-Charset\")>] AcceptCharset of string\r\n        | [<CompiledName(\"Accept-Encoding\")>] AcceptEncoding of string\r\n        | [<CompiledName(\"Accept-Language\")>] AcceptLanguage of string\r\n        | [<CompiledName(\"Accept-Datetime\")>] AcceptDatetime of string\r\n        | Authorization of string\r\n        | [<CompiledName(\"Cache-Control\")>] CacheControl of string\r\n        | Connection of string\r\n        | Cookie of string\r\n        | [<CompiledName(\"Content-Length\")>] ContentLength of string\r\n        | [<CompiledName(\"Content-MD5\")>] ContentMD5 of string\r\n        | [<CompiledName(\"Content-Type\")>] ContentType of string\r\n        | Date of string\r\n        | Expect of string\r\n        | Forwarded of string\r\n        | From of string\r\n        | Host of string\r\n        | [<CompiledName(\"If-Match\")>] IfMatch of string\r\n        | [<CompiledName(\"If-Modified-Since\")>] IfModifiedSince of string\r\n        | [<CompiledName(\"If-None-Match\")>] IfNoneMatch of string\r\n        | [<CompiledName(\"If-Range\")>] IfRange of string\r\n        | [<CompiledName(\"If-Unmodified-Since\")>] IfUnmodifiedSince of string\r\n        | [<CompiledName(\"Max-Forwards\")>] MaxForwards of int\r\n        | Origin of string\r\n        | Pragma of string\r\n        | [<CompiledName(\"Proxy-Authorization\")>] ProxyAuthorization of string\r\n        | Range of string\r\n        | Referer of string\r\n        | [<CompiledName(\"SOAPAction\")>] SOAPAction of string\r\n        | [<CompiledName(\"TE\")>] TE of string\r\n        | [<CompiledName(\"User-Agent\")>] UserAgent of string\r\n        | Upgrade of string\r\n        | Via of string\r\n        | Warning of string\r\n        | [<CompiledName(\"X-Requested-With\")>] XRequestedWith of string\r\n        | [<CompiledName(\"DNT\")>] DNT of string\r\n        | [<CompiledName(\"X-Forwarded-For\")>] XForwardedFor of string\r\n        | [<CompiledName(\"X-Forwarded-Host\")>] XForwardedHost of string\r\n        | [<CompiledName(\"X-Forwarded-Proto\")>] XForwardedProto of string\r\n        | [<CompiledName(\"Front-End-Https\")>] FrontEndHttps of string\r\n        | [<CompiledName(\"X-Http-Method-Override\")>] XHttpMethodOverride of string\r\n        | [<CompiledName(\"X-ATT-DeviceId\")>] XATTDeviceId of string\r\n        | [<CompiledName(\"X-Wap-Profile\")>] XWapProfile of string\r\n        | [<CompiledName(\"Proxy-Connection\")>] ProxyConnection of string\r\n        | [<CompiledName(\"X-UIDH\")>] XUIDH of string\r\n        | [<CompiledName(\"X-Csrf-Token\")>] XCsrfToken of string\r\n        | [<Erase>] Custom of key:string * value:obj\r\n\r\n    [<NoComparison>]\r\n    type RequestProperties =\r\n        | Method of HttpMethod\r\n        | Headers of IHttpRequestHeaders\r\n        | Body of BodyInit\r\n        | Mode of RequestMode\r\n        | Credentials of RequestCredentials\r\n        | Cache of RequestCache\r\n\r\n\r\nlet inline requestHeaders (headers: HttpRequestHeaders list) =\r\n    RequestProperties.Headers(keyValueList CaseRules.None headers :?> IHttpRequestHeaders)\r\n\r\nlet inline requestProps (props: RequestProperties list) =\r\n    keyValueList CaseRules.LowerFirst props :?> RequestInit\r\n\r\nlet private errorString (response: Response) =\r\n    string response.Status + \" \" + response.StatusText + \" for URL \" + response.Url\r\n\r\n/// Retrieves data from the specified resource. Fails if `response.Ok` evals to false.\r\nlet fetch (url: string) (init: RequestProperties list) : JS.Promise<Response> =\r\n    GlobalFetch.fetch(RequestInfo.Url url, requestProps init)\r\n    |> Promise.map (fun response ->\r\n        if response.Ok\r\n        then response\r\n        else errorString response |> failwith)\r\n\r\nlet tryFetch (url: string) (init: RequestProperties list) : JS.Promise<Result<Response, Exception>> =\r\n    fetch url init |> Promise.result\r\n\r\n// let fetchAs<'T> (url: string) (decoder: Decode.Decoder<'T>) (init: RequestProperties list) : JS.Promise<'T> =\r\n//     GlobalFetch.fetch(RequestInfo.Url url, requestProps init)\r\n//     |> Promise.bind (fun response ->\r\n//         if not response.Ok\r\n//         then errorString response |> failwith\r\n//         else\r\n//             response.text()\r\n//             |> Promise.map (fun res ->\r\n//                 match Decode.fromString decoder res with\r\n//                 | Ok successValue -> successValue\r\n//                 | Error error -> failwith error))\r\n\r\n// let tryFetchAs (url: string) (decoder: Decode.Decoder<'T>) (init: RequestProperties list) : JS.Promise<Result<'T, string>> =\r\n//     GlobalFetch.fetch(RequestInfo.Url url, requestProps init)\r\n//     |> Promise.bind (fun response ->\r\n//         if not response.Ok\r\n//         then errorString response |> Error |> Promise.lift\r\n//         else\r\n//             response.text()\r\n//             |> Promise.map (Decode.fromString decoder))\r\n\r\n// let private sendRecord (url: string) (record:'T) (properties: RequestProperties list) httpMethod : JS.Promise<Response> =\r\n//     let defaultProps =\r\n//         [ RequestProperties.Method httpMethod\r\n//           requestHeaders [ContentType \"application/json\"]\r\n//           RequestProperties.Body !^(Encode.Auto.toString(0, record))]\r\n//     // Append properties after defaultProps to make sure user-defined values\r\n//     // override the default ones if necessary\r\n//     List.append defaultProps properties\r\n//     |> fetch url\r\n\r\n// /// Sends a HTTP post with the record serialized as JSON.\r\n// /// This function already sets the HTTP Method to POST sets the json into the body.\r\n// let postRecord<'T> (url: string) (record:'T) (properties: RequestProperties list) : JS.Promise<Response> =\r\n//     sendRecord url record properties HttpMethod.POST\r\n\r\n// let tryPostRecord<'T> (url: string) (record:'T) (properties: RequestProperties list) : JS.Promise<Result<Response, Exception>> =\r\n//     postRecord url record properties |> Promise.result\r\n\r\n// /// Sends a HTTP put with the record serialized as JSON.\r\n// /// This function already sets the HTTP Method to PUT, sets the json into the body.\r\n// let putRecord (url: string) (record:'T) (properties: RequestProperties list): JS.Promise<Response> =\r\n//     sendRecord url record properties HttpMethod.PUT\r\n\r\n// let tryPutRecord (url: string) (record:'T) (properties: RequestProperties list): JS.Promise<Result<Response, Exception>> =\r\n//     putRecord url record properties |> Promise.result\r\n\r\n// /// Sends a HTTP patch with the record serialized as JSON.\r\n// /// This function already sets the HTTP Method to PATCH sets the json into the body.\r\n// let patchRecord (url: string) (record:'T) (properties: RequestProperties list) : JS.Promise<Response> =\r\n//     sendRecord url record properties HttpMethod.PATCH\r\n\r\n/// Sends a HTTP OPTIONS request.\r\nlet tryOptionsRequest (url:string) : JS.Promise<Result<Response, Exception>> =\r\n    fetch url [RequestProperties.Method HttpMethod.OPTIONS] |> Promise.result","namespace Thoth.Json\n\ntype JsonValue = obj\n\ntype ErrorReason =\n    | BadPrimitive of string * JsonValue\n    | BadPrimitiveExtra of string * JsonValue * string\n    | BadType of string * JsonValue\n    | BadField of string * JsonValue\n    | BadPath of string * JsonValue * string\n    | TooSmallArray of string * JsonValue\n    | FailMessage of string\n    | BadOneOf of string list\n\ntype DecoderError = string * ErrorReason\n\ntype Decoder<'T> = string -> JsonValue -> Result<'T, DecoderError>\n\ntype Encoder<'T> = 'T -> JsonValue\n\ntype BoxedDecoder = Decoder<obj>\n\ntype BoxedEncoder = Encoder<obj>\n\ntype ExtraCoders = Map<string, BoxedEncoder * BoxedDecoder>\n\nmodule internal Util =\n    open System.Collections.Generic\n\n    type Cache<'Value>() =\n        let cache = Dictionary<string, 'Value>()\n        member __.GetOrAdd(key, factory) =\n            match cache.TryGetValue(key) with\n            | true, x -> x\n            | false, _ ->\n                let x = factory()\n                cache.Add(key, x)\n                x\n\n    // Tree shaking will remove this if not used\n    // so no need to make them lazy in Fable\n    let CachedEncoders = Cache<BoxedEncoder>()\n    let CachedDecoders = Cache<BoxedDecoder>()\n\n    /// If used from .NET the type resolver won't be injected,\n    /// throw a more informative error than just a null reference.\n    let inline resolveType (resolver: Fable.Core.ITypeResolver<'T> option): System.Type =\n#if !FABLE_COMPILER\n        failwith \"Thoth.Json is only compatible with Fable, use Thoth.Json.Net\"\n#else\n        resolver.Value.ResolveType()\n#endif\n","import { List, declare, Record } from \"../Types.js\";\nimport { record, array, int32 } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(arg1, arg2) {\n  this.bound = arg1 | 0;\n  this.digits = arg2;\n}, Record);\nexport function BigNat$reflection() {\n  return record(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32], [\"digits\", array(int32)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32(x, n) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      const $n$$2 = n;\n      const $x$$1 = x;\n      x = $x$$1 * $x$$1;\n      n = ~~($n$$2 / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power(b$$1, tp, i) {\n    findBounding2Power: while (true) {\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        const $b$$1$$3 = b$$1;\n        const $i$$5 = i;\n        const $tp$$4 = tp;\n        b$$1 = $b$$1$$3;\n        tp = $tp$$4 * 2;\n        i = $i$$5 + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nconst BigNatModule$002EFFT$$$patternInput$004074 = [fromBits(2013265921, 0, false), 27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004074[4];\nexport const BigNatModule$002EFFT$$$p = BigNatModule$002EFFT$$$patternInput$004074[0];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004074[2];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004074[1];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004074[3];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow(x$$3, n$$1) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      const $n$$1$$7 = n$$1;\n      const $x$$3$$6 = x$$3;\n      x$$3 = toInt(op_Modulus(op_Multiply(fromInteger($x$$3$$6, true, 6), fromInteger($x$$3$$6, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$1 = ~~($n$$1$$7 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2)), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL(x$$7, n$$2) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      const $n$$2$$9 = n$$2;\n      const $x$$7$$8 = x$$7;\n      x$$7 = toInt(op_Modulus(op_Multiply(fromInteger($x$$7$$8, true, 6), fromInteger($x$$7$$8, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$2 = op_Division($n$$2$$9, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false))), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      res[offset + j] = (even + (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(wj, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const lambda$$1 = 1;\n  const mu$$1 = 0;\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  const offset$$1 = 0;\n  BigNatModule$002EFFT$$$computeFFT(lambda$$1, mu$$1, n$$5, w$$1, u$$1, res$$1, offset$$1);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const n$$7 = bigK | 0;\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, v);\n  const rT = initialize(n$$7, function (i$$2) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$1[i$$2], true, 6), fromInteger(vT[i$$2], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$7, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const n$$9 = patternInput[0] | 0;\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, v$$2);\n  const rT$$1 = initialize(n$$9, function (i$$4) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$2[i$$4], true, 6), fromInteger(vT$$1[i$$4], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$9, w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64(x$$23, n$$15) {\n  BigNatModule$$$pow64: while (true) {\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      const $n$$15$$11 = n$$15;\n      const $x$$23$$10 = x$$23;\n      x$$23 = op_Multiply($x$$23$$10, $x$$23$$10);\n      n$$15 = ~~($n$$15$$11 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32(x$$24, n$$16) {\n  BigNatModule$$$pow32: while (true) {\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      const $n$$16$$13 = n$$16;\n      const $x$$24$$12 = x$$24;\n      x$$24 = $x$$24$$12 * $x$$24$$12;\n      n$$16 = ~~($n$$16$$13 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound(na, i$$9) {\n    findLeastBound: while (true) {\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        const $i$$9$$15 = i$$9;\n        const $na$$14 = na;\n        na = $na$$14;\n        i$$9 = $i$$9$$15 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP(i$$16, n$$25, c, p, q, r$$5) {\n  BigNatModule$$$addP: while (true) {\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      const $i$$16$$16 = i$$16;\n      const $n$$25$$17 = n$$25;\n      const $p$$18 = p;\n      const $q$$19 = q;\n      const $r$$5$$20 = r$$5;\n      i$$16 = $i$$16$$16 + 1;\n      n$$25 = $n$$25$$17;\n      c = c$$1;\n      p = $p$$18;\n      q = $q$$19;\n      r$$5 = $r$$5$$20;\n      continue BigNatModule$$$addP;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  const carry = 0;\n  BigNatModule$$$addP(0, rbound, carry, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP(i$$19, n$$26, c$$2, p$$2, q$$2, r$$7) {\n  BigNatModule$$$subP: while (true) {\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        const $i$$19$$21 = i$$19;\n        const $n$$26$$22 = n$$26;\n        const $p$$2$$23 = p$$2;\n        const $q$$2$$24 = q$$2;\n        const $r$$7$$25 = r$$7;\n        i$$19 = $i$$19$$21 + 1;\n        n$$26 = $n$$26$$22;\n        c$$2 = c$$3;\n        p$$2 = $p$$2$$23;\n        q$$2 = $q$$2$$24;\n        r$$7 = $r$$7$$25;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        const $i$$19$$26 = i$$19;\n        const $n$$26$$27 = n$$26;\n        const $p$$2$$28 = p$$2;\n        const $q$$2$$29 = q$$2;\n        const $r$$7$$30 = r$$7;\n        i$$19 = $i$$19$$26 + 1;\n        n$$26 = $n$$26$$27;\n        c$$2 = c$$4;\n        p$$2 = $p$$2$$28;\n        q$$2 = $q$$2$$29;\n        r$$7 = $r$$7$$30;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const carry$$1 = 0;\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, carry$$1, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check(pa, qa, i$$22) {\n      check: while (true) {\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          const $i$$22$$33 = i$$22;\n          const $pa$$31 = pa;\n          const $qa$$32 = qa;\n          pa = $pa$$31;\n          qa = $qa$$32;\n          i$$22 = $i$$22$$33 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1(pa$$1, qa$$1, i$$23) {\n      check$$1: while (true) {\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            const $i$$23$$36 = i$$23;\n            const $pa$$1$$34 = pa$$1;\n            const $qa$$1$$35 = qa$$1;\n            pa$$1 = $pa$$1$$34;\n            qa$$1 = $qa$$1$$35;\n            i$$23 = $i$$23$$36 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2(pa$$2, qa$$2, i$$24) {\n      check$$2: while (true) {\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          const $i$$24$$39 = i$$24;\n          const $pa$$2$$37 = pa$$2;\n          const $qa$$2$$38 = qa$$2;\n          pa$$2 = $pa$$2$$37;\n          qa$$2 = $qa$$2$$38;\n          i$$24 = $i$$24$$39 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr(a$$4, i$$25, c$$5) {\n  BigNatModule$$$contributeArr: while (true) {\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    const x$$38 = ~~toInt(op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64)) | 0;\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      const $a$$4$$40 = a$$4;\n      const $i$$25$$41 = i$$25;\n      a$$4 = $a$$4$$40;\n      i$$25 = $i$$25$$41 + 1;\n      c$$5 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, ~~toInt(op_BitwiseAnd(rak, BigNatModule$$$baseMaski64)));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry(r$$12, c$$8, k$$4) {\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, ~~toInt(op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64)));\n      const $k$$4$$43 = k$$4;\n      const $r$$12$$42 = r$$12;\n      r$$12 = $r$$12$$42;\n      c$$8 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      k$$4 = $k$$4$$43 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, ~~toInt(op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64)));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n  const ra = r$$14.digits;\n  const pa$$3 = p$$17.digits;\n  const qa$$3 = q$$14.digits;\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(pa$$3[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(qa$$3[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(ra[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      ra[k$$5] = ~~toInt(op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n  this.bigL = arg1 | 0;\n  this.twoToBigL = arg2 | 0;\n  this.k = arg3 | 0;\n  this.bigK = arg4 | 0;\n  this.bigN = arg5 | 0;\n  this.split = arg6 | 0;\n  this.splits = arg7;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32], [\"twoToBigL\", int32], [\"k\", int32], [\"bigK\", int32], [\"bigN\", int32], [\"split\", int32], [\"splits\", array(int32)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom(i$$31) {\n    selectFrom: while (true) {\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        const $i$$31$$44 = i$$31;\n        i$$31 = $i$$31$$44 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi(k$$8) {\n    hi: while (true) {\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        const $k$$8$$45 = k$$8;\n        k$$8 = $k$$8$$45 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder(i$$38, bi$$1) {\n    encoder: while (true) {\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {} else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        i$$38 = i$$39;\n        bi$$1 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate(i$$41, j$$2, d$$3) {\n    evaluate: while (true) {\n      if (i$$41 === enc$$3.bigK) {} else {\n        if (j$$2 >= rbound$$5) {} else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        i$$41 = i$$43;\n        j$$2 = patternInput$$1[0];\n        d$$3 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p0 = q0;\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const p2 = q2;\n    const r$$18 = BigNatModule$$$add(p0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, p2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const invariant = function invariant(tupledArg) {};\n\n  const xres = x$$57;\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant([z$$7, j$$4, n$$30]);\n    let zLo = ~~toInt(op_BitwiseAnd(z$$7, BigNatModule$$$baseMaski64)) | 0;\n    let zHi = op_Division(z$$7, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  BigNatModule$$$normN(xres);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const invariant$$1 = function invariant$$1(tupledArg$$1) {};\n\n  const xres$$1 = x$$62;\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant$$1([z$$8, j$$5, n$$32]);\n    let zLo$$1 = ~~toInt(op_BitwiseAnd(z$$8, BigNatModule$$$baseMaski64)) | 0;\n    let zHi$$1 = op_Division(z$$8, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  BigNatModule$$$normN(xres$$1);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    const patternInput$$7 = [a$$11.digits, x$$67.digits];\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(patternInput$$7[1][n$$34] / patternInput$$7[0][0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), fromInteger(patternInput$$7[0][0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(patternInput$$7[1][patternInput$$6[1]] / (patternInput$$7[0][patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(patternInput$$7[0][patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg$$2) {};\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop(a$$19, b$$14) {\n    hcfloop: while (true) {\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        const $a$$19$$49 = a$$19;\n        a$$19 = patternInput$$8[1];\n        b$$14 = $a$$19$$49;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power(acc$$2, x$$70, n$$37) {\n    power: while (true) {\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        const $acc$$2$$50 = acc$$2;\n        const $n$$37$$52 = n$$37;\n        const $x$$70$$51 = x$$70;\n        acc$$2 = $acc$$2$$50;\n        x$$70 = BigNatModule$$$mul($x$$70$$51, $x$$70$$51);\n        n$$37 = ~~($n$$37$$52 / 2);\n        continue power;\n      } else {\n        const $acc$$2$$53 = acc$$2;\n        const $n$$37$$55 = n$$37;\n        const $x$$70$$54 = x$$70;\n        acc$$2 = BigNatModule$$$mul($x$$70$$54, $acc$$2$$53);\n        x$$70 = BigNatModule$$$mul($x$$70$$54, $x$$70$$54);\n        n$$37 = ~~($n$$37$$55 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1(acc$$3, x$$72, n$$39) {\n    power$$1: while (true) {\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          const $acc$$3$$56 = acc$$3;\n          const $x$$72$$57 = x$$72;\n          acc$$3 = $acc$$3$$56;\n          x$$72 = BigNatModule$$$mul($x$$72$$57, $x$$72$$57);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          const $acc$$3$$58 = acc$$3;\n          const $x$$72$$59 = x$$72;\n          acc$$3 = BigNatModule$$$mul($x$$72$$59, $acc$$3$$58);\n          x$$72 = BigNatModule$$$mul($x$$72$$59, $x$$72$$59);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat(acc$$4, k$$10, i$$49) {\n    evalFloat: while (true) {\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        const $acc$$4$$60 = acc$$4;\n        const $i$$49$$62 = i$$49;\n        const $k$$10$$61 = k$$10;\n        acc$$4 = $acc$$4$$60 + $k$$10$$61 * n$$40.digits[$i$$49$$62];\n        k$$10 = $k$$10$$61 * basef;\n        i$$49 = $i$$49$$62 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return n$$43.digits[0] >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        return fromInteger(n$$44.digits[0], true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route(prior, k$$11, ten2k) {\n    route: while (true) {\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        const $k$$11$$64 = k$$11;\n        const $prior$$63 = prior;\n        const $ten2k$$65 = ten2k;\n        prior = new List([$k$$11$$64, $ten2k$$65], $prior$$63);\n        k$$11 = $k$$11$$64 + 1;\n        ten2k = BigNatModule$$$mul($ten2k$$65, $ten2k$$65);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$3) {\n    if (_arg1$$3.tail != null) {\n      const ten2k$$1 = _arg1$$3.head[1];\n      const prior$$1 = _arg1$$3.tail;\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, ten2k$$1);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], prior$$1);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], prior$$1);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], prior$$1);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const prior$$2 = kten2ks;\n  const digits$$4 = collect(true, new List(), n$$45, prior$$2);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    return join(\"\", ...ofList(digits$$4, Array));\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build(acc$$5, i$$50) {\n    build: while (true) {\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          const $acc$$5$$66 = acc$$5;\n          const $i$$50$$67 = i$$50;\n          acc$$5 = BigNatModule$$$add(BigNatModule$$$mul(ten, $acc$$5$$66), BigNatModule$$$embed(d$$7));\n          i$$50 = $i$$50$$67 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var x = this, Big = x.constructor, a = x.c, // dividend\n    b = (y = new Big(y)).c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var x = this, one = new x.constructor(1), y = one, isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, x = this, Big = x.constructor, s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, x = this, Big = x.constructor, xc = x.c, yc = (y = new Big(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, x.cmp(0) >= 0 ? 1 /* ROUND_HALF_UP */ : 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n","import { declare, Record } from \"../Types.js\";\nimport { type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n}, Record);\nexport function BigInteger$reflection() {\n  return type(\"BigInt.BigInteger\");\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$2;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 3;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 5;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 0;\n    } else {\n      $target$$2 = 9;\n    }\n  } else {\n    $target$$2 = 9;\n  }\n\n  switch ($target$$2) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$3;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 3;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 5;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 0;\n    } else {\n      $target$$3 = 9;\n    }\n  } else {\n    $target$$3 = 9;\n  }\n\n  switch ($target$$3) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$4;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 3;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 5;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 0;\n    } else {\n      $target$$4 = 9;\n    }\n  } else {\n    $target$$4 = 9;\n  }\n\n  switch ($target$$4) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n\n  if (obj instanceof BigInteger) {\n    const that = obj;\n    return BigInteger$$$op_Equality$$56F059C0(this$, that);\n  } else {\n    return false;\n  }\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    const i = matchValue$$4 | 0;\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(i), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$5;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 3;\n      } else {\n        $target$$5 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 0;\n      } else {\n        $target$$5 = 4;\n      }\n    } else {\n      $target$$5 = 4;\n    }\n\n    switch ($target$$5) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$6;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 3;\n      } else {\n        $target$$6 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 0;\n      } else {\n        $target$$6 = 4;\n      }\n    } else {\n      $target$$6 = 4;\n    }\n\n    switch ($target$$6) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$7;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 3;\n      } else {\n        $target$$7 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 0;\n      } else {\n        $target$$7 = 4;\n      }\n    } else {\n      $target$$7 = 4;\n    }\n\n    switch ($target$$7) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  return BigInteger$$$DivRem$$56F059C0(x$$16, y$$8)[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  return BigInteger$$$DivRem$$56F059C0(x$$17, y$$9)[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$8;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 3;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 7;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 0;\n    } else {\n      $target$$8 = 9;\n    }\n  } else {\n    $target$$8 = 9;\n  }\n\n  switch ($target$$8) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$9;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 3;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 7;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 9;\n    }\n  } else {\n    $target$$9 = 9;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    const that$$1 = obj$$1;\n    return BigInteger$$$compare$$56F059C0(this$$$1, that$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(fromInteger(i$$1, false, 6));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  const matchValue$$1 = [currByte, lowBitFound];\n\n  if (matchValue$$1[1]) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (matchValue$$1[0] === 0) {\n    return [0, false];\n  } else {\n    const firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, ofSeq(rangeNumber(0, 1, 7))) | 0;\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n\n    const loop = function loop(accumBytes, consumeValue, lowBitFound$$1) {\n      loop: while (true) {\n        if (consumeValue.CompareTo(zero) <= 0) {\n          const accumBytes$$1 = isPositive ? skipWhile(function predicate$$1(b) {\n            return b === 0;\n          }, accumBytes) : skipWhile(function predicate$$2(b$$1) {\n            return b$$1 === 255;\n          }, accumBytes);\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          return reverse(ofList(accumBytes$$2, Uint8Array), Uint8Array);\n        } else {\n          const currValue = toUInt32(BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32));\n\n          if (isPositive) {\n            const b0 = currValue & 0xFF;\n            const b1 = currValue >>> 8 & 0xFF;\n            const b2 = currValue >>> 16 & 0xFF;\n            const b3 = currValue >>> 24 & 0xFF;\n            const $accumBytes$$3 = accumBytes;\n            const $consumeValue$$4 = consumeValue;\n            accumBytes = new List(b3, new List(b2, new List(b1, new List(b0, $accumBytes$$3))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$4, 32);\n            lowBitFound$$1 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement(currValue >>> 8 & 0xFF, patternInput[1]);\n            const patternInput$$2 = flipTwosComplement(currValue >>> 16 & 0xFF, patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement(currValue >>> 24 & 0xFF, patternInput$$2[1]);\n            const $accumBytes$$5 = accumBytes;\n            const $consumeValue$$6 = consumeValue;\n            accumBytes = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], $accumBytes$$5))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$6, 32);\n            lowBitFound$$1 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1(accumUInt32, currIndex, bytesRemaining, lowBitFound$$6) {\n      loop$$1: while (true) {\n        if (bytesRemaining === 0) {\n          const value$$14 = fold(function folder(acc, value$$12) {\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), fromInt64(fromInteger(value$$12, false, 6)));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$7 = accumUInt32;\n            const $bytesRemaining$$9 = bytesRemaining;\n            const $currIndex$$8 = currIndex;\n            accumUInt32 = new List(value$$15, $accumUInt32$$7);\n            currIndex = $currIndex$$8 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$9 - bytesToProcess;\n            lowBitFound$$6 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$10 = accumUInt32;\n            const $bytesRemaining$$12 = bytesRemaining;\n            const $currIndex$$11 = currIndex;\n            accumUInt32 = new List(value$$16, $accumUInt32$$10);\n            currIndex = $currIndex$$11 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$12 - bytesToProcess;\n            lowBitFound$$6 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, padWithZeros } from \"./Util\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    return new Date(d.getTime() + d.offset).getUTCDate();\n}\nexport function hour(d) {\n    return new Date(d.getTime() + d.offset).getUTCHours();\n}\nexport function millisecond(d) {\n    return new Date(d.getTime() + d.offset).getUTCMilliseconds();\n}\nexport function minute(d) {\n    return new Date(d.getTime() + d.offset).getUTCMinutes();\n}\nexport function month(d) {\n    return new Date(d.getTime() + d.offset).getUTCMonth() + 1;\n}\nexport function second(d) {\n    return new Date(d.getTime() + d.offset).getUTCSeconds();\n}\nexport function year(d) {\n    return new Date(d.getTime() + d.offset).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    return new Date(d.getTime() + d.offset).getUTCDay();\n}\nexport function dayOfYear(d) {\n    const d2 = new Date(d.getTime() + d.offset);\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTimeOffset(d.getTime() + ts, d.offset);\n}\nexport function addDays(d, v) {\n    return DateTimeOffset(d.getTime() + v * 86400000, d.offset);\n}\nexport function addHours(d, v) {\n    return DateTimeOffset(d.getTime() + v * 3600000, d.offset);\n}\nexport function addMinutes(d, v) {\n    return DateTimeOffset(d.getTime() + v * 60000, d.offset);\n}\nexport function addSeconds(d, v) {\n    return DateTimeOffset(d.getTime() + v * 1000, d.offset);\n}\nexport function addMilliseconds(d, v) {\n    return DateTimeOffset(d.getTime() + v, d.offset);\n}\nexport function addYears(d, v) {\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), d.offset);\n}\nexport function addMonths(d, v) {\n    const d2 = new Date(d.getTime() + d.offset);\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), d.offset);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, d.offset)\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","\nnamespace Thoth.Json\n\n[<RequireQualifiedAccess>]\nmodule Decode =\n\n    open System.Globalization\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    module internal Helpers =\n        [<Emit(\"typeof $0\")>]\n        let jsTypeof (_ : JsonValue) : string = jsNative\n\n        [<Emit(\"$0 instanceof SyntaxError\")>]\n        let isSyntaxError (_ : JsonValue) : bool = jsNative\n\n        let inline getField (fieldName: string) (o: JsonValue) = o?(fieldName)\n        let inline isString (o: JsonValue) : bool = o :? string\n\n        let inline isBoolean (o: JsonValue) : bool = o :? bool\n\n        let inline isNumber (o: JsonValue) : bool = jsTypeof o = \"number\"\n\n        let inline isArray (o: JsonValue) : bool = JS.Array.isArray(o)\n\n        [<Emit(\"$0 === null ? false : (Object.getPrototypeOf($0 || false) === Object.prototype)\")>]\n        let isObject (_ : JsonValue) : bool = jsNative\n\n        let inline isNaN (o: JsonValue) : bool = JS.Number.isNaN(!!o)\n\n        let inline isNullValue (o: JsonValue): bool = isNull o\n\n        [<Emit(\"-2147483648 < $0 && $0 < 2147483647 && ($0 | 0) === $0\")>]\n        let isValidIntRange (_: JsonValue) : bool = jsNative\n\n        [<Emit(\"isFinite($0) && !($0 % 1)\")>]\n        let isIntFinite (_: JsonValue) : bool = jsNative\n\n        let isUndefined (o: JsonValue): bool = jsTypeof o = \"undefined\"\n\n        [<Emit(\"JSON.stringify($0, null, 4) + ''\")>]\n        let anyToString (_: JsonValue) : string = jsNative\n\n        let inline isFunction (o: JsonValue) : bool = jsTypeof o = \"function\"\n\n        let inline objectKeys (o: JsonValue) : string seq = upcast JS.Object.keys(o)\n        let inline asBool (o: JsonValue): bool = unbox o\n        let inline asInt (o: JsonValue): int = unbox o\n        let inline asFloat (o: JsonValue): float = unbox o\n        let inline asString (o: JsonValue): string = unbox o\n        let inline asArray (o: JsonValue): JsonValue[] = unbox o\n\n    let private genericMsg msg value newLine =\n        try\n            \"Expecting \"\n                + msg\n                + \" but instead got:\"\n                + (if newLine then \"\\n\" else \" \")\n                + (Helpers.anyToString value)\n        with\n            | _ ->\n                \"Expecting \"\n                + msg\n                + \" but decoder failed. Couldn't report given value due to circular structure.\"\n                + (if newLine then \"\\n\" else \" \")\n\n    let private errorToString (path : string, error) =\n        let reason =\n            match error with\n            | BadPrimitive (msg, value) ->\n                genericMsg msg value false\n            | BadType (msg, value) ->\n                genericMsg msg value true\n            | BadPrimitiveExtra (msg, value, reason) ->\n                genericMsg msg value false + \"\\nReason: \" + reason\n            | BadField (msg, value) ->\n                genericMsg msg value true\n            | BadPath (msg, value, fieldName) ->\n                genericMsg msg value true + (\"\\nNode `\" + fieldName + \"` is unkown.\")\n            | TooSmallArray (msg, value) ->\n                \"Expecting \" + msg + \".\\n\" + (Helpers.anyToString value)\n            | BadOneOf messages ->\n                \"The following errors were found:\\n\\n\" + String.concat \"\\n\\n\" messages\n            | FailMessage msg ->\n                \"The following `failure` occurred with the decoder: \" + msg\n\n        match error with\n        | BadOneOf _ ->\n            // Don't need to show the path here because each error case will show it's own path\n            reason\n        | _ ->\n            \"Error at: `\" + path + \"`\\n\" + reason\n\n    ///////////////\n    // Runners ///\n    /////////////\n\n    let fromValue (path : string) (decoder : Decoder<'T>) =\n        fun value ->\n            match decoder path value with\n            | Ok success ->\n                Ok success\n            | Error error ->\n                Error (errorToString error)\n\n    let fromString (decoder : Decoder<'T>) =\n        fun value ->\n            try\n                let json = JS.JSON.parse value\n                fromValue \"$\" decoder json\n            with\n                | ex when Helpers.isSyntaxError ex ->\n                    Error(\"Given an invalid JSON: \" + ex.Message)\n\n    let unsafeFromString (decoder : Decoder<'T>) =\n        fun value ->\n            match fromString decoder value with\n            | Ok x -> x\n            | Error msg -> failwith msg\n\n    [<System.Obsolete(\"Please use fromValue instead\")>]\n    let decodeValue (path : string) (decoder : Decoder<'T>) = fromValue path decoder\n\n    [<System.Obsolete(\"Please use fromString instead\")>]\n    let decodeString (decoder : Decoder<'T>) = fromString decoder\n\n    //////////////////\n    // Primitives ///\n    ////////////////\n\n    let string : Decoder<string> =\n        fun path value ->\n            if Helpers.isString value then\n                Ok(Helpers.asString value)\n            else\n                (path, BadPrimitive(\"a string\", value)) |> Error\n\n    let guid : Decoder<System.Guid> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.Guid.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a guid\", value)) |> Error\n            else (path, BadPrimitive(\"a guid\", value)) |> Error\n\n    let int : Decoder<int> =\n        fun path value ->\n            if Helpers.isNumber value then\n                if Helpers.isValidIntRange value then\n                    Ok(Helpers.asInt value)\n                else\n                    (path, BadPrimitiveExtra(\"an int\", value, \"Value was either too large or too small for an int\")) |> Error\n            elif Helpers.isString value then\n                match System.Int32.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an int\", value)) |> Error\n            else\n                (path, BadPrimitive(\"an int\", value)) |> Error\n\n\n    let int64 : Decoder<int64> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asInt value |> int64 |> Ok\n            elif Helpers.isString value then\n                match System.Int64.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an int64\", value)) |> Error\n            else (path, BadPrimitive(\"an int64\", value)) |> Error\n\n    let uint32 : Decoder<uint32> =\n        fun path value ->\n            if Helpers.isNumber value then\n                let x = Helpers.asFloat value\n                if x >= 0. && x <= (float System.UInt32.MaxValue) then\n                    Helpers.asInt value |> uint32 |> Ok\n                else\n                    (path, BadPrimitiveExtra(\"an uint32\", value, \"Value was either too large or too small for an uint32\")) |> Error\n            elif Helpers.isString value then\n                match System.UInt32.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an uint32\", value)) |> Error\n            else (path, BadPrimitive(\"an uint32\", value)) |> Error\n\n    let uint64 : Decoder<uint64> =\n        fun path value ->\n            if Helpers.isNumber value then\n                let x = Helpers.asFloat value\n                if x >= 0. && x <= (float System.UInt64.MaxValue) then\n                    Helpers.asInt value |> uint64 |> Ok\n                else\n                    (path, BadPrimitiveExtra(\"an uint64\", value, \"Value was either too large or too small for an uint64\")) |> Error\n            elif Helpers.isString value then\n                match System.UInt64.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an uint64\", value)) |> Error\n            else (path, BadPrimitive(\"an uint64\", value)) |> Error\n\n    let bigint : Decoder<bigint> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asInt value |> bigint |> Ok\n            elif Helpers.isString value then\n                // TODO: BigInt.TryParse has been added in Fable 2.1.4\n                // Don't use it for now to support lower Fable versions\n                try\n                    bigint.Parse (Helpers.asString value) |> Ok\n                with _ ->\n                    (path, BadPrimitive(\"a bigint\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a bigint\", value)) |> Error\n\n    let bool : Decoder<bool> =\n        fun path value ->\n            if Helpers.isBoolean value then\n                Ok(Helpers.asBool value)\n            else\n                (path, BadPrimitive(\"a boolean\", value)) |> Error\n\n    let float : Decoder<float> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Ok(Helpers.asFloat value)\n            else\n                (path, BadPrimitive(\"a float\", value)) |> Error\n\n    let decimal : Decoder<decimal> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asFloat value |> decimal |> Ok\n            elif Helpers.isString value then\n                match System.Decimal.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a decimal\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a decimal\", value)) |> Error\n\n    let datetime : Decoder<System.DateTime> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTime.TryParse (Helpers.asString value) with\n                | true, x -> x.ToUniversalTime() |> Ok\n                | _ -> (path, BadPrimitive(\"a datetime\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let datetimeOffset : Decoder<System.DateTimeOffset> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTimeOffset.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a datetimeoffset\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let timespan : Decoder<System.TimeSpan> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.TimeSpan.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a timespan\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a timespan\", value)) |> Error\n\n    /////////////////////////\n    // Object primitives ///\n    ///////////////////////\n\n    let private decodeMaybeNull path (decoder : Decoder<'T>) value =\n        // The decoder may be an option decoder so give it an opportunity to check null values\n        match decoder path value with\n        | Ok v -> Ok(Some v)\n        | Error _ when Helpers.isNullValue value -> Ok None\n        | Error er -> Error er\n\n    let optional (fieldName : string) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then Ok None\n                else decodeMaybeNull (path + \".\" + fieldName) decoder fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let private badPathError fieldNames currentPath value =\n        let currentPath = defaultArg currentPath (\"$\"::fieldNames |> String.concat \".\")\n        let msg = \"an object with path `\" + (String.concat \".\" fieldNames) + \"`\"\n        Error(currentPath, BadPath (msg, value, List.tryLast fieldNames |> Option.defaultValue \"\"))\n\n    let optionalAt (fieldNames : string list) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    if Helpers.isUndefined lastValue then Ok None\n                    else decodeMaybeNull lastPath decoder lastValue\n\n    let field (fieldName: string) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then\n                    Error(path, BadField (\"an object with a field named `\" + fieldName + \"`\", value))\n                else\n                    decoder (path + \".\" + fieldName) fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let at (fieldNames: string list) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        if Helpers.isUndefined curValue then\n                            let res = badPathError fieldNames None firstValue\n                            curPath, curValue, Some res\n                        else\n                            curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    decoder lastPath lastValue\n\n    let index (requestedIndex: int) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            let currentPath = path + \".[\" + (Operators.string requestedIndex) + \"]\"\n            if Helpers.isArray value then\n                let vArray = Helpers.asArray value\n                if requestedIndex < vArray.Length then\n                    decoder currentPath (vArray.[requestedIndex])\n                else\n                    let msg =\n                        \"a longer array. Need index `\"\n                            + (requestedIndex.ToString())\n                            + \"` but there are only `\"\n                            + (vArray.Length.ToString())\n                            + \"` entries\"\n\n                    (currentPath, TooSmallArray(msg, value))\n                    |> Error\n            else\n                (currentPath, BadPrimitive(\"an array\", value))\n                |> Error\n\n    let option (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isNullValue value then Ok None\n            else decoder path value |> Result.map Some\n\n    //////////////////////\n    // Data structure ///\n    ////////////////////\n\n    let list (decoder : Decoder<'value>) : Decoder<'value list> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                (Ok [], tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> Ok (value::acc))\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"a list\", value))\n                |> Error\n\n    let array (decoder : Decoder<'value>) : Decoder<'value array> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                let arr = Array.zeroCreate tokens.Length\n                (Ok arr, tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> acc.[i] <- value; Ok acc)\n            else\n                (path, BadPrimitive (\"an array\", value))\n                |> Error\n\n    let keyValuePairs (decoder : Decoder<'value>) : Decoder<(string * 'value) list> =\n        fun path value ->\n            if Helpers.isObject value then\n                (Ok [], Helpers.objectKeys value) ||> Seq.fold (fun acc prop ->\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match Helpers.getField prop value |> decoder path with\n                        | Error er -> Error er\n                        | Ok value -> (prop, value)::acc |> Ok)\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"an object\", value))\n                |> Error\n\n    //////////////////////////////\n    // Inconsistent Structure ///\n    ////////////////////////////\n\n    let oneOf (decoders : Decoder<'value> list) : Decoder<'value> =\n        fun path value ->\n            let rec runner (decoders : Decoder<'value> list) (errors : string list) =\n                match decoders with\n                | head::tail ->\n                    match fromValue path head value with\n                    | Ok v ->\n                        Ok v\n                    | Error error -> runner tail (errors @ [error])\n                | [] -> (path, BadOneOf errors) |> Error\n\n            runner decoders []\n\n    //////////////////////\n    // Fancy decoding ///\n    ////////////////////\n\n    let nil (output : 'a) : Decoder<'a> =\n        fun path value ->\n            if Helpers.isNullValue value then\n                Ok output\n            else\n                (path, BadPrimitive(\"null\", value)) |> Error\n\n    let value _ v = Ok v\n\n    let succeed (output : 'a) : Decoder<'a> =\n        fun _ _ ->\n            Ok output\n\n    let fail (msg: string) : Decoder<'a> =\n        fun path _ ->\n            (path, FailMessage msg) |> Error\n\n    let andThen (cb: 'a -> Decoder<'b>) (decoder : Decoder<'a>) : Decoder<'b> =\n        fun path value ->\n            match decoder path value with\n            | Error error -> Error error\n            | Ok result -> cb result path value\n\n    /////////////////////\n    // Map functions ///\n    ///////////////////\n\n    let map\n        (ctor : 'a -> 'value)\n        (d1 : Decoder<'a>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value with\n            | Ok v1 -> Ok (ctor v1)\n            | Error er -> Error er\n\n    let map2\n        (ctor : 'a -> 'b -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value with\n            | Ok v1, Ok v2 -> Ok (ctor v1 v2)\n            | Error er,_ -> Error er\n            | _,Error er -> Error er\n\n    let map3\n        (ctor : 'a -> 'b -> 'c -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value with\n            | Ok v1, Ok v2, Ok v3 -> Ok (ctor v1 v2 v3)\n            | Error er,_,_ -> Error er\n            | _,Error er,_ -> Error er\n            | _,_,Error er -> Error er\n\n    let map4\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4 -> Ok (ctor v1 v2 v3 v4)\n            | Error er,_,_,_ -> Error er\n            | _,Error er,_,_ -> Error er\n            | _,_,Error er,_ -> Error er\n            | _,_,_,Error er -> Error er\n\n    let map5\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5 -> Ok (ctor v1 v2 v3 v4 v5)\n            | Error er,_,_,_,_ -> Error er\n            | _,Error er,_,_,_ -> Error er\n            | _,_,Error er,_,_ -> Error er\n            | _,_,_,Error er,_ -> Error er\n            | _,_,_,_,Error er -> Error er\n\n    let map6\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6 -> Ok (ctor v1 v2 v3 v4 v5 v6)\n            | Error er,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_ -> Error er\n            | _,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,Error er -> Error er\n\n    let map7\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7)\n            | Error er,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,Error er -> Error er\n\n    let map8\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>)\n        (d8 : Decoder<'h>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value, d8 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7, Ok v8 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7 v8)\n            | Error er,_,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,_,Error er -> Error er\n\n    let dict (decoder : Decoder<'value>) : Decoder<Map<string, 'value>> =\n        map Map.ofList (keyValuePairs decoder)\n\n    //////////////////////\n    // Object builder ///\n    ////////////////////\n\n    type IRequiredGetter =\n        abstract Field : string -> Decoder<'a> -> 'a\n        abstract At : List<string> -> Decoder<'a> -> 'a\n        abstract Raw : Decoder<'a> -> 'a\n\n    type IOptionalGetter =\n        abstract Field : string -> Decoder<'a> -> 'a option\n        abstract At : List<string> -> Decoder<'a> -> 'a option\n        abstract Raw : Decoder<'a> -> 'a option\n\n    type IGetters =\n        abstract Required: IRequiredGetter\n        abstract Optional: IOptionalGetter\n\n    let private unwrapWith (errors: ResizeArray<DecoderError>) path (decoder: Decoder<'T>) value: 'T =\n        match decoder path value with\n        | Ok v -> v\n        | Error er -> errors.Add(er); Unchecked.defaultof<'T>\n\n    type Getters<'T>(path: string, v: 'T) =\n        let mutable errors = ResizeArray<DecoderError>()\n        let required =\n            { new IRequiredGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (field fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (at fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    unwrapWith errors path decoder v }\n        let optional =\n            { new IOptionalGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optional fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optionalAt fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    match decoder path v with\n                    | Ok v -> Some v\n                    | Error((_, reason) as error) ->\n                        match reason with\n                        | BadPrimitive(_,v)\n                        | BadPrimitiveExtra(_,v,_)\n                        | BadType(_,v) ->\n                            if Helpers.isNullValue v then None\n                            else errors.Add(error); Unchecked.defaultof<_>\n                        | BadField _\n                        | BadPath _ -> None\n                        | TooSmallArray _\n                        | FailMessage _\n                        | BadOneOf _ -> errors.Add(error); Unchecked.defaultof<_> }\n        member __.Errors: _ list = Seq.toList errors\n        interface IGetters with\n            member __.Required = required\n            member __.Optional = optional\n\n    let object (builder: IGetters -> 'value) : Decoder<'value> =\n        fun path v ->\n            let getters = Getters(path, v)\n            let result = builder getters\n            match getters.Errors with\n            | [] -> Ok result\n            | fst::_ as errors ->\n                if errors.Length > 1 then\n                    let errors = List.map errorToString errors\n                    (path, BadOneOf errors) |> Error\n                else\n                    Error fst\n\n    ///////////////////////\n    // Tuples decoders ///\n    ////////////////////\n\n    let tuple2 (decoder1: Decoder<'T1>) (decoder2: Decoder<'T2>) : Decoder<'T1 * 'T2> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                succeed (v1, v2)\n            )\n        )\n\n    let tuple3 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>) : Decoder<'T1 * 'T2 * 'T3> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    succeed (v1, v2, v3)\n                )\n            )\n        )\n\n    let tuple4 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>) : Decoder<'T1 * 'T2 * 'T3 * 'T4> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        succeed (v1, v2, v3, v4)\n                    )\n                )\n            )\n        )\n\n    let tuple5 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            succeed (v1, v2, v3, v4, v5)\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple6 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                succeed (v1, v2, v3, v4, v5, v6)\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple7 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    succeed (v1, v2, v3, v4, v5, v6, v7)\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple8 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>)\n               (decoder8: Decoder<'T8>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    index 7 decoder8\n                                    |> andThen (fun v8 ->\n                                        succeed (v1, v2, v3, v4, v5, v6, v7, v8)\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    //////////////////\n    // Reflection ///\n    ////////////////\n\n    open FSharp.Reflection\n\n    // As generics are erased by Fable, let's just do an unsafe cast for performance\n    let inline boxDecoder (d: Decoder<'T>): BoxedDecoder =\n        !!d // d >> Result.map box\n\n    let inline unboxDecoder (d: BoxedDecoder): Decoder<'T> =\n        !!d // d >> Result.map unbox\n\n    // This is used to force Fable use a generic comparer for map keys\n    let private toMap<'key, 'value when 'key: comparison> (xs: ('key*'value) seq) = Map.ofSeq xs\n    let private toSet<'key when 'key: comparison> (xs: 'key seq) = Set.ofSeq xs\n\n    let private autoObject (decoderInfos: (string * BoxedDecoder)[]) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (decoderInfos, Ok []) ||> Array.foldBack (fun (name, decoder) acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result ->\n                    Helpers.getField name value\n                    |> decoder (path + \".\" + name)\n                    |> Result.map (fun v -> v::result))\n\n    let private autoObject2 (keyDecoder: BoxedDecoder) (valueDecoder: BoxedDecoder) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (Ok [], Helpers.objectKeys(value)) ||> Seq.fold (fun acc name ->\n                match acc with\n                | Error _ -> acc\n                | Ok acc ->\n                    match keyDecoder path name with\n                    | Error er -> Error er\n                    | Ok k ->\n                        Helpers.getField name value\n                        |> valueDecoder (path + \".\" + name)\n                        |> function\n                            | Error er -> Error er\n                            | Ok v -> (k,v)::acc |> Ok)\n\n    let private mixedArray msg (decoders: BoxedDecoder[]) (path: string) (values: JsonValue[]): Result<JsonValue list, DecoderError> =\n        if decoders.Length <> values.Length then\n            (path, sprintf \"Expected %i %s but got %i\" decoders.Length msg values.Length\n            |> FailMessage) |> Error\n        else\n            (values, decoders, Ok [])\n            |||> Array.foldBack2 (fun value decoder acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result -> decoder path value |> Result.map (fun v -> v::result))\n\n    let rec private makeUnion extra isCamelCase t name (path : string) (values: JsonValue[]) =\n        let uci =\n            FSharpType.GetUnionCases(t, allowAccessToPrivateRepresentation=true)\n            |> Array.tryFind (fun x -> x.Name = name)\n        match uci with\n        | None -> (path, FailMessage(\"Cannot find case \" + name + \" in \" + t.FullName)) |> Error\n        | Some uci ->\n            if values.Length = 0 then\n                FSharpValue.MakeUnion(uci, [||], allowAccessToPrivateRepresentation=true) |> Ok\n            else\n                let decoders = uci.GetFields() |> Array.map (fun fi -> autoDecoder extra isCamelCase false fi.PropertyType)\n                mixedArray \"union fields\" decoders path values\n                |> Result.map (fun values -> FSharpValue.MakeUnion(uci, List.toArray values, allowAccessToPrivateRepresentation=true))\n\n    and private autoDecodeRecordsAndUnions extra (isCamelCase : bool) (isOptional : bool) (t: System.Type) : BoxedDecoder =\n        // Add the decoder to extra in case one of the fields is recursive\n        let decoderRef = ref Unchecked.defaultof<_>\n        let extra = extra |> Map.add t.FullName decoderRef\n        let decoder =\n            if FSharpType.IsRecord(t, allowAccessToPrivateRepresentation=true) then\n                let decoders =\n                    FSharpType.GetRecordFields(t, allowAccessToPrivateRepresentation=true)\n                    |> Array.map (fun fi ->\n                        let name =\n                            if isCamelCase then fi.Name.[..0].ToLowerInvariant() + fi.Name.[1..]\n                            else fi.Name\n                        name, autoDecoder extra isCamelCase false fi.PropertyType)\n                fun path value ->\n                    autoObject decoders path value\n                    |> Result.map (fun xs -> FSharpValue.MakeRecord(t, List.toArray xs, allowAccessToPrivateRepresentation=true))\n\n            elif FSharpType.IsUnion(t, allowAccessToPrivateRepresentation=true) then\n                fun path (value: JsonValue) ->\n                    if Helpers.isString(value) then\n                        let name = Helpers.asString value\n                        makeUnion extra isCamelCase t name path [||]\n                    elif Helpers.isArray(value) then\n                        let values = Helpers.asArray value\n                        let name = Helpers.asString values.[0]\n                        makeUnion extra isCamelCase t name path values.[1..]\n                    else (path, BadPrimitive(\"a string or array\", value)) |> Error\n\n            else\n                if isOptional then\n                    // The error will only happen at runtime if the value is not null\n                    // See https://github.com/MangelMaxime/Thoth/pull/84#issuecomment-444837773\n                    boxDecoder(fun path value -> Error(path, BadType(\"an extra coder for \" + t.FullName, value)))\n                else\n                    // Don't use failwithf here, for some reason F#/Fable compiles it as a function\n                    // when the return type is a function too, so it doesn't fail immediately\n                    sprintf \"Cannot generate auto decoder for %s. Please pass an extra decoder.\" t.FullName |> failwith\n        decoderRef := decoder\n        decoder\n\n    and private autoDecoder (extra: Map<string, ref<BoxedDecoder>>) isCamelCase (isOptional : bool) (t: System.Type) : BoxedDecoder =\n      let fullname = t.FullName\n      match Map.tryFind fullname extra with\n      | Some decoderRef -> fun path value -> decoderRef.contents path value\n      | None ->\n        if t.IsArray then\n            let decoder = t.GetElementType() |> autoDecoder extra isCamelCase false\n            array decoder |> boxDecoder\n        elif t.IsGenericType then\n            if FSharpType.IsTuple(t) then\n                let decoders = FSharpType.GetTupleElements(t) |> Array.map (autoDecoder extra isCamelCase false)\n                fun path value ->\n                    if Helpers.isArray value then\n                        mixedArray \"tuple elements\" decoders path (Helpers.asArray value)\n                        |> Result.map (fun xs -> FSharpValue.MakeTuple(List.toArray xs, t))\n                    else (path, BadPrimitive (\"an array\", value)) |> Error\n            else\n                let fullname = t.GetGenericTypeDefinition().FullName\n                if fullname = typedefof<obj option>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra isCamelCase true) |> option |> boxDecoder\n                elif fullname = typedefof<obj list>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra isCamelCase false) |> list |> boxDecoder\n                elif fullname = typedefof< Map<string, obj> >.FullName then\n                    let keyDecoder = t.GenericTypeArguments.[0] |> autoDecoder extra isCamelCase false\n                    let valueDecoder = t.GenericTypeArguments.[1] |> autoDecoder extra isCamelCase false\n                    oneOf [\n                        autoObject2 keyDecoder valueDecoder\n                        list (tuple2 keyDecoder valueDecoder)\n                    ] |> map (fun ar -> toMap (unbox ar) |> box)\n                elif fullname = typedefof< Set<string> >.FullName then\n                    let decoder = t.GenericTypeArguments.[0] |> autoDecoder extra isCamelCase false\n                    fun path value ->\n                        match array decoder path value with\n                        | Error er -> Error er\n                        | Ok ar -> toSet (unbox ar) |> box |> Ok\n                else\n                    autoDecodeRecordsAndUnions extra isCamelCase isOptional t\n        else\n            if fullname = typeof<bool>.FullName then\n                boxDecoder bool\n            elif fullname = typeof<string>.FullName then\n                boxDecoder string\n            elif fullname = typeof<int>.FullName then\n                boxDecoder int\n            elif fullname = typeof<uint32>.FullName then\n                boxDecoder uint32\n            elif fullname = typeof<float>.FullName then\n                boxDecoder float\n            // These number types require extra libraries in Fable. To prevent penalizing\n            // all users, extra decoders (withInt64, etc) must be passed when they're needed.\n\n            // elif fullname = typeof<int64>.FullName then\n            //     boxDecoder int64\n            // elif fullname = typeof<uint64>.FullName then\n            //     boxDecoder uint64\n            // elif fullname = typeof<bigint>.FullName then\n            //     boxDecoder bigint\n            // elif fullname = typeof<decimal>.FullName then\n            //     boxDecoder decimal\n            elif fullname = typeof<System.DateTime>.FullName then\n                boxDecoder datetime\n            elif fullname = typeof<System.DateTimeOffset>.FullName then\n                boxDecoder datetimeOffset\n            elif fullname = typeof<System.TimeSpan>.FullName then\n                boxDecoder timespan\n            elif fullname = typeof<System.Guid>.FullName then\n                boxDecoder guid\n            elif fullname = typeof<obj>.FullName then\n                fun _ v -> Ok v\n            else autoDecodeRecordsAndUnions extra isCamelCase isOptional t\n\n    let private makeExtra (extra: ExtraCoders option) =\n        match extra with\n        | None -> Map.empty\n        | Some e -> Map.map (fun _ (_,dec) -> ref dec) e\n\n    type Auto =\n        /// ATTENTION: Use this only when other arguments (isCamelCase, extra) don't change\n        static member generateDecoderCached<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let t = Util.resolveType resolver\n            Util.CachedDecoders.GetOrAdd(t.FullName, fun _ ->\n                let isCamelCase = defaultArg isCamelCase false\n                autoDecoder (makeExtra extra) isCamelCase false t) |> unboxDecoder\n\n        static member generateDecoder<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let isCamelCase = defaultArg isCamelCase false\n            Util.resolveType resolver\n            |> autoDecoder (makeExtra extra) isCamelCase false |> unboxDecoder\n\n        static member fromString<'T>(json: string, ?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Result<'T, string> =\n            let decoder = Auto.generateDecoder(?isCamelCase=isCamelCase, ?extra=extra, ?resolver=resolver)\n            fromString decoder json\n\n        static member unsafeFromString<'T>(json: string, ?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): 'T =\n            let decoder = Auto.generateDecoder(?isCamelCase=isCamelCase, ?extra=extra, ?resolver=resolver)\n            match fromString decoder json with\n            | Ok x -> x\n            | Error msg -> failwith msg\n","namespace Thoth.Json\n\n[<RequireQualifiedAccess>]\nmodule Encode =\n\n    open System.Collections.Generic\n    open System.Globalization\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    [<Emit(\"Array.from($0)\")>]\n    let private arrayFrom(x: JsonValue seq): JsonValue = jsNative\n\n    ///**Description**\n    /// Encode a string\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `string`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline string (value : string) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode a GUID\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `System.Guid`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let guid (value : System.Guid) : JsonValue =\n        box (value.ToString())\n\n    ///**Description**\n    /// Encode an int\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `int`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline int (value : int) : JsonValue =\n        box value\n\n    let inline uint32 (value : uint32) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode a Float. `Infinity` and `NaN` are encoded as `null`.\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `float`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline float (value : float) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode a Decimal. (Currently decimal gets converted to float.)\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `decimal`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let decimal (value : decimal) : JsonValue =\n        value.ToString() |> string\n\n    ///**Description**\n    /// Encode null\n    ///\n    ///**Parameters**\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let nil : JsonValue =\n        box null\n\n    ///**Description**\n    /// Encode a bool\n    ///**Parameters**\n    ///  * `value` - parameter of type `bool`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline bool (value : bool) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode an object\n    ///\n    ///**Parameters**\n    ///  * `values` - parameter of type `(string * Value) list`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let object (values : (string * JsonValue) seq) : JsonValue =\n        let o = obj()\n        for (key, value) in values do\n            o?(key) <- value\n        box o\n\n    ///**Description**\n    /// Encode an array\n    ///\n    ///**Parameters**\n    ///  * `values` - parameter of type `Value array`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline array (values : JsonValue array) : JsonValue =\n        box values\n\n    ///**Description**\n    /// Encode a list\n    ///**Parameters**\n    ///  * `values` - parameter of type `Value list`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let list (values : JsonValue list) : JsonValue =\n        // Don't use List.toArray as it may create a typed array\n        arrayFrom values\n\n    let seq (values : JsonValue seq) : JsonValue =\n        arrayFrom values\n\n    ///**Description**\n    /// Encode a dictionary\n    ///**Parameters**\n    ///  * `values` - parameter of type `Map<string, Value>`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let dict (values : Map<string, JsonValue>) : JsonValue =\n        values\n        |> Map.toList\n        |> object\n\n    let bigint (value : bigint) : JsonValue =\n        box (value.ToString())\n\n    let datetimeOffset (value : System.DateTimeOffset) : JsonValue =\n        value.ToString(\"O\", CultureInfo.InvariantCulture) |> string\n\n    /// **Description**\n    /// Encode a timespan\n    /// **Parameters**\n    ///   * `value` - parameter of type `System.TimeSpan`\n    ///\n    /// **Output Type**\n    ///   * `Value`\n    ///\n    /// **Exceptions**\n    ///\n    let timespan (value : System.TimeSpan) : JsonValue =\n        value.ToString() |> string\n\n    let int64 (value : int64) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let uint64 (value : uint64) : JsonValue =\n        box (value.ToString())\n\n    let tuple2\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (v1, v2) : JsonValue =\n        box [| enc1 v1\n               enc2 v2 |]\n\n    let tuple3\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (v1, v2, v3) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3 |]\n\n    let tuple4\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (v1, v2, v3, v4) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4 |]\n\n    let tuple5\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (v1, v2, v3, v4, v5) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5 |]\n\n    let tuple6\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (v1, v2, v3, v4, v5, v6) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6 |]\n\n    let tuple7\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (enc7 : Encoder<'T7>)\n            (v1, v2, v3, v4, v5, v6, v7) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6\n               enc7 v7 |]\n\n    let tuple8\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (enc7 : Encoder<'T7>)\n            (enc8 : Encoder<'T8>)\n            (v1, v2, v3, v4, v5, v6, v7, v8) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6\n               enc7 v7\n               enc8 v8 |]\n\n    /// **Description**\n    ///\n    /// **Parameters**\n    ///   * `value` - parameter of type `System.DateTime`\n    ///\n    /// **Output Type**\n    ///   * `Value`\n    ///\n    /// **Exceptions**\n    ///\n    let datetime (value : System.DateTime) : JsonValue =\n        value.ToString(\"O\", CultureInfo.InvariantCulture) |> string\n\n    ///**Description**\n    /// Convert a `Value` into a prettified string.\n    ///**Parameters**\n    ///  * `space` - parameter of type `int` - Amount of indentation\n    ///  * `value` - parameter of type `obj` - Value to convert\n    ///\n    ///**Output Type**\n    ///  * `string`\n    ///\n    ///**Exceptions**\n    ///\n    let toString (space: int) (value: JsonValue) : string =\n        JS.JSON.stringify(value, !!null, space)\n\n    ///**Description**\n    /// Encode an option\n    ///**Parameters**\n    ///  * `encoder` - parameter of type `'a -> Value`\n    ///\n    ///**Output Type**\n    ///  * `'a option -> Value`\n    ///\n    ///**Exceptions**\n    ///\n    let option (encoder : 'a -> JsonValue) =\n        Option.map encoder >> Option.defaultWith (fun _ -> nil)\n\n    //////////////////\n    // Reflection ///\n    ////////////////\n\n    open FSharp.Reflection\n    open Fable.Core.DynamicExtensions\n\n    // As generics are erased by Fable, let's just do an unsafe cast for performance\n    let inline boxEncoder (d: Encoder<'T>): BoxedEncoder =\n        !!d\n\n    let inline unboxEncoder (d: BoxedEncoder): Encoder<'T> =\n        !!d\n\n    let rec private autoEncodeRecordsAndUnions extra (isCamelCase : bool) (t: System.Type) : BoxedEncoder =\n        // Add the encoder to extra in case one of the fields is recursive\n        let encoderRef = ref Unchecked.defaultof<_>\n        let extra = extra |> Map.add t.FullName encoderRef\n        let encoder =\n            if FSharpType.IsRecord(t, allowAccessToPrivateRepresentation=true) then\n                let setters =\n                    FSharpType.GetRecordFields(t, allowAccessToPrivateRepresentation=true)\n                    |> Array.map (fun fi ->\n                        let targetKey =\n                            if isCamelCase then fi.Name.[..0].ToLowerInvariant() + fi.Name.[1..]\n                            else fi.Name\n                        let encode = autoEncoder extra isCamelCase fi.PropertyType\n                        fun (source: obj) (target: JsonValue) ->\n                            let value = FSharpValue.GetRecordField(source, fi)\n                            if not(isNull value) then // Discard null fields\n                                target.[targetKey] <- encode value\n                            target)\n                fun (source: obj) ->\n                    (JsonValue(), setters) ||> Seq.fold (fun target set -> set source target)\n            elif FSharpType.IsUnion(t, allowAccessToPrivateRepresentation=true) then\n                fun (value: obj) ->\n                    let info, fields = FSharpValue.GetUnionFields(value, t, allowAccessToPrivateRepresentation=true)\n                    match fields.Length with\n                    | 0 -> string info.Name\n                    | len ->\n                        let fieldTypes = info.GetFields()\n                        let target = Array.zeroCreate<JsonValue> (len + 1)\n                        target.[0] <- string info.Name\n                        for i = 1 to len do\n                            let encode = autoEncoder extra isCamelCase fieldTypes.[i-1].PropertyType\n                            target.[i] <- encode fields.[i-1]\n                        array target\n            else\n                // Don't use failwithf here, for some reason F#/Fable compiles it as a function\n                // when the return type is a function too, so it doesn't fail immediately\n                sprintf \"Cannot generate auto encoder for %s. Please pass an extra encoder.\" t.FullName\n                |> failwith\n        encoderRef := encoder\n        encoder\n\n    and private autoEncoder (extra: Map<string, ref<BoxedEncoder>>) isCamelCase (t: System.Type) : BoxedEncoder =\n      let fullname = t.FullName\n      match Map.tryFind fullname extra with\n      | Some encoderRef -> fun v -> encoderRef.contents v\n      | None ->\n        if t.IsArray then\n            let encoder = t.GetElementType() |> autoEncoder extra isCamelCase\n            fun (value: obj) ->\n                value :?> obj seq |> Seq.map encoder |> seq\n        elif t.IsGenericType then\n            if FSharpType.IsTuple(t) then\n                let encoders =\n                    FSharpType.GetTupleElements(t)\n                    |> Array.map (autoEncoder extra isCamelCase)\n                fun (value: obj) ->\n                    FSharpValue.GetTupleFields(value)\n                    |> Seq.mapi (fun i x -> encoders.[i] x) |> seq\n            else\n                let fullname = t.GetGenericTypeDefinition().FullName\n                if fullname = typedefof<obj option>.FullName then\n                    // Evaluate lazily so we don't need to generate the encoder for null values\n                    let encoder = lazy\n                                    t.GenericTypeArguments.[0]\n                                    |> autoEncoder extra isCamelCase\n                                    |> option\n                                    |> boxEncoder\n                    boxEncoder(fun (value: obj) ->\n                        if isNull value then nil\n                        else encoder.Value value)\n                elif fullname = typedefof<obj list>.FullName\n                    || fullname = typedefof<Set<string>>.FullName then\n                    let encoder = t.GenericTypeArguments.[0] |> autoEncoder extra isCamelCase\n                    fun (value: obj) ->\n                        value :?> obj seq |> Seq.map encoder |> seq\n                elif fullname = typedefof< Map<string, obj> >.FullName then\n                    let keyType = t.GenericTypeArguments.[0]\n                    let valueEncoder = t.GenericTypeArguments.[1] |> autoEncoder extra isCamelCase\n                    if keyType.FullName = typeof<string>.FullName\n                        || keyType.FullName = typeof<System.Guid>.FullName then\n                        fun value ->\n                            // Fable compiles Guids as strings so this works, but maybe we should make the conversion explicit\n                            // (see dotnet version) in case Fable implementation of Guids change\n                            (JsonValue(), value :?> Map<string, obj>)\n                            ||> Seq.fold (fun target (KeyValue(k,v)) ->\n                                target.[k] <- valueEncoder v\n                                target)\n                    else\n                        let keyEncoder = keyType |> autoEncoder extra isCamelCase\n                        fun value ->\n                            value :?> Map<string, obj> |> Seq.map (fun (KeyValue(k,v)) ->\n                                array [|keyEncoder k; valueEncoder v|]) |> seq\n                else\n                    autoEncodeRecordsAndUnions extra isCamelCase t\n        else\n            if fullname = typeof<bool>.FullName then\n                boxEncoder bool\n            elif fullname = typeof<string>.FullName then\n                boxEncoder string\n            elif fullname = typeof<int>.FullName then\n                boxEncoder int\n            elif fullname = typeof<uint32>.FullName then\n                boxEncoder uint32\n            elif fullname = typeof<float>.FullName then\n                boxEncoder float\n            // These number types require extra libraries in Fable. To prevent penalizing\n            // all users, extra encoders (withInt64, etc) must be passed when they're needed.\n\n            // elif fullname = typeof<int64>.FullName then\n            //     boxEncoder int64\n            // elif fullname = typeof<uint64>.FullName then\n            //     boxEncoder uint64\n            // elif fullname = typeof<bigint>.FullName then\n            //     boxEncoder bigint\n            // elif fullname = typeof<decimal>.FullName then\n            //     boxEncoder decimal\n            elif fullname = typeof<System.DateTime>.FullName then\n                boxEncoder datetime\n            elif fullname = typeof<System.DateTimeOffset>.FullName then\n                boxEncoder datetimeOffset\n            elif fullname = typeof<System.TimeSpan>.FullName then\n                boxEncoder timespan\n            elif fullname = typeof<System.Guid>.FullName then\n                boxEncoder guid\n            elif fullname = typeof<obj>.FullName then\n                boxEncoder id\n            else\n                autoEncodeRecordsAndUnions extra isCamelCase t\n\n    let private makeExtra (extra: ExtraCoders option) =\n        match extra with\n        | None -> Map.empty\n        | Some e -> Map.map (fun _ (enc,_) -> ref enc) e\n\n    type Auto =\n        /// ATTENTION: Use this only when other arguments (isCamelCase, extra) don't change\n        static member generateEncoderCached<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Encoder<'T> =\n            let t = Util.resolveType resolver\n            Util.CachedEncoders.GetOrAdd(t.FullName, fun _ ->\n                let isCamelCase = defaultArg isCamelCase false\n                autoEncoder (makeExtra extra) isCamelCase t) |> unboxEncoder\n\n        static member generateEncoder<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Encoder<'T> =\n            let isCamelCase = defaultArg isCamelCase false\n            Util.resolveType resolver\n            |> autoEncoder (makeExtra extra) isCamelCase |> unboxEncoder\n\n        static member toString(space : int, value : 'T, ?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>) : string =\n            let encoder = Auto.generateEncoder(?isCamelCase=isCamelCase, ?extra=extra, ?resolver=resolver)\n            encoder value |> toString space\n\n    ///**Description**\n    /// Convert a `Value` into a prettified string.\n    ///**Parameters**\n    ///  * `space` - parameter of type `int` - Amount of indentation\n    ///  * `value` - parameter of type `obj` - Value to convert\n    ///\n    ///**Output Type**\n    ///  * `string`\n    ///\n    ///**Exceptions**\n    ///\n    [<System.Obsolete(\"Please use toString instead\")>]\n    let encode (space: int) (value: JsonValue) : string = toString space value\n","module Twitcher.Commands\n\nopen Twitcher.Domain\nopen Twitcher.Model\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\nopen System.Net.Http\nopen System\nopen Fable\nopen Fetch\n\n\n// TODO: Change this to OpenAPI type provider when implemented\n\nlet getYamlAttribute name (text: string []) =\n  let result =\n    text\n    |> Array.filter (fun line -> line.Trim().StartsWith (name + \":\"))\n    |> Array.exactlyOne\n  result.Remove(0,result.IndexOf \":\" + 1)\n  |> fun s -> s.Replace(\"\\\"\",\"\").Trim()\n\n\nlet decodeConfig (alltext: string) =\n  let text = alltext.Split '\\n'\n  {\n    Host = getYamlAttribute \"host\" text //\"host.docker.internal\" //\n    Port = getYamlAttribute \"port\" text\n    Api_path = getYamlAttribute \"api_path\" text\n    Api_version = getYamlAttribute \"api_version\" text\n    Simulator = getYamlAttribute \"simulator\" text\n    Bluesky_simulator = getYamlAttribute \"bluesky_simulator\" text\n    College_simulator = getYamlAttribute \"college_simulator\" text\n    Status_code_aircraft_id_not_found = getYamlAttribute \"status_code_aircraft_id_not_found\" text\n    Endpoint_reset_simulation = getYamlAttribute \"endpoint_reset_simulation\" text\n    Endpoint_pause_simulation = getYamlAttribute \"endpoint_pause_simulation\" text\n    Endpoint_resume_simulation = getYamlAttribute \"endpoint_resume_simulation\" text\n    Endpoint_set_simulation_rate_multiplier = getYamlAttribute \"endpoint_set_simulation_rate_multiplier\" text\n    Endpoint_load_scenario = getYamlAttribute \"endpoint_load_scenario\" text\n    Endpoint_create_aircraft = getYamlAttribute \"endpoint_create_aircraft\" text\n    Endpoint_aircraft_position = getYamlAttribute \"endpoint_aircraft_position\" text\n    Endpoint_change_altitude = getYamlAttribute \"endpoint_change_altitude\" text\n    Endpoint_change_heading = getYamlAttribute \"endpoint_change_heading\" text\n    Endpoint_change_speed = getYamlAttribute \"endpoint_change_speed\" text\n    Endpoint_change_vertical_speed = getYamlAttribute \"endpoint_change_vertical_speed\" text\n    Query_aircraft_id = getYamlAttribute \"query_aircraft_id\" text\n    Aircraft_type = getYamlAttribute \"aircraft_type\" text\n    Latitude = getYamlAttribute \"latitude\" text\n    Longitude = getYamlAttribute \"longitude\" text\n    Altitude = getYamlAttribute \"altitude\" text\n    Ground_speed = getYamlAttribute \"ground_speed\" text\n    Simulator_time = getYamlAttribute \"simulator_time\" text\n    Vertical_speed = getYamlAttribute \"vertical_speed\" text\n    Feet_altitude_upper_limit = getYamlAttribute \"feet_altitude_upper_limit\" text |> int\n    Flight_level_lower_limit = getYamlAttribute \"flight_level_lower_limit\" text |> int\n}\n\n\nlet configFile = \"assets/api-config.yaml\"\nlet getConfig () =\n  promise {\n    let url = configFile\n    let! res = Fetch.fetch url []\n    let! txt = res.text()\n    return decodeConfig txt\n  }\n\nlet getConfigCmd () =\n  Cmd.OfPromise.either getConfig () Config ConnectionError\n\n\nlet urlBase config =\n  [\"http://\" + config.Host + \":\" + config.Port;\n   config.Api_path\n   config.Api_version ] |> String.concat \"/\"\n\nlet urlAircraftPosition (config: Configuration) =\n  [urlBase config\n   config.Endpoint_aircraft_position ]\n  |> String.concat \"/\"\n\nlet pingBluebird config =\n  promise {\n      let url = urlAircraftPosition config + \"?acid=all\"\n\n      try\n        let! res = Fetch.fetch url [ RequestProperties.Method HttpMethod.GET ]\n        match res.Status with\n          | 200 | 400 -> return true\n          | _ -> return false\n      with e ->\n          if e.Message.StartsWith(\"400\") then\n            return true\n          else\n            return false\n  }\n\nlet pingBluebirdCmd config =\n  Cmd.OfPromise.either pingBluebird config ConnectionActive ConnectionError\n\n// ===============================================================\n// Aircraft position\n\n\ntype JsonPositionInfo = {\n    actype: string\n    alt: float<m>\n    gs: float<m/s>\n    lat: float<latitude>\n    lon: float<longitude>\n    vs: float<m/s>\n}\n\nlet positionDecoder = Decode.Auto.generateDecoder<obj>()\n\nlet parseAircraftInfo id info =\n    {\n      AircraftID = id\n      Time = None\n      Type = Some info.actype\n      Position = {\n        Altitude = info.alt |> Conversions.Altitude.m2ft\n        Coordinates = {\n          Latitude = info.lat\n          Longitude = info.lon\n        }\n      }\n      GroundSpeed = info.gs |> Conversions.Speed.ms2knot |> Some\n      VerticalSpeed = info.vs |> Conversions.Speed.ms2fm |> Some\n      CalibratedAirSpeed = None\n      Heading = None\n    }\n\nlet parseAllPositions (data: Microsoft.FSharp.Collections.Map<string, obj>) =\n  data\n  |> Collections.Map.toArray\n  |> Array.filter (fun (key, info) -> key <> \"sim_t\")\n  |> Array.map (fun (acid, info) -> parseAircraftInfo acid (info :?> JsonPositionInfo))\n\nlet getAllPositions config =\n  promise {\n      let url =\n        urlAircraftPosition config + \"?acid=all\"\n      let! res = Fetch.fetch url [ RequestProperties.Method HttpMethod.GET ]\n\n      match res.Status with\n      | 400 ->\n        Fable.Core.JS.console.log(\"No aircraft in simulation\")\n        return [||], TimeSpan.FromSeconds 0.0\n      | 200 ->\n        let! txt = res.text()\n\n        let decodeTime = Decode.field \"sim_t\" (Decode.int)\n        let resultTime = Decode.fromString decodeTime txt   // TODO\n\n        let resultPosition = Decode.fromString (Decode.dict positionDecoder) txt\n        let result = Decode.fromString (Decode.dict positionDecoder) txt\n\n        match result, resultTime with\n        | Ok values, Ok elapsed ->\n            return parseAllPositions values, TimeSpan.FromSeconds(float elapsed)\n        | Error err, _ | _, Error err ->\n            Fable.Core.JS.console.log(\"Error getting aircraft positions: \" + err)\n            return [||], TimeSpan.FromSeconds(0.0)\n      | _ ->\n        Fable.Core.JS.console.log(\"Cannot get aircraft positions, return code \" + string res.Status)\n        return [||], TimeSpan.FromSeconds(0.0)\n  }\n\nlet getAllPositionsCmd config  =\n  Cmd.OfPromise.either getAllPositions config FetchedAllPositions ConnectionError\n\n// ===============================================================\n// Get single aircraft's position\n\n\nlet getAircraftPosition (config, aircraftID) =\n  promise {\n      let url =\n        urlAircraftPosition config + \"?acid=\" + aircraftID\n\n      let! res = Fetch.fetch url [RequestProperties.Method HttpMethod.POST]\n      let! txt = res.text()\n      match Decode.fromString (Decode.dict positionDecoder) txt with\n      | Ok value -> return Some(parseAllPositions value |> Array.exactlyOne)\n      | Error err -> return None\n  }\n\nlet getAircraftPositionCmd config aircraftID =\n  Cmd.OfPromise.either getAircraftPosition (config, aircraftID) FetchedPosition ConnectionError\n\n// ===============================================================\n// Load scenario\n\nlet urlLoadScenario (config: Configuration) =\n  [ urlBase config\n    config.Endpoint_load_scenario ]\n  |> String.concat \"/\"\n\nlet loadScenario (config, path) =\n  promise {\n      let url = urlLoadScenario config\n      let body = Encode.toString 0 (Encode.object [ \"filename\", Encode.string path ])\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return \"Scenario loaded\"\n      | 400 -> return \"Invalid filename\"\n      | 500 -> return \"Scenario not found\"\n      | _ -> return response.StatusText\n  }\n\nlet loadScenarioCmd config path =\n  Cmd.OfPromise.either loadScenario (config, path) LoadedScenario ConnectionError\n\n// ===============================================================\n// Reset simulator\n\nlet urlReset config =\n  [ urlBase config\n    config.Endpoint_reset_simulation ]\n  |> String.concat \"/\"\n\nlet resetSimulator config =\n  promise {\n      let url = urlReset config\n      let! response =  Fetch.fetch url [RequestProperties.Method HttpMethod.POST]\n      match response.Status with\n      | 200 -> return true\n      | _ -> return false\n  }\n\nlet resetSimulatorCmd config =\n  Cmd.OfPromise.either resetSimulator config ResetedSimulator ConnectionError\n\n// ===============================================================\n// Pause simulation\n\nlet urlPause config = [ urlBase config; config.Endpoint_pause_simulation ] |> String.concat \"/\"\n\nlet pauseSimulation config =\n  promise {\n      let url = urlPause config\n      let! response =  Fetch.fetch url [RequestProperties.Method HttpMethod.POST]\n      match response.Status with\n      | 200 -> return true\n      | _ -> return false\n  }\n\nlet pauseSimulationCmd config =\n  Cmd.OfPromise.either pauseSimulation config PausedSimulation ConnectionError\n\n\n// ===============================================================\n// Resume simulation\n\nlet urlResume config = [ urlBase config; config.Endpoint_resume_simulation ] |> String.concat \"/\"\n\nlet resumeSimulation config =\n  promise {\n      let url = urlResume config\n      let! response =  Fetch.fetch url [RequestProperties.Method HttpMethod.POST]\n      match response.Status with\n      | 200 -> return true\n      | _ -> return false\n  }\n\nlet resumeSimulationCmd config =\n  Cmd.OfPromise.either resumeSimulation config ResumedSimulation ConnectionError\n\n//===============================================================\n// Change simulation speed (simulation rate multiplier)\n\nlet changeSimulationSpeed (config, rate) =\n  promise {\n      let url = [ urlBase config; config.Endpoint_set_simulation_rate_multiplier ] |> String.concat \"/\"\n      let body =\n        Encode.object [ yield! [\"multiplier\", Encode.float rate] ]\n        |> Encode.toString 0\n\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return Some rate\n      | 400 ->\n          Fable.Core.JS.console.log(\"Rate multiplier was invalid\")\n          return None\n      | 500 ->\n          Fable.Core.JS.console.log(\"Could not change the rate multiplier: \" + response.StatusText)\n          return None\n      | _ -> return None\n  }\n\nlet changeSimulationRateMultiplierCmd config rate =\n  Cmd.OfPromise.either changeSimulationSpeed (config, rate) ChangedSimulationRateMultiplier ConnectionError\n\n// ===============================================================\n// Create aircraft\n\nlet urlCreateAircraft (config: Configuration) =\n  [ urlBase config\n    config.Endpoint_create_aircraft ]\n  |> String.concat \"/\"\n\n\nlet encodeAircraftInfo a =\n  let aircraft =\n    Encode.object\n      [ \"acid\", Encode.string a.AircraftID\n        \"type\", Encode.string a.Type.Value\n        \"alt\", Encode.float (float a.Position.Altitude)\n        \"lat\", Encode.float (float a.Position.Coordinates.Latitude)\n        \"lon\", Encode.float (float a.Position.Coordinates.Longitude)\n        \"hdg\", Encode.float a.Heading.Value\n        \"spd\", match a.CalibratedAirSpeed with\n                | Some(cas) -> Encode.float (float cas)\n                | None -> failwith \"Cannot create aircraft\"\n      ]\n  Encode.toString 0 aircraft\n\nlet createAircraft (config, aircraftData: AircraftInfo) =\n  promise {\n      let url = urlCreateAircraft config\n      let body = encodeAircraftInfo aircraftData\n      Fable.Core.JS.console.log(body)\n\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return \"Aircraft created\"\n      | 400 -> return \"Aircraft already exists\"\n      | 500 -> return \"Aircraft could not be created: \" + response.StatusText\n      | _ -> return response.StatusText\n  }\n\nlet createAircraftCmd config aircraftData =\n  Cmd.OfPromise.either createAircraft (config, aircraftData) CreatedAircraft ConnectionError\n\n// ===============================================================\n// Change altitude\n\nlet urlChangeAltitude (config: Configuration) =\n  [ urlBase config\n    config.Endpoint_change_altitude ]\n  |> String.concat \"/\"\n\nlet encodeChangeAltitude aircraftID altitude verticalSpeed =\n  let aircraft =\n    Encode.object\n      [ yield! [\"acid\", Encode.string aircraftID]\n        yield! [\"alt\", Encode.float (float altitude)]\n        yield! [\n           match verticalSpeed with\n           | Some vs -> yield \"vspd\", Encode.float vs\n           | None -> () ]\n      ]\n  Encode.toString 0 aircraft\n\nlet changeAltitude (config, aircraftID, requestedAltitude, verticalSpeed) =\n  promise {\n      let url = urlChangeAltitude config\n      let body = encodeChangeAltitude aircraftID requestedAltitude verticalSpeed\n      Fable.Core.JS.console.log(body)\n\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return \"Command accepted, altitude changed\"\n      | 400 -> return \"Aircraft ID was invalid\"\n      | 500 -> return \"Aircraft not found \" + response.StatusText\n      | _ -> return response.StatusText\n  }\n\nlet changeAltitudeCmd config aircraftID (requestedAltitude: Altitude) verticalSpeed =\n  Cmd.OfPromise.either changeAltitude (config, aircraftID, requestedAltitude, verticalSpeed)\n    ChangedAltitude ConnectionError\n\n// ===============================================================\n// Change speed\n\nlet urlChangeSpeed (config: Configuration) =\n  [ urlBase config\n    config.Endpoint_change_speed ]\n  |> String.concat \"/\"\n\nlet encodeChangeSpeed aircraftID (speed: Speed) =\n  let aircraft =\n    Encode.object\n      [ \"acid\", Encode.string aircraftID\n        \"spd\", Encode.float (float speed)\n      ]\n  Encode.toString 0 aircraft\n\nlet changeSpeed (config, aircraftID, cas) =\n  promise {\n      let url = urlChangeSpeed config\n      let body = encodeChangeSpeed aircraftID cas\n\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return \"Command accepted, speed changed\"\n      | 400 -> return \"Aircraft ID was invalid\"\n      | 500 -> return \"Aircraft not found \" + response.StatusText\n      | _ -> return response.StatusText\n  }\n\nlet changeSpeedCmd config aircraftID calibratedAirSpeed =\n  Cmd.OfPromise.either changeSpeed (config, aircraftID, calibratedAirSpeed)\n    ChangedSpeed ConnectionError\n\n// ===============================================================\n// Change heading\n\nlet urlChangeHeading (config: Configuration) =\n  [ urlBase config\n    config.Endpoint_change_heading ]\n  |> String.concat \"/\"\n\nlet encodeChangeHeading (aircraftID: AircraftID) (heading: Heading) =\n  let aircraft =\n    Encode.object\n      [ \"acid\", Encode.string aircraftID\n        \"hdg\", Encode.float (float heading)\n      ]\n  Encode.toString 0 aircraft\n\nlet changeHeading (config, aircraftID, heading) =\n  promise {\n      let url = urlChangeHeading config\n      let body = encodeChangeHeading aircraftID heading\n\n      let props =\n          [ RequestProperties.Method HttpMethod.POST\n            Fetch.requestHeaders [ HttpRequestHeaders.ContentType \"application/json\" ]\n            RequestProperties.Body !^body\n            ]\n\n      let! response =  Fetch.fetch url props\n      match response.Status with\n      | 200 -> return \"Command accepted, heading changed\"\n      | 400 -> return \"Aircraft ID was invalid\"\n      | 500 -> return \"Aircraft not found \" + response.StatusText\n      | _ -> return response.StatusText\n  }\n\nlet changeHeadingCmd config aircraftID heading =\n  Fable.Core.JS.console.log(\"here\")\n  Cmd.OfPromise.either changeHeading (config, aircraftID, heading)\n    ChangedHeading ConnectionError\n\n//=================================================================\n\n\nlet sectorDecoder = Decode.Auto.generateDecoder<Coordinates list>()\n\n\nlet getSectorOutline() =\n  promise {\n    let url = \"assets/nats-sector.json\"\n    try\n      let! res = Fetch.fetch url []\n      let! txt = res.text()\n      match Decode.fromString sectorDecoder txt with\n      | Ok value -> return Some(value)\n      | Error err ->\n          Fable.Core.JS.console.log(err)\n          return None\n    with ex ->\n      Fable.Core.JS.console.log(ex)\n\n      // get a default sector\n      let urlDefault = \"assets/default-sector.json\"\n      let! resDefault = Fetch.fetch urlDefault []\n      let! txt = resDefault.text()\n      match Decode.fromString sectorDecoder txt with\n      | Ok value -> return Some(value)\n      | Error err ->\n          Fable.Core.JS.console.log(err)\n          return None\n  }\n\n\n/// Fetch sector outline\nlet getSectorOutlineCmd() =\n  Cmd.OfPromise.either getSectorOutline () SectorOutline ErrorMessage\n","module Twitcher.Update\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\nopen Twitcher\nopen Twitcher.Domain\nopen Twitcher.Model\nopen Twitcher.CoordinateSystem\nopen Twitcher.Commands\nopen Fable\n\nopen System.Collections.Generic\n\n\nlet delayMsg _ =\n  promise {\n    do! Promise.sleep 1000\n    return ()\n  }\n\nlet simulationViewWidth() =\n  Browser.Dom.window.document.getElementById(\"simulation-viewer\").clientWidth\n\nlet historyLength = 10000\nlet historyInterval = 10\n\nlet updateSingleHistory (positionHistory: Dictionary<AircraftID, Position []>) (aircraft: AircraftInfo) =\n  if positionHistory.ContainsKey aircraft.AircraftID then\n    let lastItem = positionHistory.[aircraft.AircraftID].[positionHistory.[aircraft.AircraftID].Length-1]\n    positionHistory.[aircraft.AircraftID] <-\n        if true then //positionHistory.[aircraft.AircraftID].Length < historyLength then\n          Array.append\n            positionHistory.[aircraft.AircraftID]\n            [|aircraft.Position|]\n        else\n          Array.append\n            positionHistory.[aircraft.AircraftID].[1..]\n            [| aircraft.Position |]\n  else\n    positionHistory.[aircraft.AircraftID] <- [| aircraft.Position|]\n  positionHistory\n\nlet updateHistory (counter: int, positionHistory: Dictionary<AircraftID, Position []>) (positionInfo: AircraftInfo []) =\n  if counter = historyInterval || counter = 0 then\n    positionInfo\n    |> Array.iter (fun aircraft -> updateSingleHistory positionHistory aircraft |> ignore)\n    (1, positionHistory)\n  else\n    (counter + 1, positionHistory)\n\nlet estimateHeading (model: Model) (aircraftID: AircraftID) =\n  let currentPosition =\n    model.Positions\n    |> List.find (fun pos -> pos.AircraftID = aircraftID)\n    |> fun info -> info.Position\n  if (snd model.PositionHistory).ContainsKey aircraftID then\n    let lastPosition =\n      let history =\n        (snd model.PositionHistory).[aircraftID]\n      if history.Length >= 1 then\n        let pos = history.[history.Length-1]\n        if pos <> currentPosition then Some pos\n        else None\n      else None\n\n    match lastPosition with\n    | None -> None\n    | Some position ->\n        clockwiseAngle position currentPosition |> Some\n  else None\n\nlet checkLossOfSeparation viewSize (positionInfo: AircraftInfo []) =\n  let onScreen =\n    positionInfo\n    |> Array.filter (fun pos -> \n        CoordinateSystem.isInViewSector \n          (pos.Position.Coordinates.Longitude, \n           pos.Position.Coordinates.Latitude,\n           pos.Position.Altitude) viewSize)\n\n  [| for i1 in 0..onScreen.Length-1 do\n      for i2 in i1+1..onScreen.Length-1 do\n        if onScreen.[i1] <> onScreen.[i2] &&\n           abs(onScreen.[i1].Position.Altitude - onScreen.[i2].Position.Altitude) <= 1000.<ft> &&\n           (greatCircleDistance onScreen.[i1].Position onScreen.[i2].Position) <= (5.<nm> |> Conversions.Distance.nm2m)\n        then\n          yield  onScreen.[i1].AircraftID\n          yield onScreen.[i2].AircraftID |]\n\nlet rescaleVisualisationToSector sv =\n  let sectorViewRatio = \n    let width = abs(fst sv.SectorDisplayArea.BottomLeft - fst sv.SectorDisplayArea.TopRight)\n    let height = abs(snd sv.SectorDisplayArea.BottomLeft - snd sv.SectorDisplayArea.TopRight)\n    height/width\n\n  printfn \"Sector view ratio: %f\" sectorViewRatio\n\n  let sv' = \n    let x,y = sv.VisualisationViewSize\n    { sv with VisualisationViewSize = x, x*sectorViewRatio }\n  sv'\n\nlet inSector (sector : SectorDisplayAreaMercator) (position: Position) =\n  let x,y = CoordinateSystem.Mercator.lonLatToXY (float position.Coordinates.Longitude) (float position.Coordinates.Latitude)\n  let x1,y1 = sector.BottomLeft\n  let x2,y2 = sector.TopRight\n  x >= x1 && x <= x2 && y >= y1 && y <= y2          \n\n\nlet update (msg:Msg) (model:Model) : Model * Cmd<Msg> =\n    match msg with\n    | Init ->\n        model,\n        Cmd.batch [\n          getConfigCmd()\n          Cmd.ofMsg GetSimulationViewSize\n        ]\n\n    | LoadSector ->\n        model,\n        getSectorOutlineCmd()\n\n    | SectorOutline outline ->\n        // TODO: fix this\n        //{ model with Sector = outline},\n        model,\n        Cmd.none\n\n    | ConnectionActive result ->\n        if result then\n          { model with State = Connected }, Cmd.none\n        else\n          { model with State = ConnectionFailed}, Cmd.none\n\n    | Config config ->\n       { model with Config = Some config },\n       pingBluebirdCmd config\n\n    | GetSimulationViewSize ->\n        let viewWidth = simulationViewWidth()\n        let x,y = model.SectorView.VisualisationViewSize\n\n        { model with\n            SectorView = { model.SectorView with VisualisationViewSize = viewWidth, y } |> rescaleVisualisationToSector\n            SeparationDistance =\n              let x1, y1 = rescaleSectorToView TopDown calibrationPoint1 model.SectorView\n              let x2, y2 = rescaleSectorToView TopDown calibrationPoint2 model.SectorView\n              Some(y1 - y2)\n          },\n        Cmd.none\n\n    | ChangeDisplay sectorDisplay ->\n        { model with SectorDisplay = sectorDisplay },\n        Cmd.none        \n\n    | ViewAircraftDetails aircraftID ->\n        { model with ViewDetails = Some(aircraftID) }, Cmd.none\n\n    | CloseAircraftDetails ->\n        { model with ViewDetails = None }, Cmd.none\n\n    | GetAllPositions ->\n        match model.Config with\n        | None ->\n            Fable.Core.JS.console.log(\"No configuration found\")\n            model, Cmd.none\n        | Some config ->\n            model,\n            getAllPositionsCmd config\n\n    | GetPosition aircraftID ->\n        match model.Config with\n        | None ->\n            Fable.Core.JS.console.log(\"No configuration found\")\n            model, Cmd.none\n        | Some config ->\n            model,\n            getAircraftPositionCmd config aircraftID\n\n    | FetchedAllPositions (positionInfo, elapsed) ->\n        let aircraftInView = \n          positionInfo\n          |> Array.filter (fun ac ->\n              inSector model.SectorView.SectorDisplayArea ac.Position \n          )\n\n        let newModel =\n          { model with Positions = aircraftInView |> List.ofArray }\n\n        { newModel with\n            Positions =\n              newModel.Positions\n              |> List.map (fun ac ->\n                  { ac with Heading = estimateHeading newModel ac.AircraftID})\n            PositionHistory = updateHistory model.PositionHistory aircraftInView\n            InConflict = checkLossOfSeparation model.SectorView aircraftInView\n            SimulationTime = elapsed } ,\n        Cmd.none\n\n    | FetchedPosition positionInfo ->\n        match positionInfo with\n        | Some position ->\n          Fable.Core.JS.console.log(position)\n        | None ->\n          Fable.Core.JS.console.log(\"Aircraft not found\")\n\n        model,\n        Cmd.none\n\n    | ShowLoadScenarioForm ->\n        let f, cmd = ScenarioForm.init()\n        { model with FormModel = Some (LoadScenarioForm(f)) },\n            Cmd.batch [\n              Cmd.map LoadScenarioMsg cmd\n            ]\n\n    | LoadScenario path ->\n        { model with\n              State = Connected\n              FormModel = None\n              ViewDetails = None\n              PositionHistory = 0, (Dictionary<AircraftID, Position []>())\n              Positions = []\n              InConflict = [||] },\n        loadScenarioCmd model.Config.Value path\n\n    | LoadedScenario response ->\n        // pause the scenario\n        { model with\n            State = ActiveSimulation Playing },\n        pauseSimulationCmd model.Config.Value\n\n    | ResetSimulator ->\n        model,\n        Cmd.batch [\n          resetSimulatorCmd model.Config.Value\n          Cmd.ofMsg CloseAircraftDetails\n        ]\n\n    | ResetedSimulator result ->\n        if not result then\n          Fable.Core.JS.console.log(\"Failed to reset the simulator\")\n          model, Cmd.none\n        else\n          { model with\n              State = Connected\n              FormModel = None\n              ViewDetails = None\n              PositionHistory = 0, (Dictionary<AircraftID, Position []>())\n              Positions = []\n              InConflict = [||]\n           }, Cmd.none\n\n    | PauseSimulation ->\n        model, pauseSimulationCmd model.Config.Value\n\n    | PausedSimulation result ->\n        if not result then\n          Fable.Core.JS.console.log(\"Failed to pause the simulation\")\n          model, Cmd.none\n        else\n          { model with State = ActiveSimulation Paused; SimulationSpeed = 1.0 }, Cmd.ofMsg StopAnimation\n\n    | ResumeSimulation ->\n        model, resumeSimulationCmd model.Config.Value\n\n    | ResumedSimulation result ->\n        if not result then\n          Fable.Core.JS.console.log(\"Failed to resume the simulation\")\n          model, Cmd.none\n        else\n          { model with State = ActiveSimulation Playing; SimulationSpeed = 1.0 }, Cmd.ofMsg StartAnimation\n\n    | SetSimulationRateMultiplier rt ->\n        model, changeSimulationRateMultiplierCmd model.Config.Value rt\n\n    | ChangedSimulationRateMultiplier result ->\n        match result with\n        | None ->\n          Fable.Core.JS.console.log(\"Failed to change simulation rate multiplier\")\n          model, Cmd.none\n        | Some rt ->\n          { model with SimulationSpeed = rt }, Cmd.none\n\n    | Observe ->\n        { model with\n              FormModel = None\n              ViewDetails = None\n              PositionHistory = 0, (Dictionary<AircraftID, Position []>())\n              Positions = []\n              InConflict = [||]\n              State = ActiveSimulation Observing },\n        Cmd.ofMsg StartAnimation\n\n    | StopObserving ->\n        { model with State = Connected },\n        Cmd.ofMsg StopAnimation\n\n    | CreateAircraft aircraftInfo ->\n        model, createAircraftCmd model.Config.Value aircraftInfo\n\n    | CreatedAircraft result ->\n        Fable.Core.JS.console.log(result)\n        model, Cmd.none\n\n    | ChangeAltitude (aircraftID, requestedAltitude, verticalSpeed) ->\n        model, changeAltitudeCmd model.Config.Value aircraftID requestedAltitude verticalSpeed\n\n    | ChangedAltitude result ->\n        Fable.Core.JS.console.log(result)\n        model, Cmd.none\n\n    | ChangeHeading (aircraftID, requestedHeading) ->\n        model, changeHeadingCmd model.Config.Value aircraftID requestedHeading\n\n    | ChangedHeading result ->\n        Fable.Core.JS.console.log(result)\n        model, Cmd.none\n\n    | ChangeSpeed (aircraftID, speed) ->\n        model, changeSpeedCmd model.Config.Value aircraftID speed\n    | ChangedSpeed result ->\n        Fable.Core.JS.console.log(result)\n        model, Cmd.none\n\n    | ChangeVerticalSpeed (aircraftID, verticalSpeed) -> model, Cmd.none\n    | ChangedVerticalSpeed  -> model, Cmd.none\n\n\n    | ConnectionError exn | ErrorMessage exn ->\n        Fable.Core.JS.console.error(exn)\n        model,\n        Cmd.none\n\n    | MakeStep _ ->\n        if model.Animate then\n          model,\n          Cmd.batch [\n           getAllPositionsCmd model.Config.Value\n           Cmd.OfPromise.either delayMsg () MakeStep ErrorMessage\n           Cmd.ofMsg GetSimulationViewSize\n\n          ]\n        else\n          model,\n          Cmd.none\n\n    | StartAnimation ->\n        { model with Animate = true }, Cmd.ofMsg (MakeStep())\n\n    | StopAnimation ->\n        { model with Animate = false }, Cmd.none\n\n    | ShowCreateAircraftForm ->\n        let f, cmd = AircraftForm.init()\n        { model with FormModel = Some (CreateAircraftForm(f)) },\n            Cmd.batch [\n              Cmd.map CreateAircraftMsg cmd\n            ]\n\n    | ShowChangeAltitudeForm aircraft ->\n        let f, cmd = AltitudeForm.init(aircraft.AircraftID, aircraft.Position.Altitude)\n        { model with FormModel = Some (ChangeAltitudeForm(f)) },\n            Cmd.batch [\n              Cmd.map ChangeAltitudeMsg cmd\n            ]\n\n    | ShowChangeSpeedForm aircraft ->\n        let f, cmd = SpeedForm.init(aircraft.AircraftID, aircraft.GroundSpeed)\n        { model with FormModel = Some (ChangeSpeedForm(f)) },\n            Cmd.batch [\n              Cmd.map ChangeSpeedMsg cmd\n            ]\n\n    | ShowChangeHeadingForm aircraft ->\n        let f, cmd = HeadingForm.init(aircraft.AircraftID, aircraft.Heading)\n        { model with FormModel = Some (ChangeHeadingForm(f)) },\n            Cmd.batch [\n              Cmd.map ChangeHeadingMsg cmd\n            ]\n\n    | CreateAircraftMsg m ->\n      match model.FormModel with\n\n      | Some(CreateAircraftForm f) ->\n          let f', cmd, externalMsg = AircraftForm.update m f\n\n          match externalMsg with\n          | AircraftForm.ExternalMsg.Submit info ->\n              { model with FormModel = None },\n              Cmd.batch [\n                Cmd.ofMsg (CreateAircraft info)\n              ]\n\n          | AircraftForm.ExternalMsg.NoOp ->\n              { model with FormModel = Some (CreateAircraftForm(f')) },\n              Cmd.map CreateAircraftMsg cmd\n\n          | AircraftForm.ExternalMsg.Cancel ->\n              { model with FormModel = None },\n              Cmd.none\n\n      | None | Some _ ->\n          let f, cmd = AircraftForm.init()\n          { model with FormModel = Some (CreateAircraftForm(f)) },\n              Cmd.batch [\n                Cmd.map CreateAircraftMsg cmd\n                Cmd.ofMsg (CreateAircraftMsg m) // initialized, resend\n              ]\n\n    | ChangeAltitudeMsg m ->\n      match model.FormModel with\n\n      | Some(ChangeAltitudeForm f) ->\n          let f', cmd, externalMsg = AltitudeForm.update m f\n\n          match externalMsg with\n          | AltitudeForm.ExternalMsg.Submit(acid,alt,vs) ->\n              { model with FormModel = None },\n              Cmd.batch [\n                Cmd.ofMsg (ChangeAltitude (acid,alt,vs))\n              ]\n\n          | AltitudeForm.ExternalMsg.NoOp ->\n              { model with FormModel = Some (ChangeAltitudeForm(f')) },\n              Cmd.map ChangeAltitudeMsg cmd\n\n          | AltitudeForm.ExternalMsg.Cancel ->\n              { model with FormModel = None },\n              Cmd.none\n\n      | None | Some _ ->\n          Fable.Core.JS.console.log(\"Error - incorrect form model\")\n          { model with FormModel = None }, Cmd.none\n\n    | ChangeSpeedMsg m ->\n      match model.FormModel with\n\n      | Some(ChangeSpeedForm f) ->\n          let f', cmd, externalMsg = SpeedForm.update m f\n\n          match externalMsg with\n          | SpeedForm.ExternalMsg.Submit(acid,cas) ->\n              { model with FormModel = None },\n              Cmd.batch [\n                Cmd.ofMsg (ChangeSpeed (acid,cas))\n              ]\n\n          | SpeedForm.ExternalMsg.NoOp ->\n              { model with FormModel = Some (ChangeSpeedForm(f')) },\n              Cmd.map ChangeSpeedMsg cmd\n\n          | SpeedForm.ExternalMsg.Cancel ->\n              { model with FormModel = None },\n              Cmd.none\n\n      | None | Some _ ->\n          Fable.Core.JS.console.log(\"Error - incorrect form model\")\n          { model with FormModel = None }, Cmd.none\n\n\n    | ChangeHeadingMsg m ->\n      match model.FormModel with\n\n      | Some(ChangeHeadingForm f) ->\n          let f', cmd, externalMsg = HeadingForm.update m f\n\n          match externalMsg with\n          | HeadingForm.ExternalMsg.Submit(acid,heading) ->\n              { model with FormModel = None },\n              Cmd.batch [\n                Cmd.ofMsg (ChangeHeading (acid,heading))\n              ]\n\n          | HeadingForm.ExternalMsg.NoOp ->\n              { model with FormModel = Some (ChangeHeadingForm(f')) },\n              Cmd.map ChangeHeadingMsg cmd\n\n          | HeadingForm.ExternalMsg.Cancel ->\n              { model with FormModel = None },\n              Cmd.none\n\n      | None | Some _ ->\n          Fable.Core.JS.console.log(\"Error - incorrect form model\")\n          { model with FormModel = None }, Cmd.none\n\n    | LoadScenarioMsg m ->\n      match model.FormModel with\n\n      | Some(LoadScenarioForm f) ->\n          let f', cmd, externalMsg = ScenarioForm.update m f\n\n          match externalMsg with\n          | ScenarioForm.ExternalMsg.Submit(path) ->\n              { model with FormModel = None },\n              Cmd.batch [\n                Cmd.ofMsg (LoadScenario path)\n              ]\n\n          | ScenarioForm.ExternalMsg.NoOp ->\n              { model with FormModel = Some (LoadScenarioForm(f')) },\n              Cmd.map ChangeHeadingMsg cmd\n\n          | ScenarioForm.ExternalMsg.Cancel ->\n              { model with FormModel = None },\n              Cmd.none\n\n      | None | Some _ ->\n          Fable.Core.JS.console.log(\"Error - incorrect form model\")\n          { model with FormModel = None }, Cmd.none\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Navbar =\n\n    type Option =\n        | Color of IColor\n        /// Add `has-shadow` class\n        | [<CompiledName(\"has-shadow\")>] HasShadow\n        /// Add `is-transparent` class\n        | [<CompiledName(\"is-transparent\")>] IsTransparent\n        /// Add `is-fixed-top` class\n        /// You also need to add `has-navbar-fixed-top` to your html tag\n        | [<CompiledName(\"is-fixed-top\")>] IsFixedTop\n        /// Add `is-fixed-bottom` class\n        /// You also need to add `has-navbar-fixed-bottom` to your html tag\n        | [<CompiledName(\"is-fixed-bottom\")>] IsFixedBottom\n        /// Add `is-spaced` class\n        /// Increases horizontal and vertical padding of the navbar\n        | [<CompiledName(\"is-spaced\")>] IsSpaced\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    module Menu =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    module Item =\n\n        type Option =\n            /// Add `is-tab` class\n            | [<CompiledName(\"is-tab\")>] IsTab\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-hoverable` class\n            | [<CompiledName(\"is-hoverable\")>] IsHoverable\n            /// Add `has-dropdown` class\n            | [<CompiledName(\"has-dropdown\")>] HasDropdown\n            /// Add `is-expanded` class\n            | [<CompiledName(\"is-expanded\")>] IsExpanded\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal item element options children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsExpanded\n                | IsTab\n                | IsHoverable\n                | HasDropdown -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-item\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-item\"></div>\n        let div x y = item div x y\n        /// Generate <a class=\"navbar-item\"></a>\n        let a x y = item a x y\n\n    module Link =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-arrowless`\n            | [<CompiledName(\"is-arrowless\")>] IsArrowless\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal link element (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsArrowless -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-link\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-link\"></div>\n        let div x y = link div x y\n        /// Generate <a class=\"navbar-link\"></a>\n        let a x y = link a x y\n\n    module Dropdown =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-boxed` class\n            | [<CompiledName(\"is-boxed\")>] IsBoxed\n            /// Add `is-right` class\n            | [<CompiledName(\"is-right\")>] IsRight\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal dropdown element (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsBoxed\n                | IsRight -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-dropdown\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-dropdown\"></div>\n        let div x y = dropdown div x y\n        /// Generate <a class=\"navbar-dropdown\"></a>\n        let a x y = dropdown a x y\n\n    module Brand =\n        let internal brand element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-brand\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-brand\"></div>\n        let div x y = brand div x y\n        /// Generate <a class=\"navbar-brand\"></a>\n        let a x y = brand a x y\n\n    module Start =\n        let internal start element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-start\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-start\"></div>\n        let div x y = start div x y\n        /// Generate <a class=\"navbar-start\"></a>\n        let a x y = start a x y\n\n    module End =\n        let internal ``end`` element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-end\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-end\"></div>\n        let div x y = ``end`` div x y\n        /// Generate <a class=\"navbar-end\"></a>\n        let a x y = ``end`` a x y\n\n    /// Generate <nav class=\"navbar\"></nav>\n    let navbar (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | HasShadow\n            | IsFixedTop\n            | IsFixedBottom\n            | IsTransparent\n            | IsSpaced -> result.AddCaseName option\n            | Color color -> ofColor color |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"navbar\").ToReactElement(nav, children)\n\n    /// Generate <div class=\"navbar-menu\"></div>\n    let menu options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Menu.IsActive state -> if state then result.AddCaseName option else result\n            | Menu.Props props -> result.AddProps props\n            | Menu.CustomClass customClass -> result.AddClass customClass\n            | Menu.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"navbar-menu\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-burger\"></div>\n    let burger (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-burger\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-content\"></div>\n    let content (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-content\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-divider\"></div>\n    let divider (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-divider\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Columns =\n\n    type ISize =\n        | [<CompiledName(\"is-1\")>] Is1\n        | [<CompiledName(\"is-2\")>] Is2\n        | [<CompiledName(\"is-3\")>] Is3\n        | [<CompiledName(\"is-4\")>] Is4\n        | [<CompiledName(\"is-5\")>] Is5\n        | [<CompiledName(\"is-6\")>] Is6\n        | [<CompiledName(\"is-7\")>] Is7\n        | [<CompiledName(\"is-8\")>] Is8\n\n        static member ToString (x : ISize)=\n            Reflection.getCaseName x\n\n    let inline private gapSizeGeneric (screen : Screen) (size : ISize) =\n        \"is-\" + ISize.ToString size + Screen.ToString screen\n\n    let inline private gapSizeOnly (screen : Screen) (size : ISize) =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-\" + ISize.ToString size + Screen.ToString screen + \"-only\"\n        | x ->\n            let msg = sprintf \"Screen `%s` does not support `is-%s-%s-only`.\" (Screen.ToString x) (ISize.ToString size) (Screen.ToString x)\n            Fable.Core.JS.console.warn(msg)\n            \"\"\n\n    type Option =\n        /// Add `is-centered` class\n        | [<CompiledName(\"is-centered\")>] IsCentered\n        /// Add `is-vcentered` class\n        | [<CompiledName(\"is-vcentered\")>] IsVCentered\n        /// Add `is-multiline` class\n        | [<CompiledName(\"is-multiline\")>] IsMultiline\n        /// Add `is-gapless` class\n        | [<CompiledName(\"is-gapless\")>] IsGapless\n        /// Add `is-grid` class\n        | [<CompiledName(\"is-grid\")>] IsGrid\n        /// Add `is-mobile` class\n        | [<CompiledName(\"is-mobile\")>] IsMobile\n        /// Add `is-desktop` class\n        | [<CompiledName(\"is-desktop\")>] IsDesktop\n        /// Configure the gap size. You can configure the display and gap size\n        /// Example: Columns.IsGap (Columns.Desktop, Columns.Is6)\n        /// Becomes: `is-6-desktop`\n        | IsGap of Screen * ISize\n        /// Configure the gap size. You can configure the display and gap size\n        /// Example: Columns.IsGapOnly (Columns.Tablet, Columns.Is6)\n        /// Becomes: `is-6-tablet-only`\n        | IsGapOnly of Screen * ISize\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"columns\"></div>\n    let columns (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsCentered\n            | IsVCentered\n            | IsMultiline\n            | IsGapless\n            | IsGrid\n            | IsMobile\n            | IsDesktop -> result.AddCaseName option\n            | IsGap (screen, size) ->\n                if not (List.contains \"is-variable\" result.Classes) then\n                    result.AddClass(\"is-variable\").AddClass(gapSizeGeneric screen size)\n                else\n                    result.AddClass(gapSizeGeneric screen size)\n            | IsGapOnly (screen, size) ->\n                if not (List.contains \"is-variable\" result.Classes) then\n                    result.AddClass(\"is-variable\").AddClass(gapSizeOnly screen size)\n                else\n                    result.AddClass(gapSizeOnly screen size)\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"columns\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Column =\n\n    type ISize =\n        | [<CompiledName(\"is-one-quarter\")>] IsOneQuarter\n        | [<CompiledName(\"is-one-third\")>] IsOneThird\n        | [<CompiledName(\"is-half\")>] IsHalf\n        | [<CompiledName(\"is-two-thirds\")>] IsTwoThirds\n        | [<CompiledName(\"is-three-quarters\")>] IsThreeQuarters\n        | [<CompiledName(\"is-1\")>] Is1\n        | [<CompiledName(\"is-2\")>] Is2\n        | [<CompiledName(\"is-3\")>] Is3\n        | [<CompiledName(\"is-4\")>] Is4\n        | [<CompiledName(\"is-5\")>] Is5\n        | [<CompiledName(\"is-6\")>] Is6\n        | [<CompiledName(\"is-7\")>] Is7\n        | [<CompiledName(\"is-8\")>] Is8\n        | [<CompiledName(\"is-9\")>] Is9\n        | [<CompiledName(\"is-10\")>] Is10\n        | [<CompiledName(\"is-11\")>] Is11\n        | [<CompiledName(\"is-12\")>] Is12\n        | [<CompiledName(\"is-narrow\")>] IsNarrow\n        | [<CompiledName(\"is-full\")>] IsFull\n        | [<CompiledName(\"is-one-fifth\")>] IsOneFifth\n        | [<CompiledName(\"is-two-fifths\")>] IsTwoFifths\n        | [<CompiledName(\"is-three-fifths\")>] IsThreeFifths\n        | [<CompiledName(\"is-four-fifths\")>] IsFourFifths\n\n    type Option =\n        /// Configure the width of the column. You can configure the display and size\n        /// Example: Column.Width (Column.Desktop, Column.Is6)\n        /// Becomes: `is-6-desktop`\n        | Width of Screen * ISize\n        /// Configure the offset of the column. You can configure the display and offset size\n        /// Example: Column.Offset (Column.Desktop, Column.Is6)\n        /// Becomes: `is-offset-6-desktop`\n        | Offset of Screen * ISize\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    let private suffix = function\n        | Screen.All -> \"\"\n        | Screen.Desktop -> \"-desktop\"\n        | Screen.Tablet -> \"-tablet\"\n        | Screen.Mobile -> \"-mobile\"\n        | Screen.WideScreen -> \"-widescreen\"\n        | Screen.FullHD -> \"-fullhd\"\n        | Screen.Touch -> \"-touch\"\n\n    let internal ofWidth (screen, size) =\n        Reflection.getCaseName size + suffix screen\n\n    let internal ofOffset (screen, offset) =\n        let className = Reflection.getCaseName offset\n        \"is-offset-\" + className.[3..] + suffix screen\n\n    /// Generate <div class=\"column\"></div>\n    let column (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Width (screen, width) ->\n                ofWidth (screen, width) |> result.AddClass\n            | Offset (screen, offset) ->\n                ofOffset (screen, offset) |> result.AddClass\n            | CustomClass customClass ->\n                result.AddClass customClass\n            | Props props ->\n                result.AddProps props\n            | Modifiers modifiers ->\n                result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"column\")\n            .ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Container =\n\n    type Option =\n        /// Add `is-fluid` class\n        | [<CompiledName(\"is-fluid\")>] IsFluid\n        /// Add `is-widescreen` class\n        | [<CompiledName(\"is-widescreen\")>] IsWideScreen\n        /// Add `is-fullhd` class\n        | [<CompiledName(\"is-fullhd\")>] IsFullHD\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"container\"></div>\n    let container (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsFluid\n            | IsWideScreen\n            | IsFullHD -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"container\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Message =\n\n    type Option =\n        | Color of IColor\n        | Size of ISize\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <article class=\"message\"></article>\n    let message options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Color color -> ofColor color |> result.AddClass\n            | Size size -> ofSize size |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"message\").ToReactElement(article, children)\n\n    /// Generate <div class=\"message-header\"></div>\n    let header (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"message-header\").ToReactElement(div, children)\n\n    /// Generate <div class=\"message-body\"></div>\n    let body (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"message-body\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Table =\n\n    type TableOption =\n        /// Set `is-hovered` class\n        | [<CompiledName(\"is-bordered\")>]IsBordered\n        /// Set `is-striped` class\n        | [<CompiledName(\"is-striped\")>]IsStriped\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>]IsFullWidth\n        /// Set `is-narrow` class\n        | [<CompiledName(\"is-narrow\")>]IsNarrow\n        /// Set `is-hoverable` class\n        | [<CompiledName(\"is-hoverable\")>]IsHoverable\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <table class=\"table\"></table>\n    let table options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsBordered\n            | IsStriped\n            | IsFullWidth\n            | IsNarrow\n            | IsHoverable -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"table\").ToReactElement(table, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Menu =\n\n    /// Generate <aside class=\"menu\"></aside>\n    let menu (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"menu\").ToReactElement(aside, children)\n\n    /// Generate <p class=\"menu-label\"></p>\n    let label (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"menu-label\").ToReactElement(p, children)\n\n    /// Generate <div class=\"menu-list\"></div>\n    let list (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"menu-list\").ToReactElement(ul, children)\n\n    module Item =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | OnClick of (MouseEvent -> unit)\n            | Href of string\n            | Modifiers of Modifier.IModifier list\n\n        let private generateAnchor (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n                | Href href -> Props.Href href |> result.AddProp\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions).ToReactElement(a, children)\n\n        /// Generate <li><a></a></li>\n        /// You control the `a` element\n        let li (options: Option list) children =\n            li [ ] [ generateAnchor options children ]\n\n        /// Generate <a></a>\n        let a (options: Option list) children =\n            generateAnchor options children\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Control =\n\n    type Option =\n        /// Add `has-icons-right` class\n        | [<CompiledName(\"has-icons-right\")>] HasIconRight\n        /// Add `has-icons-left` class\n        | [<CompiledName(\"has-icons-left\")>] HasIconLeft\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    let internal controlView element options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | HasIconRight\n            | HasIconLeft\n            | IsExpanded -> result.AddCaseName option\n            | IsLoading state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"control\").ToReactElement(element, children)\n\n    /// Generate <div class=\"control\"></div>\n    let div x y = controlView div x y\n    /// Generate <p class=\"control\"></p>\n    let p x y = controlView p x y\n","module Twitcher.View\n\nopen Twitcher.Domain\nopen Twitcher.Model\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\nopen Fable.FontAwesome.Free\n\nopen System.Collections.Generic\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\n\nlet basicNavbar model dispatch =\n    Navbar.navbar [ ]\n        [ Navbar.Brand.div [ ]\n            [ Navbar.Item.a [ Navbar.Item.Props [ Href \"#\" ] ]\n                [ Icon.icon [ ] [\n                  Fa.i [Fa.Solid.Binoculars] [] ]\n                  Heading.p [ Heading.Is5 ] [ str \"Twitcher\" ]  ]]\n          Navbar.End.div [ ]\n            [ img [ Style [ Width \"7.65em\"; Height \"3.465em\"; Margin \"1em\" ] // 511 × 231\n                    Src \"assets/Turing-logo.png\" ] ] ]\n\nlet plotRectangularSector model =\n  let sectorInfo = model.SectorView.SectorDisplayArea\n  let minLon, minLat = sectorInfo.BottomLeft ||> CoordinateSystem.Mercator.xyToLonLat \n  let maxLon, maxLat = sectorInfo.TopRight ||> CoordinateSystem.Mercator.xyToLonLat \n  [\n    let visualCoordinates =\n        match model.SectorDisplay with        \n        | TopDown -> \n            [ minLon, maxLat\n              maxLon, maxLat\n              maxLon, minLat\n              minLon, minLat ]\n            |> List.map (fun (x,y) -> \n                let x', y' = CoordinateSystem.rescaleSectorToView TopDown (x * 1.<longitude>,y * 1.<latitude>,0.<ft>) model.SectorView\n                string x' + \",\" + string y')\n            |> String.concat \" \"\n        | LateralNorthSouth ->\n            [ minLon, sectorInfo.BottomAltitude\n              minLon, sectorInfo.TopAltitude\n              maxLon, sectorInfo.TopAltitude\n              maxLon, sectorInfo.BottomAltitude ]\n            |> List.map (fun (x,alt) -> \n                let x', alt' = CoordinateSystem.rescaleSectorToView LateralNorthSouth (x * 1.<longitude>,51. * 1.<latitude>,alt) model.SectorView\n                string x' + \",\" + string alt')\n            |> String.concat \" \"\n        | LateralEastWest ->\n            [ minLat, sectorInfo.BottomAltitude\n              minLat, sectorInfo.TopAltitude\n              maxLat, sectorInfo.TopAltitude\n              maxLat, sectorInfo.BottomAltitude ]\n            |> List.map (fun (y,alt) -> \n                let y', alt' = CoordinateSystem.rescaleSectorToView LateralEastWest (0. * 1.<longitude>,y * 1.<latitude>,alt) model.SectorView\n                string y' + \",\" + string alt')\n            |> String.concat \" \"            \n\n    yield! \n      ([ polygon\n        [\n          Points visualCoordinates\n          Style\n            [ Fill \"#f9f9f9\"\n              Stroke \"#4f4f4f\"\n              StrokeWidth \"2\"\n               ]\n        ] []])\n\n  ]\n\nlet sectorOutlineView model dispatch =\n  [\n      // 1. Plot the sector outline  \n      // TODO: plot the full outline - this plots only the rectangle\n\n      yield! plotRectangularSector model \n\n      // let points = sectors.sectors.[0]\n      // let sectorCoordinates =\n\n      //   points\n      //   |> Array.map (fun coord ->\n      //     CoordinateSystem.rescaleSectorToView (coord.Longitude, coord.Latitude, 0.0<ft>) model.SimulationViewSize)\n      \n      // let visualCoordinates = \n      //   match model.SectorDisplay with\n      //   | TopDown -> \n      //       sectorCoordinates \n      //       |> List.map (fun (x,y,_) -> string x + \",\" + string y)\n      //       |> String.concat \" \"\n\n      //   | LateralNorthSouth ->\n      //       let minX = sectorCoordinates |> List.map (fun (x,y,z) -> x) |> List.min\n      //       let maxX = sectorCoordinates |> List.map (fun (x,y,z) -> x) |> List.max\n            \n      //       // Get vertical bounds of the sector space\n      //       let _, _, minAlt = CoordinateSystem.rescaleSectorToView (points.[0].Longitude, points.[0].Latitude, CoordinateSystem.minAltitude) model.SimulationViewSize\n      //       let _, _, maxAlt = CoordinateSystem.rescaleSectorToView (points.[0].Longitude, points.[0].Latitude, CoordinateSystem.maxAltitude) model.SimulationViewSize\n            \n      //       [ string minX + \",\" + string maxAlt\n      //         string maxX + \",\" + string maxAlt\n      //         string maxX + \",\" + string minAlt\n      //         string minX + \",\" + string minAlt ]\n      //       |> String.concat \" \"\n\n      //   | LateralEastWest -> \n      //       // TODO rescale latitude correctly to \"x\" in svg element, right now it's still rescaled to y\n      //       let minY = sectorCoordinates |> List.map (fun (x,y,z) -> x) |> List.min\n      //       let maxY = sectorCoordinates |> List.map (fun (x,y,z) -> x) |> List.max\n            \n      //       // Get vertical bounds of the sector space\n      //       let _, _, minAlt = CoordinateSystem.rescaleSectorToView (points.[0].Longitude, points.[0].Latitude, CoordinateSystem.minAltitude) model.SimulationViewSize\n      //       let _, _, maxAlt = CoordinateSystem.rescaleSectorToView (points.[0].Longitude, points.[0].Latitude, CoordinateSystem.maxAltitude) model.SimulationViewSize\n            \n      //       [ string minY + \",\" + string maxAlt\n      //         string maxY + \",\" + string maxAlt\n      //         string maxY + \",\" + string minAlt\n      //         string minY + \",\" + string minAlt ]\n      //       |> String.concat \" \"\n\n      // yield! \n      //   ([ polygon\n      //     [\n      //       Points visualCoordinates\n      //       Style\n      //         [ Fill \"white\" ]\n      //     ] []])\n\n  ]\n\nlet roundToHalf value =\n  System.Math.Round(value * 2.0, System.MidpointRounding.ToEven) / 2.0\n\nlet areaLatitudesLongitudesView model dispatch =\n  let x0, y0 = \n    model.SectorView.SectorDisplayArea.BottomLeft\n    ||> CoordinateSystem.Mercator.xyToLonLat\n  let x1, y1 = \n    model.SectorView.SectorDisplayArea.TopRight\n    ||> CoordinateSystem.Mercator.xyToLonLat  \n  let a0, a1 =\n    float model.SectorView.SectorDisplayArea.BottomAltitude, float model.SectorView.SectorDisplayArea.TopAltitude\n\n  let xTicks = \n    match model.SectorDisplay with\n    | TopDown | LateralNorthSouth ->\n      [roundToHalf x0 .. 0.1 .. roundToHalf x1] \n      |> List.map (fun x -> \n          let x', y = CoordinateSystem.rescaleSectorToView model.SectorDisplay (x*1.<longitude>, y0*1.<latitude>, 0.<ft>) model.SectorView\n          string (System.Math.Round(x,2)) , x')\n    | LateralEastWest ->\n      [roundToHalf y0 .. 0.1 .. roundToHalf y1] \n      |> List.map (fun y -> \n          let x', y' = CoordinateSystem.rescaleSectorToView model.SectorDisplay (x0*1.<longitude>, y*1.<latitude>, 0.<ft>) model.SectorView\n          string (System.Math.Round(y,2)), x')  \n\n  let yTicks = \n    match model.SectorDisplay with\n    | TopDown ->\n      [ roundToHalf y0 .. 0.1 .. roundToHalf y1] \n      |> List.map (fun y -> \n          let x, y' = CoordinateSystem.rescaleSectorToView model.SectorDisplay (x0*1.<longitude>, y*1.<latitude>, 0.<ft>) model.SectorView\n          string (System.Math.Round(y,2)), y')\n    | LateralEastWest | LateralNorthSouth ->\n      [ a0 .. 5000. .. a1] \n      |> List.map (fun a -> \n          let x, y = CoordinateSystem.rescaleSectorToView model.SectorDisplay (x0*1.<longitude>, y0*1.<latitude>, a*1.<ft>) model.SectorView\n          \"FL\" + string (a/100.), y)     \n\n  [\n    yield! \n      xTicks \n      |> List.collect (fun (x, x') -> \n          [\n          text [\n              X (string x')\n              Y (string 15)\n              Style [ Fill \"#636363\"; FontSize \"12\" ]\n            ] [ str (string x) ]\n          text [\n              X (string x')\n              Y (string (snd model.SectorView.VisualisationViewSize - 10.))\n              Style [ Fill \"#636363\"; FontSize \"12\" ]\n            ] [ str (string x) ]  \n          line [\n            X1 (string x')\n            Y1 (string 0)\n            X2 (string x')\n            Y2 ((string (snd model.SectorView.VisualisationViewSize)))\n            Style [ Stroke \"#b3b3b3\"; StrokeWidth \"0.3\" ]\n          ] []\n          ])\n      \n    yield! \n      yTicks \n      |> List.collect (fun (y, y') -> \n          [\n          text [\n              X \"0.5%\"\n              Y (string y')\n              Style [ Fill \"#636363\"; FontSize \"12\" ]\n            ] [ str (string y) ]\n          // text [\n          //     X (\"98%\")\n          //     Y (string y')\n          //     Style [ Fill \"#636363\"; FontSize \"12\" ]\n          //   ] [ str (string y) ]  \n          line [\n            X1 (string 0)\n            Y1 (string y')\n            X2 ((string \"100%\"))\n            Y2 (string y')\n            Style [ Stroke \"#b3b3b3\"; StrokeWidth \"0.3\" ]\n          ] []\n          ])\n    \n  ]\n\nlet sectorView model dispatch =\n  [\n    yield! sectorOutlineView model dispatch\n    yield! areaLatitudesLongitudesView model dispatch\n  ]  \n\nlet simulationView model dispatch =\n  [\n  // 2. Plot loss of separation distance circle around all aircraft that are \"in conflict (lost separation)\"\n  yield!\n    model.Positions\n    |> List.filter (fun aircraft -> model.InConflict |> Array.contains aircraft.AircraftID)\n    |> List.map (fun aircraft ->\n        let position = aircraft.Position\n        let x,y = CoordinateSystem.rescaleSectorToView model.SectorDisplay (position.Coordinates.Longitude, position.Coordinates.Latitude, position.Altitude) model.SectorView\n\n        circle [\n          Cx (string x)\n          Cy (string y)\n          R (string (model.SeparationDistance.Value) + \"px\")\n          Style\n              [\n                Fill \"red\"\n                Opacity \"0.25\"\n              ]\n        ] []\n    )\n\n  // 3. Plot the actual aircraft as points\n  yield!\n    model.Positions\n    |> List.collect (fun aircraft ->\n        let position = aircraft.Position\n        let x,y = CoordinateSystem.rescaleSectorToView model.SectorDisplay (position.Coordinates.Longitude, position.Coordinates.Latitude, position.Altitude) model.SectorView\n        let past =\n          if (snd model.PositionHistory).ContainsKey aircraft.AircraftID then\n            (snd model.PositionHistory).[aircraft.AircraftID]\n            |> fun a -> a.[0..min a.Length 5]\n            |> Array.map (fun pastPosition -> // TODO - precompute this?\n              CoordinateSystem.rescaleSectorToView model.SectorDisplay (pastPosition.Coordinates.Longitude, pastPosition.Coordinates.Latitude, pastPosition.Altitude) model.SectorView)\n          else [||]\n        let selected = model.ViewDetails = Some(aircraft.AircraftID)\n        let conflict = model.InConflict |> Array.contains aircraft.AircraftID\n\n        [\n          // plot current position and past path\n          if past.Length > 0 then\n            let path =\n              Array.append past [|x,y|]\n              |> fun a -> if selected then a else Array.skip (a.Length - 11) a\n              |> Array.map (fun (x,y) -> string x + \",\" + string y)\n              |> String.concat \" \"\n            yield\n              polyline [\n                Points path\n                Style [\n                  Stroke \"grey\"\n                  Opacity (if selected then \"0.5\" else \"0.25\")\n                  StrokeWidth (if selected then \"3\" else \"2\")\n                  Fill \"none\"\n                ]\n              ] []\n\n          yield\n              circle [\n                Cx (string x)\n                Cy (string y)\n                R (if selected then \"7\" else if conflict then \"8\" else \"3\")\n                Style\n                    [ Stroke (if selected && not conflict then \"turquoise\" else if conflict then \"orange\" else \"black\")\n                      StrokeWidth (if selected || conflict then \"5\" else \"1\")\n                      Fill (if selected then (if conflict then \"orange\" else \"black\") else if conflict then \"orange\" else \"grey\") ]\n                OnClick (fun _ -> dispatch (ViewAircraftDetails aircraft.AircraftID))\n              ] []\n\n          // Callsign\n          yield\n            text [\n              X (string (x + 7.))\n              Y (string (y + 18.))\n              Style [ Fill \"black\"; FontSize \"20\" ]\n            ] [ str aircraft.AircraftID ]\n\n        ]\n        )\n        ]\n\n\nlet viewSimulation model dispatch =\n  Columns.columns [ Columns.IsCentered  ]\n    [\n      Column.column [ Column.Width(Screen.All, Column.IsFull) ] [\n        div [ \n          //ClassName \"svg-box\" \n          ] [\n          svg [\n            //ClassName \"svg-box-content\"\n            Style [ BackgroundColor \"#e0e0e0\" ]\n            Id \"simulation-viewer\"\n            SVGAttr.Width \"100%\"\n            SVGAttr.Height (model.SectorView.VisualisationViewSize |> snd |> string)\n            ]\n            [\n              yield! sectorView model dispatch\n              yield! simulationView model dispatch\n            ]\n        ]\n      ]\n    ]\n\n\nlet commandForm model dispatch =\n  Container.container []\n   (match model.FormModel with\n    | Some(CreateAircraftForm f) ->\n      [ AircraftForm.view f (CreateAircraftMsg >> dispatch) ]\n    | Some(ChangeAltitudeForm f) ->\n      [ AltitudeForm.view f (ChangeAltitudeMsg >> dispatch) ]\n    | Some(ChangeSpeedForm f) ->\n      [ SpeedForm.view f (ChangeSpeedMsg >> dispatch)]\n    | Some(ChangeHeadingForm f) ->\n      [ HeadingForm.view f (ChangeHeadingMsg >> dispatch)]\n    | Some(LoadScenarioForm f) ->\n      [ ScenarioForm.view f (LoadScenarioMsg >> dispatch)]\n    | None -> []\n    )\n\n\nlet viewAircraftDetails model dispatch =\n  div [] [\n    match model.ViewDetails with\n    | Some(aircraft) ->\n      let info = model.Positions |> List.find (fun ac -> ac.AircraftID = aircraft)\n\n      yield! [\n        Message.message [ Message.Color IsPrimary ] [\n          Message.header [] [\n            Icon.icon [ ] [ Fa.i [ Fa.Solid.Plane ] [] ]\n            str info.AircraftID\n            Delete.delete [ Delete.OnClick (fun _ -> dispatch CloseAircraftDetails) ] []\n          ]\n          Message.body [] [\n\n            Table.table [ Table.Props [ClassName \"table-no-border\"] ]\n              [\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Longitude\"] ]\n                    td []\n                      [ str (sprintf \"%.3f\" info.Position.Coordinates.Longitude) ]\n                    td [] []]\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Latitude\"] ]\n                    td []\n                      [ str (sprintf \"%.3f\" info.Position.Coordinates.Latitude) ]\n                    td [] []]\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Course\"] ]\n                    td []\n                      [\n                          match info.Heading with\n                          | Some(x) -> yield (str (sprintf \"%.1f\" x + \"°\"))\n                          | None -> yield (Button.a [ Button.IsLoading true; Button.IsOutlined; Button.IsText; Button.Size IsSmall ] [ str \"Loading\" ])\n                           ]\n                    td [] [\n                      Button.button\n                        [ Button.OnClick (fun _ -> dispatch (ShowChangeHeadingForm info))\n                          Button.Color IsPrimary\n                          Button.IsOutlined ]\n                        [ Icon.icon [ ] [ Fa.i [Fa.Solid.LocationArrow] [] ]\n                          Text.span [] [ str \"Change heading\" ]]]]\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Altitude\"] ]\n                    td []\n                      [ str (sprintf \"%.0f ft\" info.Position.Altitude) ]\n                    td [] [\n                      Button.button\n                        [ Button.OnClick (fun _ -> dispatch (ShowChangeAltitudeForm info))\n                          Button.Color IsPrimary\n                          Button.IsOutlined ]\n                        [ Icon.icon [ ] [ Fa.i [Fa.Solid.ArrowsAltV] [] ]\n                          Text.span [] [str \"Change\" ]]]\n                  ]\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Ground speed\"] ]\n                    td []\n                      [ str (\n                          match info.GroundSpeed with\n                          | Some(s) -> sprintf \"%.0f\" s + \" knots\"\n                          | None  -> \"unknown\" ) ]\n                    td [] [\n                      Button.button\n                          [ Button.OnClick (fun _ -> dispatch (ShowChangeSpeedForm info))\n                            Button.Color IsPrimary\n                            Button.IsOutlined ]\n                          [ Icon.icon [ ] [ Fa.i [Fa.Solid.TachometerAlt][] ]\n                            Text.span [] [str \"Change calib. air speed\" ]]]\n                    ]\n                tr []\n                  [ td [] [ Heading.h6 [] [str \"Vertical speed\"] ]\n                    td []\n                      [ str (\n                          match info.VerticalSpeed with\n                          | Some(s) -> sprintf \"%.1f\" s + \" ft/min\"\n                          | None -> \"unknown\") ]\n                    td [] []]\n              ]\n\n\n          ]\n        ]\n      ]\n    | None ->\n      yield! []\n  ]\n\nlet viewPositionTable model dispatch =\n  Table.table [ Table.IsHoverable;  ]\n      [ thead [ ]\n          [ tr [ ]\n              [ th [ ] [ str \"Aircraft ID\" ]\n                th [ ] [ str \"Latitude\" ]\n                th [ ] [ str \"Longitude\" ]\n                th [ ] [ str \"Altitude\" ] ] ]\n        tbody [ ]\n          (model.Positions\n          |> List.map (fun pos ->\n              let className = [\n                if model.InConflict |> Array.contains pos.AircraftID then\n                    yield  \"is-warning\"\n                  else\n                    yield  \"\"\n                match model.ViewDetails with\n                  | Some(acid) when acid = pos.AircraftID ->\n                      yield  \"is-bold \"\n                  | _ -> yield  \"\"\n                if CoordinateSystem.isInViewSector (pos.Position.Coordinates.Longitude, pos.Position.Coordinates.Latitude, pos.Position.Altitude) model.SectorView then\n                   yield  \"\"\n                else\n                   yield \"is-greyed-out\" ] |> String.concat \" \"\n\n              tr [ OnClick (fun _ -> dispatch (ViewAircraftDetails pos.AircraftID)) :> IHTMLProp\n                   ClassName className ]\n                  [ td [] [str pos.AircraftID]\n                    td [] [str (sprintf \"%.3f\" pos.Position.Coordinates.Latitude)]\n                    td [] [str (sprintf \"%.3f\" pos.Position.Coordinates.Longitude)]\n                    td [] [str (sprintf \"%.0f ft\" (float pos.Position.Altitude)) ] ]\n            ))\n       ]\n\n\nlet viewTimer model dispatch =\n  Level.level [ ]\n    [ Level.item [ Level.Item.HasTextCentered ]\n        [ div [ ]\n            [ Level.heading [ ]\n                [ str \"Simulation time\" ]\n              Level.title [ ]\n                [ str (\n                    sprintf \"%02d:%02d:%02d\"\n                      model.SimulationTime.Hours\n                      model.SimulationTime.Minutes\n                      model.SimulationTime.Seconds\n                )]\n            ]\n        ]\n    ]\n\nlet viewScore model dispatch =\n  Level.level [ ]\n    [ \n        Level.item [ Level.Item.HasTextCentered ]\n          [ div [] [\n              Level.heading [ ]\n                [ str \"Score\"  ]\n              Level.title [ ]\n                [ str (\n                    sprintf \"%.1f\" model.Score\n                )]\n            ]\n          ]\n    ]\n\nlet viewControlMenu model dispatch =\n  Menu.menu [ ]\n    [ Menu.label [ ] [ str \"General controls\" ]\n      Menu.list [ ]\n        [ Menu.Item.li\n            [ Menu.Item.OnClick (fun _ -> dispatch Observe) ] [\n            Icon.icon [ ] [ Fa.i [Fa.Solid.Binoculars][] ]\n            str \"Run as observer\" ]\n\n          Menu.Item.li\n            [ Menu.Item.OnClick (fun _ -> dispatch (LoadScenario \"scenario/test-scenario.scn\")) ] [\n            //[ Menu.Item.OnClick (fun _ -> dispatch ShowLoadScenarioForm) ] [\n            Icon.icon [ ] [ Fa.i [Fa.Solid.FileImport ][]]\n            str \"Load test scenario\" ]\n\n          Menu.Item.li\n            [ Menu.Item.OnClick (fun _ -> dispatch ResetSimulator) ] [\n            Icon.icon [ ] [ Fa.i [Fa.Solid.Times][] ]\n            str \"Reset simulator\" ]\n        ]\n\n      Menu.label [ ] [ str \"Simulation controls\" ]\n      Menu.list [ ]\n        [\n          Menu.Item.li\n            [ Menu.Item.OnClick (fun _ -> dispatch ResumeSimulation)\n              (\n                match model.State with\n                 | ActiveSimulation Paused ->\n                    Menu.Item.Props []\n                 | _ ->\n                    Menu.Item.Props [ ClassName \"is-disabled\" ])\n             ] [\n              Icon.icon [ ] [ Fa.i [Fa.Solid.Play][] ]\n              str \"Play/Resume\" ]\n\n          Menu.Item.li\n            [ Menu.Item.OnClick (fun _ -> dispatch PauseSimulation)\n              (\n                match model.State with\n                 | ActiveSimulation Playing ->\n                    Menu.Item.Props []\n                 | _ ->\n                    Menu.Item.Props [ ClassName \"is-disabled\" ])\n             ] [\n              Icon.icon [ ] [ Fa.i [Fa.Solid.Pause][] ]\n              Text.span [] [ str \"Pause\"]\n\n             ]\n\n          Menu.Item.li\n            [ (match model.State with\n                 | ActiveSimulation Playing | ActiveSimulation Observing | ReplaySimulation ->\n                    Menu.Item.Props []\n                 | _ ->\n                    Menu.Item.Props [ ClassName \"is-disabled\" ])\n             ] [\n              Icon.icon [ ] [ Fa.i [Fa.Solid.TachometerAlt][] ]\n              Text.span [] [ str \"Simulator speed\"]\n              Field.div [ Field.HasAddons ]\n                [\n                  Control.div [] [\n                    Button.button\n                      [ Button.Size IsSmall;\n                        Button.Color (if model.SimulationSpeed = 0.5 then IsLight else IsWhite)\n                        Button.OnClick (fun _ -> dispatch (SetSimulationRateMultiplier 0.5)) ]\n                      [ str \"0.5×\"] ]\n                  Control.div [] [\n                    Button.button\n                      [ Button.Size IsSmall;\n                        Button.Color (if model.SimulationSpeed = 1.0 then IsLight else IsWhite)\n                        Button.OnClick (fun _ -> dispatch (SetSimulationRateMultiplier 1.0)) ]\n                      [ str \"1×\"] ]\n                  Control.div [] [\n                    Button.button\n                      [ Button.Size IsSmall;\n                        Button.Color (if model.SimulationSpeed = 2.0 then IsLight else IsWhite)\n                        Button.OnClick (fun _ -> dispatch (SetSimulationRateMultiplier 2.0)) ]\n                      [ str \"2×\"] ]\n                  Control.div [] [\n                    Button.button\n                      [ Button.Size IsSmall;\n                        Button.Color (if model.SimulationSpeed = 5.0 then IsLight else IsWhite)\n                        Button.OnClick (fun _ -> dispatch (SetSimulationRateMultiplier 5.0)) ]\n                      [ str \"5×\"] ]\n                  Control.div [] [\n                    Button.button\n                      [ Button.Size IsSmall;\n                        Button.Color (if model.SimulationSpeed = 10. then IsLight else IsWhite)\n                        Button.OnClick (fun _ -> dispatch (SetSimulationRateMultiplier 10.)) ]\n                      [ str \"10×\"] ]\n                ]\n\n             ]\n        ]\n\n      Menu.label [ ] [ str \"Aircraft controls\" ]\n      Menu.list [ ]\n        [\n          Menu.Item.li [\n            Menu.Item.OnClick (fun _ -> dispatch ShowCreateAircraftForm)\n            (\n              match model.State with\n               | ActiveSimulation _ ->\n                  Menu.Item.Props []\n               | _ ->\n                  Menu.Item.Props [ ClassName \"is-disabled\" ])\n            ] [\n              Icon.icon [ ] [ Fa.i [Fa.Solid.Plane][] ]\n              Text.span [] [ str \"Create aircraft\"]\n            ]\n          ]\n\n      ]\n\nlet viewDisplayMenu model dispatch =\n  div [] [\n  Menu.menu [ ]\n    [ Menu.label [ ] [ str \"Display controls\" ]\n      Field.div [ Field.HasAddons ]\n        [\n          Control.div [] [\n            Button.button\n              [ Button.Size IsMedium;\n                Button.Color (if model.SectorDisplay = TopDown then IsLight else IsWhite)\n                Button.OnClick (fun _ -> dispatch (ChangeDisplay SectorDisplay.TopDown)) ]\n              [ Icon.icon [ ] [ Fa.i [Fa.Solid.Eye ][] ]] \n            Button.button\n              [ Button.Size IsMedium;\n                Button.Color (if model.SectorDisplay = LateralEastWest then IsLight else IsWhite)\n                Button.OnClick (fun _ -> dispatch (ChangeDisplay SectorDisplay.LateralEastWest)) ]\n              [ Icon.icon [ ] [ Fa.i [Fa.Solid.ArrowsAltH ][] ]] \n            Button.button\n              [ Button.Size IsMedium;\n                Button.Color (if model.SectorDisplay = LateralNorthSouth then IsLight else IsWhite)\n                Button.OnClick (fun _ -> dispatch (ChangeDisplay SectorDisplay.LateralNorthSouth)) ]\n              [ Icon.icon [ ] [ Fa.i [Fa.Solid.ArrowsAltV ][] ]] \n          ]\n        ]\n      ]\n  br []\n  ]\n\nlet view model dispatch =\n    Hero.hero [  ]\n      [\n        basicNavbar model dispatch\n\n        Container.container [ ]\n\n             (match model.State with\n               | NotConnected ->\n                   [ Button.button [ Button.OnClick (fun _ -> dispatch Init); Button.IsFullWidth ] [ str \"Start\" ] ]\n               | ConnectionFailed ->\n                   [ Heading.p [ Heading.Is3 ] [ str \"Connection failed\" ] ]\n               | _ ->\n                  [\n                    Columns.columns []\n                      [\n                        Column.column [ Column.Width(Screen.All, Column.IsFull)]\n                          [\n                            viewSimulation model dispatch\n                          ]\n                      ]\n\n                    viewScore model dispatch\n\n                    viewTimer model dispatch\n\n                    Columns.columns [\n                      Columns.IsCentered  ]\n                      [\n                        Column.column [ Column.Width(Screen.All, Column.Is2)]\n                          [\n                            viewDisplayMenu model dispatch\n                            viewControlMenu model dispatch\n                          ]\n\n                        Column.column [ Column.Width(Screen.All, Column.Is4) ] [\n\n                            //viewPositionTable model dispatch\n                        ]\n\n                        Column.column [ Column.Width(Screen.All, Column.Is5)] [\n                          viewAircraftDetails model dispatch\n                        ]\n\n                      ]\n\n                    commandForm model dispatch\n\n                   ] )]\n","module Twitcher.HeadingForm\n\nopen Twitcher.Domain\nopen Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\n\ntype FormModel =\n  { AircraftID : string\n    CurrentHeading : Heading option\n    NewHeading : string\n    CheckFields : bool\n   }\n\ntype Msg =\n  | ChangeHeading of string\n  | SubmitForm\n  | Cancel\n  | Error\n  | CheckFields\n\ntype ExternalMsg =\n    | NoOp\n    | Submit of AircraftID * Heading\n    | Cancel\n\nlet init(aircraftID, heading) =\n  { AircraftID = aircraftID\n    CurrentHeading = heading\n    NewHeading = \"\"\n    CheckFields = false },\n  Cmd.none\n\n\nlet update msg model =\n  match msg with\n  | ChangeHeading x ->\n      { model with NewHeading = x}, Cmd.none, NoOp\n\n  | SubmitForm ->\n      { model with CheckFields = true},\n      Cmd.ofMsg CheckFields,\n      NoOp\n\n  | Msg.Cancel ->\n      model, Cmd.none, ExternalMsg.Cancel\n\n  | Error\n\n  | CheckFields ->\n      if (model.NewHeading |> checkFloat) then\n        let heading = float model.NewHeading % 360.\n        model, Cmd.none, ExternalMsg.Submit (model.AircraftID, heading)\n      else\n        model, Cmd.none, NoOp\n\n\nlet view model (dispatch: Msg -> unit) =\n  Modal.modal [ Modal.IsActive true ]\n      [ Modal.background [ Props [ OnClick (fun _ -> dispatch Msg.Cancel) ] ] [ ]\n        Modal.content [ ]\n          [ Box.box' [ ] [\n              Heading.p [ Heading.Is5 ] [ str \"Change heading\" ]\n\n              Level.level []\n                (match model.CurrentHeading with\n                 | Some(hdg) ->\n                   [ Level.item [Level.Item.HasTextCentered ] [\n                      div []\n                        [ Level.heading [] [ str \"Current course\"]\n                          Level.title [] [ str (sprintf \"%.1f°\" hdg ) ] ]\n                    ] ]\n                 | None -> [])\n\n              form [ ]\n                [ // TODO display current heading\n                  formItem\n                    \"Heading\"\n                    model.NewHeading\n                    ChangeHeading\n                    model.CheckFields\n                    checkFloat\n                    \"Heading must be a number\"\n                    (Some (str \"Heading is the clock-wise angle to North in degrees.\" ))\n                    dispatch\n                ]\n              hr []\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch SubmitForm)\n                    Button.Color Color.IsPrimary ]\n                  [str \"Submit\"]\n              Button.button\n                  [ Button.OnClick (fun _ -> dispatch Msg.Cancel)\n                    Button.Color Color.IsGrey ]\n                  [str \"Cancel\"]\n          ]\n          ]\n        Modal.close [ Modal.Close.Size IsLarge\n                      Modal.Close.OnClick (fun _ -> dispatch Msg.Cancel) ] [ ] ]\n","\nmodule Twitcher.ScenarioForm\n\nopen Twitcher.Domain\nopen Twitcher.Form\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\n\n\ntype FormModel =\n  { Path : string\n    CheckFields : bool\n   }\n\ntype Msg =\n  | ChangePath of string\n  | SubmitForm\n  | Cancel\n  | Error\n\ntype ExternalMsg =\n    | NoOp\n    | Submit of string\n    | Cancel\n\nlet init() =\n  { Path = \"\"; CheckFields = false },\n  Cmd.none\n\nlet update msg model =\n  match msg with\n  | ChangePath x ->\n      { model with Path = x}, Cmd.none, NoOp\n\n  | SubmitForm ->\n      model, Cmd.none, ExternalMsg.Submit model.Path\n\n  | Msg.Cancel ->\n      model, Cmd.none, ExternalMsg.Cancel\n\n  | Error ->\n        model, Cmd.none, NoOp\n\n\nlet view model (dispatch: Msg -> unit) =\n  Modal.modal [ Modal.IsActive true ]\n      [ Modal.background [ Props [ OnClick (fun _ -> dispatch Msg.Cancel) ] ] [ ]\n        Modal.content [ ]\n          [ Box.box' [ ] [\n              Heading.p [ Heading.Is5 ] [ str \"Select scenario file\" ]\n              form [] [\n                formItem\n                    \"File path\"\n                    model.Path\n                    ChangePath\n                    model.CheckFields\n                    (fun _ -> true)\n                    \"Please enter a valid path\"\n                    None\n                    dispatch\n\n\n                Field.div [ ]\n                    [ File.file [\n                          File.HasName\n                          File.Option.Props [\n                            OnChange (fun ev -> !!ev.target?value |> ChangePath |> dispatch) ]]\n                        [ File.label [ ]\n                            [ File.input [  ]\n                              File.cta [ ]\n                                [ File.icon [ ]\n                                    [ Icon.icon [ ] [ Fa.i [Fa.Solid.Upload][] ] ]\n                                  File.label [ ]\n                                    [ str \"Choose a file...\" ] ]\n                              File.name [ ]\n                                [ str model.Path ] ] ] ]\n\n                hr []\n                Button.button\n                    [ Button.OnClick (fun _ -> dispatch SubmitForm)\n                      Button.Color Color.IsPrimary ]\n                    [str \"Submit\"]\n                Button.button\n                    [ Button.OnClick (fun _ -> dispatch Msg.Cancel)\n                      Button.Color Color.IsGrey ]\n                    [str \"Cancel\"]\n              ]\n          ]\n          ]\n        Modal.close [ Modal.Close.Size IsLarge\n                      Modal.Close.OnClick (fun _ -> dispatch Msg.Cancel) ] [ ] ]\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Delete =\n\n    type Option =\n        | Size of ISize\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | OnClick of (MouseEvent -> unit)\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <a class=\"delete\"></a>\n    let delete (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            // Sizes\n            | Size size -> ofSize size |> result.AddClass\n            // Extra\n            | OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"delete\").ToReactElement(a, children)\n","namespace Elmish\n\n(**\nLog\n---------\nBasic cross-platform logging API.\n\n*)\nmodule internal Log =\n\n#if FABLE_COMPILER\n    open Fable.Core.JS\n\n    let onError (text: string, ex: exn) = console.error (text,ex)\n    let toConsole(text: string, o: #obj) = console.log(text,o)\n\n#else\n#if NETSTANDARD2_0\n    let onError (text: string, ex: exn) = System.Diagnostics.Trace.TraceError(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#else\n    let onError (text: string, ex: exn) = System.Console.Error.WriteLine(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#endif\n#endif\n","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let update msg model =\n            let state,cmd = program.update msg model\n            trace msg state\n            state,cmd\n        { program\n            with update = update }\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: get the current error handler \n    let onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        program.onError\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","module Twitcher.App\n\nopen Twitcher.Domain\nopen Twitcher.Model\nopen Twitcher.CoordinateSystem\nopen Twitcher.Update\nopen Twitcher.View\nopen Twitcher.Commands\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\n\n\nopen Elmish.React\n\nopen Fable.Import\nopen Fable.Core.JsInterop\nopen Thoth.Json\nopen System.Collections.Generic\n\n\n\nlet init() =\n  // default sector display area is the college airspace\n  let sectorDisplayArea = {\n    BottomLeft = CoordinateSystem.Mercator.lonLatToXY -2.5 50.3 //-3.974833333 49.0675 \n    TopRight = CoordinateSystem.Mercator.lonLatToXY 1.4 52.0 //5.090666667 53.80883333\n    BottomAltitude = 0.0<ft>\n    TopAltitude = 45000.<ft>\n  }\n\n  {     \n    Positions = []\n    Animate = false\n    Config = None\n    Sector = None\n    SectorDisplay = TopDown\n    SectorView = {\n      VisualisationViewSize = 0., 0.\n      SectorDisplayArea = sectorDisplayArea\n    }\n    State = NotConnected\n    FormModel = None\n    SimulationViewSize = 0.,0.\n    ViewDetails = None\n    PositionHistory = 0, (Dictionary<AircraftID, Position []>())\n    InConflict = [||]\n    SeparationDistance = None\n    SimulationSpeed = 1.0\n    SimulationTime = System.TimeSpan.FromSeconds(0.0)\n\n    Score = 0.\n   },\n  Cmd.batch [\n    Cmd.ofMsg Init\n    Cmd.ofMsg LoadSector\n  ]\n// TODO save state into cookie to stay through refresh?\n\nopen Elmish.Debug\nopen Elmish.HMR  // hot module reloading\n\nProgram.mkProgram init update view\n|> Program.withReactSynchronous \"elmish-app\"\n|> Program.withConsoleTrace\n|> Program.run\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Hero =\n\n    type Option =\n        /// Add `is-bold` class\n        | [<CompiledName(\"is-bold\")>] IsBold\n        /// Add `is-medium` class\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        /// Add `is-large` class\n        | [<CompiledName(\"is-large\")>] IsLarge\n        /// Add `is-halfheight` class\n        | [<CompiledName(\"is-halfheight\")>] IsHalfHeight\n        /// Add `is-fullheight-with-navbar` class\n        | [<CompiledName(\"is-fullheight-with-navbar\")>] IsFullheightWithNavbar\n        /// Add `is-fullheight` class\n        | [<CompiledName(\"is-fullheight\")>] IsFullHeight\n        | Color of IColor\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"hero\"></div>\n    let hero (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsMedium\n            | IsLarge\n            | IsHalfHeight\n            | IsFullHeight\n            | IsFullheightWithNavbar\n            | IsBold -> result.AddCaseName option\n            | Color color -> ofColor color |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"hero\").ToReactElement(div, children)\n\n    /// Generate <div class=\"hero-head\"></div>\n    let head (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"hero-head\").ToReactElement(div, children)\n\n    /// Generate <div class=\"hero-body\"></div>\n    let body (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"hero-body\").ToReactElement(div, children)\n\n    /// Generate <div class=\"hero-foot\"></div>\n    let foot (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"hero-foot\").ToReactElement(div, children)\n\n    /// Generate <div class=\"hero-video\"></div>\n    let video (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"hero-video\").ToReactElement(div, children)\n\n    /// Generate <div class=\"hero-buttons\"></div>\n    let buttons (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"hero-buttons\").ToReactElement(div, children)\n"],"sourceRoot":""}